{"ast":null,"code":"var _jsxFileName = \"/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getTopArtists, getRandomArtists, loggedin } from './Utils'; // Import necessary functions from utils.js\nimport htmlToImage from 'html-to-image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TierList = () => {\n  _s();\n  var _droppedItems$items;\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n  const [droppedItems, setDroppedItems] = useState({\n    S: [],\n    A: [],\n    B: [],\n    C: [],\n    D: []\n  });\n  const [draggableItems, setDraggableItems] = useState([]);\n  const [numArtists, setNumArtists] = useState(10); // Default number of artists to display\n  const [droppedArtistIds, setDroppedArtistIds] = useState(new Set());\n  const handleSaveAsImage = () => {\n    const tierListContainer = document.getElementById('tier-list-container');\n\n    // Use html-to-image to capture the content of tierListContainer as an image\n    htmlToImage.toPng(tierListContainer).then(function (dataUrl) {\n      // Create an <a> element to download the image\n      const link = document.createElement('a');\n      link.download = 'tier_list.png';\n      link.href = dataUrl;\n      link.click();\n    }).catch(function (error) {\n      console.error('Error saving tier list as image:', error);\n    });\n  };\n  useEffect(() => {\n    const fetchTopArtistsData = async () => {\n      try {\n        if (!loggedin()) {\n          console.log('User not logged in');\n          return;\n        }\n        const accessToken = localStorage.getItem('access_token');\n        const initialDroppedItems = tiers.reduce((acc, tier) => {\n          acc[tier] = [];\n          return acc;\n        }, {});\n        let allArtists = [];\n        const artistIdsSet = new Set(); // Use a Set to keep track of unique artist IDs\n        const limit = 100; // Maximum limit to fetch more artists\n        let offset = 0;\n\n        // Fetch more artists than needed to ensure enough unique ones\n        while (artistIdsSet.size < numArtists) {\n          const topArtistsData = await getTopArtists(accessToken, limit, offset);\n          if (!topArtistsData || !topArtistsData.items || topArtistsData.items.length === 0) {\n            break; // No more artists to fetch\n          }\n\n          // Filter and collect unique artists\n          topArtistsData.items.forEach(artist => {\n            if (!artistIdsSet.has(artist.id)) {\n              artistIdsSet.add(artist.id);\n              allArtists.push(artist);\n            }\n          });\n          offset += limit;\n        }\n\n        // Take only the specified number of unique artists\n        const uniqueArtists = allArtists.slice(0, numArtists);\n\n        // Update droppedItems state with fetched artists\n        setDroppedItems({\n          ...initialDroppedItems,\n          items: uniqueArtists\n        });\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Call the function to fetch data when the component mounts or when numArtists changes\n    fetchTopArtistsData();\n  }, [numArtists]); // Trigger effect whenever numArtists changes\n\n  // Function to handle dropping an artist into a tier\n  const handleDrop = (tier, itemId, e) => {\n    e.preventDefault();\n\n    // Update droppedItems state to add the dropped artist to the specified tier\n    setDroppedItems(prevItems => ({\n      ...prevItems,\n      [tier]: [...prevItems[tier], itemId]\n    }));\n\n    // Remove the dropped artist from draggableItems\n    setDraggableItems(prevItems => prevItems.filter(item => item.id !== itemId));\n  };\n\n  // Function to remove an artist from a tier\n  const handleClearDrop = (tier, itemId) => {\n    // Remove the dropped item (artist) from the specified tier\n    setDroppedItems(prevItems => ({\n      ...prevItems,\n      [tier]: prevItems[tier].filter(item => item.id !== itemId)\n    }));\n\n    // Add the removed artist back to draggableItems\n    setDraggableItems(prevItems => [...prevItems, {\n      id: itemId\n    }]);\n\n    // Remove artist ID from droppedArtistIds\n    setDroppedArtistIds(prevIds => {\n      const newIds = new Set(prevIds);\n      newIds.delete(itemId);\n      return newIds;\n    });\n  };\n\n  // Function to allow dropping items\n  const allowDrop = e => {\n    e.preventDefault();\n  };\n\n  // Component to render a draggable artist\n  const DraggableArtist = ({\n    artist,\n    isSplitName\n  }) => {\n    const imageUrl = artist.images && artist.images.length > 0 ? artist.images[0].url : '';\n    const handleDragStart = e => {\n      e.dataTransfer.setData('application/json', JSON.stringify({\n        id: artist.id,\n        imageUrl\n      }));\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"draggable-artist\",\n      draggable: true,\n      onDragStart: handleDragStart,\n      children: [imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: artist.name,\n        style: {\n          width: 90,\n          height: 90\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this) // Ten poprawnie działający image\n      : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 90,\n          height: 90,\n          backgroundColor: 'lightgray',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: \"No Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), isSplitName && numArtists === 10 ? artist.name.split(' ').map((part, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '0.2em 0'\n        },\n        children: part\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: artist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Component to render a tier\n  const Tier = ({\n    tier\n  }) => {\n    var _droppedItems$tier;\n    const handleDropLocal = e => {\n      e.preventDefault();\n\n      // Log the data being retrieved from dataTransfer\n      const jsonData = e.dataTransfer.getData('application/json');\n      console.log('Drag data:', jsonData);\n\n      // Proceed with parsing and handling the dropped data\n      try {\n        const {\n          id,\n          imageUrl\n        } = JSON.parse(jsonData);\n        console.log('Parsed JSON:', id, imageUrl);\n\n        // Update droppedItems for the current tier\n        setDroppedItems(prevItems => ({\n          ...prevItems,\n          [tier]: [...prevItems[tier], {\n            id,\n            imageUrl\n          }]\n        }));\n\n        // Remove the dropped item from draggableItems\n        setDraggableItems(prevItems => prevItems.filter(item => item.id !== id));\n\n        // Remove the dropped item from the main draggableItems list\n        setDroppedArtistIds(prevIds => {\n          const newIds = new Set(prevIds);\n          newIds.add(id);\n          return newIds;\n        });\n      } catch (error) {\n        console.error('JSON Parse Error:', error);\n      }\n    };\n    const handleItemClick = itemId => {\n      // Remove item (artist) from droppedItems of the current tier\n      handleClearDrop(tier, itemId);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tier\",\n      onDrop: handleDropLocal,\n      onDragOver: allowDrop,\n      children: (_droppedItems$tier = droppedItems[tier]) === null || _droppedItems$tier === void 0 ? void 0 : _droppedItems$tier.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artist-item\",\n        onClick: () => handleItemClick(artist.id),\n        children: [artist.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: artist.imageUrl,\n          alt: artist.name,\n          style: {\n            width: 90,\n            height: 90\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 90,\n            height: 90,\n            backgroundColor: 'lightgray',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: \"No Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 5\n        }, this)]\n      }, artist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 3\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tier-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tier List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveAsImage,\n      children: \"Save as Image (1024 x 1024)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tier-list\",\n      children: tiers.map(tier => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tier-pair\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tier-name tier-${tier.toLowerCase()}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: tier\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tier, {\n          tier: tier\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), \" \"]\n      }, tier, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numArtists\",\n        children: \"Number of Artists:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"numArtists\",\n        value: numArtists,\n        onChange: e => setNumArtists(parseInt(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 25,\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-container\",\n      children: (_droppedItems$items = droppedItems.items) === null || _droppedItems$items === void 0 ? void 0 : _droppedItems$items.filter(artist => !droppedArtistIds.has(artist.id)).map(artist => /*#__PURE__*/_jsxDEV(DraggableArtist, {\n        artist: artist,\n        isSplitName: true\n      }, artist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(TierList, \"ZEw65oOOQ8XJwPh4KzP0PmvGmcU=\");\n_c = TierList;\nexport default TierList;\nvar _c;\n$RefreshReg$(_c, \"TierList\");","map":{"version":3,"names":["React","useState","useEffect","getTopArtists","getRandomArtists","loggedin","htmlToImage","jsxDEV","_jsxDEV","TierList","_s","_droppedItems$items","tiers","droppedItems","setDroppedItems","S","A","B","C","D","draggableItems","setDraggableItems","numArtists","setNumArtists","droppedArtistIds","setDroppedArtistIds","Set","handleSaveAsImage","tierListContainer","document","getElementById","toPng","then","dataUrl","link","createElement","download","href","click","catch","error","console","fetchTopArtistsData","log","accessToken","localStorage","getItem","initialDroppedItems","reduce","acc","tier","allArtists","artistIdsSet","limit","offset","size","topArtistsData","items","length","forEach","artist","has","id","add","push","uniqueArtists","slice","handleDrop","itemId","e","preventDefault","prevItems","filter","item","handleClearDrop","prevIds","newIds","delete","allowDrop","DraggableArtist","isSplitName","imageUrl","images","url","handleDragStart","dataTransfer","setData","JSON","stringify","className","draggable","onDragStart","children","src","alt","name","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","display","justifyContent","alignItems","split","map","part","index","margin","Tier","_droppedItems$tier","handleDropLocal","jsonData","getData","parse","handleItemClick","onDrop","onDragOver","onClick","toLowerCase","htmlFor","value","onChange","parseInt","target","_c","$RefreshReg$"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getTopArtists, getRandomArtists, loggedin } from './Utils'; // Import necessary functions from utils.js\nimport htmlToImage from 'html-to-image';\n\n\n\nconst TierList = () => {\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n  const [droppedItems, setDroppedItems] = useState({ S: [], A: [], B: [], C: [], D: [] });\n  const [draggableItems, setDraggableItems] = useState([]);\n  const [numArtists, setNumArtists] = useState(10); // Default number of artists to display\n  const [droppedArtistIds, setDroppedArtistIds] = useState(new Set());\n\n\n\n  const handleSaveAsImage = () => {\n    const tierListContainer = document.getElementById('tier-list-container');\n  \n    // Use html-to-image to capture the content of tierListContainer as an image\n    htmlToImage.toPng(tierListContainer)\n      .then(function (dataUrl) {\n        // Create an <a> element to download the image\n        const link = document.createElement('a');\n        link.download = 'tier_list.png';\n        link.href = dataUrl;\n        link.click();\n      })\n      .catch(function (error) {\n        console.error('Error saving tier list as image:', error);\n      });\n  };\n\n  \n  useEffect(() => {\n    const fetchTopArtistsData = async () => {\n      try {\n        if (!loggedin()) {\n          console.log('User not logged in');\n          return;\n        }\n\n        const accessToken = localStorage.getItem('access_token');\n        const initialDroppedItems = tiers.reduce((acc, tier) => {\n          acc[tier] = [];\n          return acc;\n        }, {});\n\n        let allArtists = [];\n        const artistIdsSet = new Set(); // Use a Set to keep track of unique artist IDs\n        const limit = 100; // Maximum limit to fetch more artists\n        let offset = 0;\n\n        // Fetch more artists than needed to ensure enough unique ones\n        while (artistIdsSet.size < numArtists) {\n          const topArtistsData = await getTopArtists(accessToken, limit, offset);\n          if (!topArtistsData || !topArtistsData.items || topArtistsData.items.length === 0) {\n            break; // No more artists to fetch\n          }\n\n          // Filter and collect unique artists\n          topArtistsData.items.forEach((artist) => {\n            if (!artistIdsSet.has(artist.id)) {\n              artistIdsSet.add(artist.id);\n              allArtists.push(artist);\n            }\n          });\n\n          offset += limit;\n        }\n\n        // Take only the specified number of unique artists\n        const uniqueArtists = allArtists.slice(0, numArtists);\n\n        // Update droppedItems state with fetched artists\n        setDroppedItems({ ...initialDroppedItems, items: uniqueArtists });\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Call the function to fetch data when the component mounts or when numArtists changes\n    fetchTopArtistsData();\n  }, [numArtists]); // Trigger effect whenever numArtists changes\n\n  // Function to handle dropping an artist into a tier\n  const handleDrop = (tier, itemId, e) => {\n  e.preventDefault();\n\n  // Update droppedItems state to add the dropped artist to the specified tier\n  setDroppedItems((prevItems) => ({\n    ...prevItems,\n    [tier]: [...prevItems[tier], itemId],\n  }));\n\n  // Remove the dropped artist from draggableItems\n  setDraggableItems((prevItems) => prevItems.filter((item) => item.id !== itemId));\n};\n\n\n  // Function to remove an artist from a tier\n  const handleClearDrop = (tier, itemId) => {\n  // Remove the dropped item (artist) from the specified tier\n  setDroppedItems((prevItems) => ({\n    ...prevItems,\n    [tier]: prevItems[tier].filter((item) => item.id !== itemId),\n  }));\n\n  // Add the removed artist back to draggableItems\n  setDraggableItems((prevItems) => [...prevItems, { id: itemId }]);\n  \n  // Remove artist ID from droppedArtistIds\n  setDroppedArtistIds((prevIds) => {\n    const newIds = new Set(prevIds);\n    newIds.delete(itemId);\n    return newIds;\n  });\n};\n\n  // Function to allow dropping items\n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n\n  // Component to render a draggable artist\n  const DraggableArtist = ({ artist, isSplitName }) => {\n    const imageUrl = artist.images && artist.images.length > 0 ? artist.images[0].url : '';\n  \n    const handleDragStart = (e) => {\n      e.dataTransfer.setData('application/json', JSON.stringify({ id: artist.id, imageUrl }));\n    };\n    \n  \n    return (\n      <div className=\"draggable-artist\" draggable onDragStart={handleDragStart}>\n        {imageUrl ? (\n          <img src={imageUrl} alt={artist.name} style={{ width: 90, height: 90 }} /> // Ten poprawnie działający image\n        ) : (\n          <div style={{ width: 90, height: 90, backgroundColor: 'lightgray', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            No Image\n          </div>\n        )}\n        {/* Render artist name as split parts only when isSplitName is true and numArtists is 10 */}\n        {isSplitName && numArtists === 10 ? (\n          artist.name.split(' ').map((part, index) => (\n            <p key={index} style={{ margin: '0.2em 0' }}>{part}</p>\n          ))\n        ) : (\n          <p>{artist.name}</p>\n        )}\n      </div>\n    );\n  };\n  \n  // Component to render a tier\n  const Tier = ({ tier }) => {\n    const handleDropLocal = (e) => {\n      e.preventDefault();\n      \n      // Log the data being retrieved from dataTransfer\n      const jsonData = e.dataTransfer.getData('application/json');\n      console.log('Drag data:', jsonData);\n      \n      // Proceed with parsing and handling the dropped data\n      try {\n        const { id, imageUrl } = JSON.parse(jsonData);\n        console.log('Parsed JSON:', id, imageUrl);\n        \n        // Update droppedItems for the current tier\n        setDroppedItems((prevItems) => ({\n          ...prevItems,\n          [tier]: [...prevItems[tier], { id, imageUrl }],\n        }));\n        \n        // Remove the dropped item from draggableItems\n        setDraggableItems((prevItems) => prevItems.filter((item) => item.id !== id));\n        \n        // Remove the dropped item from the main draggableItems list\n        setDroppedArtistIds((prevIds) => {\n          const newIds = new Set(prevIds);\n          newIds.add(id);\n          return newIds;\n        });\n      } catch (error) {\n        console.error('JSON Parse Error:', error);\n      }\n    };\n    \n    \n    \n\n    const handleItemClick = (itemId) => {\n      // Remove item (artist) from droppedItems of the current tier\n      handleClearDrop(tier, itemId);\n    };\n    \n\n    return (\n      <div className=\"tier\" onDrop={handleDropLocal} onDragOver={allowDrop}>\n        {/* Render dropped items (artists) for the current tier */}\n        {droppedItems[tier]?.map((artist) => (\n  <div key={artist.id} className=\"artist-item\" onClick={() => handleItemClick(artist.id)}>\n    {artist.imageUrl ? (\n      <img src={artist.imageUrl} alt={artist.name} style={{ width: 90, height: 90 }} />\n    ) : (\n      <div style={{ width: 90, height: 90, backgroundColor: 'lightgray', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n        No Image\n      </div>\n    )}\n    <p>{artist.name}</p>\n  </div>\n))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"tier-list-container\">\n      <h1>Tier List</h1>\n      <button onClick={handleSaveAsImage}>Save as Image (1024 x 1024)</button>\n      {/* Render Tier components for each tier */}\n      <div className=\"tier-list\">\n        {tiers.map((tier) => (\n          <div key={tier} className=\"tier-pair\">\n            <div className={`tier-name tier-${tier.toLowerCase()}`}>\n              <h2>{tier}</h2>\n            </div>\n            {/* Render Tier component for the current tier */}\n            <Tier tier={tier} /> {/* Pass tier prop to Tier component */}\n          </div>\n        ))}\n      </div>\n\n      {/* Dropdown to select number of artists */}\n      <div>\n        <label htmlFor=\"numArtists\">Number of Artists:</label>\n        <select id=\"numArtists\" value={numArtists} onChange={(e) => setNumArtists(parseInt(e.target.value))}>\n          <option value={10}>10</option>\n          <option value={25}>25</option>\n          <option value={50}>50</option>\n        </select>\n      </div>\n\n        \n      {/* Render draggable items (artists) */}\n<div className=\"items-container\">\n  {droppedItems.items?.filter((artist) => !droppedArtistIds.has(artist.id)).map((artist) => (\n    <DraggableArtist key={artist.id} artist={artist} isSplitName={true} />\n  ))}\n</div>\n\n    </div>\n  );\n};\n\nexport default TierList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,gBAAgB,EAAEC,QAAQ,QAAQ,SAAS,CAAC,CAAC;AACrE,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,mBAAA;EACrB,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACvC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC;IAAEc,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC,CAAC;EACvF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACuB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxB,QAAQ,CAAC,IAAIyB,GAAG,CAAC,CAAC,CAAC;EAInE,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,iBAAiB,GAAGC,QAAQ,CAACC,cAAc,CAAC,qBAAqB,CAAC;;IAExE;IACAxB,WAAW,CAACyB,KAAK,CAACH,iBAAiB,CAAC,CACjCI,IAAI,CAAC,UAAUC,OAAO,EAAE;MACvB;MACA,MAAMC,IAAI,GAAGL,QAAQ,CAACM,aAAa,CAAC,GAAG,CAAC;MACxCD,IAAI,CAACE,QAAQ,GAAG,eAAe;MAC/BF,IAAI,CAACG,IAAI,GAAGJ,OAAO;MACnBC,IAAI,CAACI,KAAK,CAAC,CAAC;IACd,CAAC,CAAC,CACDC,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D,CAAC,CAAC;EACN,CAAC;EAGDtC,SAAS,CAAC,MAAM;IACd,MAAMwC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,IAAI,CAACrC,QAAQ,CAAC,CAAC,EAAE;UACfoC,OAAO,CAACE,GAAG,CAAC,oBAAoB,CAAC;UACjC;QACF;QAEA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;QACxD,MAAMC,mBAAmB,GAAGnC,KAAK,CAACoC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;UACtDD,GAAG,CAACC,IAAI,CAAC,GAAG,EAAE;UACd,OAAOD,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;QAEN,IAAIE,UAAU,GAAG,EAAE;QACnB,MAAMC,YAAY,GAAG,IAAI1B,GAAG,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM2B,KAAK,GAAG,GAAG,CAAC,CAAC;QACnB,IAAIC,MAAM,GAAG,CAAC;;QAEd;QACA,OAAOF,YAAY,CAACG,IAAI,GAAGjC,UAAU,EAAE;UACrC,MAAMkC,cAAc,GAAG,MAAMrD,aAAa,CAACyC,WAAW,EAAES,KAAK,EAAEC,MAAM,CAAC;UACtE,IAAI,CAACE,cAAc,IAAI,CAACA,cAAc,CAACC,KAAK,IAAID,cAAc,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;YACjF,MAAM,CAAC;UACT;;UAEA;UACAF,cAAc,CAACC,KAAK,CAACE,OAAO,CAAEC,MAAM,IAAK;YACvC,IAAI,CAACR,YAAY,CAACS,GAAG,CAACD,MAAM,CAACE,EAAE,CAAC,EAAE;cAChCV,YAAY,CAACW,GAAG,CAACH,MAAM,CAACE,EAAE,CAAC;cAC3BX,UAAU,CAACa,IAAI,CAACJ,MAAM,CAAC;YACzB;UACF,CAAC,CAAC;UAEFN,MAAM,IAAID,KAAK;QACjB;;QAEA;QACA,MAAMY,aAAa,GAAGd,UAAU,CAACe,KAAK,CAAC,CAAC,EAAE5C,UAAU,CAAC;;QAErD;QACAR,eAAe,CAAC;UAAE,GAAGiC,mBAAmB;UAAEU,KAAK,EAAEQ;QAAc,CAAC,CAAC;MACnE,CAAC,CAAC,OAAOzB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;;IAED;IACAE,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACpB,UAAU,CAAC,CAAC,CAAC,CAAC;;EAElB;EACA,MAAM6C,UAAU,GAAGA,CAACjB,IAAI,EAAEkB,MAAM,EAAEC,CAAC,KAAK;IACxCA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACAxD,eAAe,CAAEyD,SAAS,KAAM;MAC9B,GAAGA,SAAS;MACZ,CAACrB,IAAI,GAAG,CAAC,GAAGqB,SAAS,CAACrB,IAAI,CAAC,EAAEkB,MAAM;IACrC,CAAC,CAAC,CAAC;;IAEH;IACA/C,iBAAiB,CAAEkD,SAAS,IAAKA,SAAS,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACX,EAAE,KAAKM,MAAM,CAAC,CAAC;EAClF,CAAC;;EAGC;EACA,MAAMM,eAAe,GAAGA,CAACxB,IAAI,EAAEkB,MAAM,KAAK;IAC1C;IACAtD,eAAe,CAAEyD,SAAS,KAAM;MAC9B,GAAGA,SAAS;MACZ,CAACrB,IAAI,GAAGqB,SAAS,CAACrB,IAAI,CAAC,CAACsB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACX,EAAE,KAAKM,MAAM;IAC7D,CAAC,CAAC,CAAC;;IAEH;IACA/C,iBAAiB,CAAEkD,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAE;MAAET,EAAE,EAAEM;IAAO,CAAC,CAAC,CAAC;;IAEhE;IACA3C,mBAAmB,CAAEkD,OAAO,IAAK;MAC/B,MAAMC,MAAM,GAAG,IAAIlD,GAAG,CAACiD,OAAO,CAAC;MAC/BC,MAAM,CAACC,MAAM,CAACT,MAAM,CAAC;MACrB,OAAOQ,MAAM;IACf,CAAC,CAAC;EACJ,CAAC;;EAEC;EACA,MAAME,SAAS,GAAIT,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;EACpB,CAAC;;EAED;EACA,MAAMS,eAAe,GAAGA,CAAC;IAAEnB,MAAM;IAAEoB;EAAY,CAAC,KAAK;IACnD,MAAMC,QAAQ,GAAGrB,MAAM,CAACsB,MAAM,IAAItB,MAAM,CAACsB,MAAM,CAACxB,MAAM,GAAG,CAAC,GAAGE,MAAM,CAACsB,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,GAAG,EAAE;IAEtF,MAAMC,eAAe,GAAIf,CAAC,IAAK;MAC7BA,CAAC,CAACgB,YAAY,CAACC,OAAO,CAAC,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE1B,EAAE,EAAEF,MAAM,CAACE,EAAE;QAAEmB;MAAS,CAAC,CAAC,CAAC;IACzF,CAAC;IAGD,oBACEzE,OAAA;MAAKiF,SAAS,EAAC,kBAAkB;MAACC,SAAS;MAACC,WAAW,EAAEP,eAAgB;MAAAQ,QAAA,GACtEX,QAAQ,gBACPzE,OAAA;QAAKqF,GAAG,EAAEZ,QAAS;QAACa,GAAG,EAAElC,MAAM,CAACmC,IAAK;QAACC,KAAK,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAG;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,CAAC;MAAA,eAE3E9F,OAAA;QAAKwF,KAAK,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,MAAM,EAAE,EAAE;UAAEK,eAAe,EAAE,WAAW;UAAEC,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAAd,QAAA,EAAC;MAEtI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN,EAEAtB,WAAW,IAAI1D,UAAU,KAAK,EAAE,GAC/BsC,MAAM,CAACmC,IAAI,CAACY,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrCtG,OAAA;QAAewF,KAAK,EAAE;UAAEe,MAAM,EAAE;QAAU,CAAE;QAAAnB,QAAA,EAAEiB;MAAI,GAA1CC,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyC,CACvD,CAAC,gBAEF9F,OAAA;QAAAoF,QAAA,EAAIhC,MAAM,CAACmC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACpB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV,CAAC;;EAED;EACA,MAAMU,IAAI,GAAGA,CAAC;IAAE9D;EAAK,CAAC,KAAK;IAAA,IAAA+D,kBAAA;IACzB,MAAMC,eAAe,GAAI7C,CAAC,IAAK;MAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;;MAElB;MACA,MAAM6C,QAAQ,GAAG9C,CAAC,CAACgB,YAAY,CAAC+B,OAAO,CAAC,kBAAkB,CAAC;MAC3D3E,OAAO,CAACE,GAAG,CAAC,YAAY,EAAEwE,QAAQ,CAAC;;MAEnC;MACA,IAAI;QACF,MAAM;UAAErD,EAAE;UAAEmB;QAAS,CAAC,GAAGM,IAAI,CAAC8B,KAAK,CAACF,QAAQ,CAAC;QAC7C1E,OAAO,CAACE,GAAG,CAAC,cAAc,EAAEmB,EAAE,EAAEmB,QAAQ,CAAC;;QAEzC;QACAnE,eAAe,CAAEyD,SAAS,KAAM;UAC9B,GAAGA,SAAS;UACZ,CAACrB,IAAI,GAAG,CAAC,GAAGqB,SAAS,CAACrB,IAAI,CAAC,EAAE;YAAEY,EAAE;YAAEmB;UAAS,CAAC;QAC/C,CAAC,CAAC,CAAC;;QAEH;QACA5D,iBAAiB,CAAEkD,SAAS,IAAKA,SAAS,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACX,EAAE,KAAKA,EAAE,CAAC,CAAC;;QAE5E;QACArC,mBAAmB,CAAEkD,OAAO,IAAK;UAC/B,MAAMC,MAAM,GAAG,IAAIlD,GAAG,CAACiD,OAAO,CAAC;UAC/BC,MAAM,CAACb,GAAG,CAACD,EAAE,CAAC;UACd,OAAOc,MAAM;QACf,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOpC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC3C;IACF,CAAC;IAKD,MAAM8E,eAAe,GAAIlD,MAAM,IAAK;MAClC;MACAM,eAAe,CAACxB,IAAI,EAAEkB,MAAM,CAAC;IAC/B,CAAC;IAGD,oBACE5D,OAAA;MAAKiF,SAAS,EAAC,MAAM;MAAC8B,MAAM,EAAEL,eAAgB;MAACM,UAAU,EAAE1C,SAAU;MAAAc,QAAA,GAAAqB,kBAAA,GAElEpG,YAAY,CAACqC,IAAI,CAAC,cAAA+D,kBAAA,uBAAlBA,kBAAA,CAAoBL,GAAG,CAAEhD,MAAM,iBACtCpD,OAAA;QAAqBiF,SAAS,EAAC,aAAa;QAACgC,OAAO,EAAEA,CAAA,KAAMH,eAAe,CAAC1D,MAAM,CAACE,EAAE,CAAE;QAAA8B,QAAA,GACpFhC,MAAM,CAACqB,QAAQ,gBACdzE,OAAA;UAAKqF,GAAG,EAAEjC,MAAM,CAACqB,QAAS;UAACa,GAAG,EAAElC,MAAM,CAACmC,IAAK;UAACC,KAAK,EAAE;YAAEC,KAAK,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAG;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAEjF9F,OAAA;UAAKwF,KAAK,EAAE;YAAEC,KAAK,EAAE,EAAE;YAAEC,MAAM,EAAE,EAAE;YAAEK,eAAe,EAAE,WAAW;YAAEC,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE,QAAQ;YAAEC,UAAU,EAAE;UAAS,CAAE;UAAAd,QAAA,EAAC;QAEtI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACN,eACD9F,OAAA;UAAAoF,QAAA,EAAIhC,MAAM,CAACmC;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GARZ1C,MAAM,CAACE,EAAE;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASd,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC;EAEV,CAAC;EAED,oBACE9F,OAAA;IAAKiF,SAAS,EAAC,qBAAqB;IAAAG,QAAA,gBAClCpF,OAAA;MAAAoF,QAAA,EAAI;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB9F,OAAA;MAAQiH,OAAO,EAAE9F,iBAAkB;MAAAiE,QAAA,EAAC;IAA2B;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAExE9F,OAAA;MAAKiF,SAAS,EAAC,WAAW;MAAAG,QAAA,EACvBhF,KAAK,CAACgG,GAAG,CAAE1D,IAAI,iBACd1C,OAAA;QAAgBiF,SAAS,EAAC,WAAW;QAAAG,QAAA,gBACnCpF,OAAA;UAAKiF,SAAS,EAAG,kBAAiBvC,IAAI,CAACwE,WAAW,CAAC,CAAE,EAAE;UAAA9B,QAAA,eACrDpF,OAAA;YAAAoF,QAAA,EAAK1C;UAAI;YAAAiD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eAEN9F,OAAA,CAACwG,IAAI;UAAC9D,IAAI,EAAEA;QAAK;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC;MAAA,GALbpD,IAAI;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMT,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN9F,OAAA;MAAAoF,QAAA,gBACEpF,OAAA;QAAOmH,OAAO,EAAC,YAAY;QAAA/B,QAAA,EAAC;MAAkB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtD9F,OAAA;QAAQsD,EAAE,EAAC,YAAY;QAAC8D,KAAK,EAAEtG,UAAW;QAACuG,QAAQ,EAAGxD,CAAC,IAAK9C,aAAa,CAACuG,QAAQ,CAACzD,CAAC,CAAC0D,MAAM,CAACH,KAAK,CAAC,CAAE;QAAAhC,QAAA,gBAClGpF,OAAA;UAAQoH,KAAK,EAAE,EAAG;UAAAhC,QAAA,EAAC;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9B9F,OAAA;UAAQoH,KAAK,EAAE,EAAG;UAAAhC,QAAA,EAAC;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9B9F,OAAA;UAAQoH,KAAK,EAAE,EAAG;UAAAhC,QAAA,EAAC;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAIZ9F,OAAA;MAAKiF,SAAS,EAAC,iBAAiB;MAAAG,QAAA,GAAAjF,mBAAA,GAC7BE,YAAY,CAAC4C,KAAK,cAAA9C,mBAAA,uBAAlBA,mBAAA,CAAoB6D,MAAM,CAAEZ,MAAM,IAAK,CAACpC,gBAAgB,CAACqC,GAAG,CAACD,MAAM,CAACE,EAAE,CAAC,CAAC,CAAC8C,GAAG,CAAEhD,MAAM,iBACnFpD,OAAA,CAACuE,eAAe;QAAiBnB,MAAM,EAAEA,MAAO;QAACoB,WAAW,EAAE;MAAK,GAA7CpB,MAAM,CAACE,EAAE;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsC,CACtE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEG,CAAC;AAEV,CAAC;AAAC5F,EAAA,CAtPID,QAAQ;AAAAuH,EAAA,GAARvH,QAAQ;AAwPd,eAAeA,QAAQ;AAAC,IAAAuH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}