{"ast":null,"code":"var _jsxFileName = \"/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getTopArtists } from './Utils'; // Import the function to fetch top artists\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TierList = () => {\n  _s();\n  var _droppedItems$items;\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n  const [droppedItems, setDroppedItems] = useState({});\n  useEffect(() => {\n    const fetchArtists = async () => {\n      try {\n        // Fetch top artists from API\n        const topArtistsData = await getTopArtists();\n\n        // Store fetched artists as items\n        const items = topArtistsData.items.map(artist => ({\n          id: artist.id,\n          name: artist.name\n        }));\n\n        // Initialize droppedItems state with items\n        setDroppedItems({\n          ...droppedItems,\n          items\n        });\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Call fetchArtists when component mounts\n    fetchArtists();\n  }, []); // Empty dependency array ensures this effect runs once on component mount\n\n  const handleDrop = (tier, itemId, e) => {\n    e.preventDefault();\n    setDroppedItems(prevItems => ({\n      ...prevItems,\n      [tier]: [...(prevItems[tier] || []), itemId]\n    }));\n  };\n  const handleClearDrop = (tier, itemId) => {\n    setDroppedItems(prevItems => ({\n      ...prevItems,\n      [tier]: prevItems[tier].filter(item => item.id !== itemId)\n    }));\n  };\n  const allowDrop = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tier-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tier List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tier-list\",\n      children: tiers.map(tier => {\n        var _droppedItems$tier;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tier-pair\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tier-name tier-${tier.toLowerCase()}`,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: tier\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"dropped-items\",\n              children: (_droppedItems$tier = droppedItems[tier]) === null || _droppedItems$tier === void 0 ? void 0 : _droppedItems$tier.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleClearDrop(tier, item.id),\n                children: item.name\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tier\",\n            onDrop: e => handleDrop(tier, e.dataTransfer.getData('text/plain'), e),\n            onDragOver: allowDrop,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"drop-zone\",\n              children: \"Drop Item Here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, tier, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-container\",\n      children: (_droppedItems$items = droppedItems.items) === null || _droppedItems$items === void 0 ? void 0 : _droppedItems$items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        draggable: true,\n        onDragStart: e => e.dataTransfer.setData('text/plain', item.id),\n        children: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TierList, \"r8K+c5wF3yK4WfoCV+dRSyFz40g=\");\n_c = TierList;\nexport default TierList;\nvar _c;\n$RefreshReg$(_c, \"TierList\");","map":{"version":3,"names":["React","useState","useEffect","getTopArtists","jsxDEV","_jsxDEV","TierList","_s","_droppedItems$items","tiers","droppedItems","setDroppedItems","fetchArtists","topArtistsData","items","map","artist","id","name","error","console","handleDrop","tier","itemId","e","preventDefault","prevItems","handleClearDrop","filter","item","allowDrop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_droppedItems$tier","toLowerCase","onClick","onDrop","dataTransfer","getData","onDragOver","draggable","onDragStart","setData","_c","$RefreshReg$"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getTopArtists } from './Utils'; // Import the function to fetch top artists\n\nconst TierList = () => {\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n\n  const [droppedItems, setDroppedItems] = useState({});\n\n  useEffect(() => {\n    const fetchArtists = async () => {\n      try {\n        // Fetch top artists from API\n        const topArtistsData = await getTopArtists();\n\n        // Store fetched artists as items\n        const items = topArtistsData.items.map((artist) => ({\n          id: artist.id,\n          name: artist.name,\n        }));\n\n        // Initialize droppedItems state with items\n        setDroppedItems({ ...droppedItems, items });\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Call fetchArtists when component mounts\n    fetchArtists();\n  }, []); // Empty dependency array ensures this effect runs once on component mount\n\n  const handleDrop = (tier, itemId, e) => {\n    e.preventDefault();\n    setDroppedItems((prevItems) => ({\n      ...prevItems,\n      [tier]: [...(prevItems[tier] || []), itemId],\n    }));\n  };\n\n  const handleClearDrop = (tier, itemId) => {\n    setDroppedItems((prevItems) => ({\n      ...prevItems,\n      [tier]: prevItems[tier].filter((item) => item.id !== itemId),\n    }));\n  };\n\n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"tier-list-container\">\n      <h1>Tier List</h1>\n\n      <div className=\"tier-list\">\n        {tiers.map((tier) => (\n          <div key={tier} className=\"tier-pair\">\n            <div className={`tier-name tier-${tier.toLowerCase()}`}>\n              <h2>{tier}</h2>\n              <ul className=\"dropped-items\">\n                {droppedItems[tier]?.map((item) => (\n                  <li key={item.id} onClick={() => handleClearDrop(tier, item.id)}>\n                    {item.name}\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div\n              className=\"tier\"\n              onDrop={(e) => handleDrop(tier, e.dataTransfer.getData('text/plain'), e)}\n              onDragOver={allowDrop}\n            >\n              <div className=\"drop-zone\">Drop Item Here</div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Render draggable items (artists) */}\n      <div className=\"items-container\">\n        {droppedItems.items?.map((item) => (\n          <div\n            key={item.id}\n            className=\"item\"\n            draggable\n            onDragStart={(e) => e.dataTransfer.setData('text/plain', item.id)}\n          >\n            {item.name}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TierList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,SAAS,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,mBAAA;EACrB,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEvC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF;QACA,MAAMC,cAAc,GAAG,MAAMV,aAAa,CAAC,CAAC;;QAE5C;QACA,MAAMW,KAAK,GAAGD,cAAc,CAACC,KAAK,CAACC,GAAG,CAAEC,MAAM,KAAM;UAClDC,EAAE,EAAED,MAAM,CAACC,EAAE;UACbC,IAAI,EAAEF,MAAM,CAACE;QACf,CAAC,CAAC,CAAC;;QAEH;QACAP,eAAe,CAAC;UAAE,GAAGD,YAAY;UAAEI;QAAM,CAAC,CAAC;MAC7C,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;;IAED;IACAP,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMS,UAAU,GAAGA,CAACC,IAAI,EAAEC,MAAM,EAAEC,CAAC,KAAK;IACtCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBd,eAAe,CAAEe,SAAS,KAAM;MAC9B,GAAGA,SAAS;MACZ,CAACJ,IAAI,GAAG,CAAC,IAAII,SAAS,CAACJ,IAAI,CAAC,IAAI,EAAE,CAAC,EAAEC,MAAM;IAC7C,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMI,eAAe,GAAGA,CAACL,IAAI,EAAEC,MAAM,KAAK;IACxCZ,eAAe,CAAEe,SAAS,KAAM;MAC9B,GAAGA,SAAS;MACZ,CAACJ,IAAI,GAAGI,SAAS,CAACJ,IAAI,CAAC,CAACM,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACZ,EAAE,KAAKM,MAAM;IAC7D,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMO,SAAS,GAAIN,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,oBACEpB,OAAA;IAAK0B,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClC3B,OAAA;MAAA2B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElB/B,OAAA;MAAK0B,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBvB,KAAK,CAACM,GAAG,CAAEO,IAAI;QAAA,IAAAe,kBAAA;QAAA,oBACdhC,OAAA;UAAgB0B,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACnC3B,OAAA;YAAK0B,SAAS,EAAG,kBAAiBT,IAAI,CAACgB,WAAW,CAAC,CAAE,EAAE;YAAAN,QAAA,gBACrD3B,OAAA;cAAA2B,QAAA,EAAKV;YAAI;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACf/B,OAAA;cAAI0B,SAAS,EAAC,eAAe;cAAAC,QAAA,GAAAK,kBAAA,GAC1B3B,YAAY,CAACY,IAAI,CAAC,cAAAe,kBAAA,uBAAlBA,kBAAA,CAAoBtB,GAAG,CAAEc,IAAI,iBAC5BxB,OAAA;gBAAkBkC,OAAO,EAAEA,CAAA,KAAMZ,eAAe,CAACL,IAAI,EAAEO,IAAI,CAACZ,EAAE,CAAE;gBAAAe,QAAA,EAC7DH,IAAI,CAACX;cAAI,GADHW,IAAI,CAACZ,EAAE;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEZ,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACN/B,OAAA;YACE0B,SAAS,EAAC,MAAM;YAChBS,MAAM,EAAGhB,CAAC,IAAKH,UAAU,CAACC,IAAI,EAAEE,CAAC,CAACiB,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAElB,CAAC,CAAE;YACzEmB,UAAU,EAAEb,SAAU;YAAAE,QAAA,eAEtB3B,OAAA;cAAK0B,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA,GAjBEd,IAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBT,CAAC;MAAA,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN/B,OAAA;MAAK0B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAAAxB,mBAAA,GAC7BE,YAAY,CAACI,KAAK,cAAAN,mBAAA,uBAAlBA,mBAAA,CAAoBO,GAAG,CAAEc,IAAI,iBAC5BxB,OAAA;QAEE0B,SAAS,EAAC,MAAM;QAChBa,SAAS;QACTC,WAAW,EAAGrB,CAAC,IAAKA,CAAC,CAACiB,YAAY,CAACK,OAAO,CAAC,YAAY,EAAEjB,IAAI,CAACZ,EAAE,CAAE;QAAAe,QAAA,EAEjEH,IAAI,CAACX;MAAI,GALLW,IAAI,CAACZ,EAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMT,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA1FID,QAAQ;AAAAyC,EAAA,GAARzC,QAAQ;AA4Fd,eAAeA,QAAQ;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}