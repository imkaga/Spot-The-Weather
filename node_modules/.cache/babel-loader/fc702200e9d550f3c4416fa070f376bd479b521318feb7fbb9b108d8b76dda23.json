{"ast":null,"code":"var _jsxFileName = \"/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getTopArtists } from './Utils'; // Import the function to fetch top artists\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TierList = () => {\n  _s();\n  var _droppedItems$items;\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n\n  // Initialize droppedItems state with empty arrays for each tier\n  const initialDroppedItems = tiers.reduce((acc, tier) => {\n    acc[tier] = [];\n    return acc;\n  }, {});\n  const [droppedItems, setDroppedItems] = useState({\n    ...initialDroppedItems,\n    items: []\n  });\n  useEffect(() => {\n    const fetchArtists = async () => {\n      try {\n        // Fetch top artists from API\n        const topArtistsData = await getTopArtists();\n\n        // Store fetched artists as items\n        const items = topArtistsData.items.map(artist => ({\n          id: artist.id,\n          name: artist.name,\n          imageUrl: artist.images.length > 0 ? artist.images[0].url : '' // Get the first image URL (if available)\n        }));\n\n        // Set droppedItems state with fetched artists\n        setDroppedItems(prevItems => ({\n          ...prevItems,\n          items\n        }));\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Call fetchArtists when component mounts\n    fetchArtists();\n  }, []); // Empty dependency array ensures this effect runs once on component mount\n\n  const handleDrop = (tier, itemId, e) => {\n    e.preventDefault();\n\n    // Add the dropped item (artist) to the specified tier\n    setDroppedItems(prevItems => ({\n      ...prevItems,\n      [tier]: [...prevItems[tier], itemId]\n    }));\n  };\n  const handleClearDrop = (tier, itemId) => {\n    // Remove the dropped item (artist) from the specified tier\n    setDroppedItems(prevItems => ({\n      ...prevItems,\n      [tier]: prevItems[tier].filter(item => item.id !== itemId)\n    }));\n  };\n  const allowDrop = e => {\n    e.preventDefault();\n  };\n\n  // Draggable Artist component\n  const DraggableArtist = ({\n    artist\n  }) => {\n    const handleDragStart = e => {\n      e.dataTransfer.setData('text/plain', artist.id); // Set the artist's ID as the drag data\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"draggable-artist\",\n      draggable: true,\n      onDragStart: handleDragStart,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: artist.imageUrl,\n        alt: artist.name,\n        style: {\n          width: 90,\n          height: 90\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: artist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Define Tier component within TierList component\n  const Tier = ({\n    tier\n  }) => {\n    var _droppedItems$tier;\n    const handleDropLocal = e => {\n      const itemId = e.dataTransfer.getData('text/plain'); // Get the artist's ID from the drag data\n      handleDrop(tier, itemId, e); // Call the handleDrop function from TierList component\n    };\n    const handleItemClick = itemId => {\n      // Remove item (artist) from droppedItems of the current tier\n      handleClearDrop(tier, itemId);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tier\",\n      onDrop: handleDropLocal,\n      onDragOver: allowDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-zone\",\n        children: \"Drop Item Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), (_droppedItems$tier = droppedItems[tier]) === null || _droppedItems$tier === void 0 ? void 0 : _droppedItems$tier.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artist-item\",\n        onClick: () => handleItemClick(artist.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: artist.imageUrl,\n          alt: artist.name,\n          style: {\n            width: 90,\n            height: 90\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, artist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tier-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tier List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tier-list\",\n      children: tiers.map(tier => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tier-pair\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tier-name tier-${tier.toLowerCase()}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: tier\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tier, {\n          tier: tier\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), \" \"]\n      }, tier, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-container\",\n      children: (_droppedItems$items = droppedItems.items) === null || _droppedItems$items === void 0 ? void 0 : _droppedItems$items.map(artist => /*#__PURE__*/_jsxDEV(DraggableArtist, {\n        artist: artist\n      }, artist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(TierList, \"e0HAA5r6b6zZ8EUU7+MwKMVnSFg=\");\n_c = TierList;\nexport default TierList;\nvar _c;\n$RefreshReg$(_c, \"TierList\");","map":{"version":3,"names":["React","useState","useEffect","getTopArtists","jsxDEV","_jsxDEV","TierList","_s","_droppedItems$items","tiers","initialDroppedItems","reduce","acc","tier","droppedItems","setDroppedItems","items","fetchArtists","topArtistsData","map","artist","id","name","imageUrl","images","length","url","prevItems","error","console","handleDrop","itemId","e","preventDefault","handleClearDrop","filter","item","allowDrop","DraggableArtist","handleDragStart","dataTransfer","setData","className","draggable","onDragStart","children","src","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","Tier","_droppedItems$tier","handleDropLocal","getData","handleItemClick","onDrop","onDragOver","onClick","toLowerCase","_c","$RefreshReg$"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getTopArtists } from './Utils'; // Import the function to fetch top artists\n\nconst TierList = () => {\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n\n  // Initialize droppedItems state with empty arrays for each tier\n  const initialDroppedItems = tiers.reduce((acc, tier) => {\n    acc[tier] = [];\n    return acc;\n  }, {});\n\n  const [droppedItems, setDroppedItems] = useState({ ...initialDroppedItems, items: [] });\n\n  useEffect(() => {\n    const fetchArtists = async () => {\n      try {\n        // Fetch top artists from API\n        const topArtistsData = await getTopArtists();\n\n        // Store fetched artists as items\n        const items = topArtistsData.items.map((artist) => ({\n          id: artist.id,\n          name: artist.name,\n          imageUrl: artist.images.length > 0 ? artist.images[0].url : '', // Get the first image URL (if available)\n        }));\n\n        // Set droppedItems state with fetched artists\n        setDroppedItems((prevItems) => ({ ...prevItems, items }));\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Call fetchArtists when component mounts\n    fetchArtists();\n  }, []); // Empty dependency array ensures this effect runs once on component mount\n\n  const handleDrop = (tier, itemId, e) => {\n    e.preventDefault();\n\n    // Add the dropped item (artist) to the specified tier\n    setDroppedItems((prevItems) => ({\n      ...prevItems,\n      [tier]: [...prevItems[tier], itemId],\n    }));\n  };\n\n  const handleClearDrop = (tier, itemId) => {\n    // Remove the dropped item (artist) from the specified tier\n    setDroppedItems((prevItems) => ({\n      ...prevItems,\n      [tier]: prevItems[tier].filter((item) => item.id !== itemId),\n    }));\n  };\n\n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n\n  // Draggable Artist component\n  const DraggableArtist = ({ artist }) => {\n    const handleDragStart = (e) => {\n      e.dataTransfer.setData('text/plain', artist.id); // Set the artist's ID as the drag data\n    };\n\n    return (\n      <div\n        className=\"draggable-artist\"\n        draggable\n        onDragStart={handleDragStart}\n      >\n        <img src={artist.imageUrl} alt={artist.name} style={{ width: 90, height: 90 }} />\n        <p>{artist.name}</p>\n      </div>\n    );\n  };\n\n  // Define Tier component within TierList component\n  const Tier = ({ tier }) => {\n    const handleDropLocal = (e) => {\n      const itemId = e.dataTransfer.getData('text/plain'); // Get the artist's ID from the drag data\n      handleDrop(tier, itemId, e); // Call the handleDrop function from TierList component\n    };\n\n    const handleItemClick = (itemId) => {\n      // Remove item (artist) from droppedItems of the current tier\n      handleClearDrop(tier, itemId);\n    };\n\n    return (\n      <div className=\"tier\" onDrop={handleDropLocal} onDragOver={allowDrop}>\n        <div className=\"drop-zone\">Drop Item Here</div>\n        {/* Render dropped items (artists) for the current tier */}\n        {droppedItems[tier]?.map((artist) => (\n          <div key={artist.id} className=\"artist-item\" onClick={() => handleItemClick(artist.id)}>\n            <img src={artist.imageUrl} alt={artist.name} style={{ width: 90, height: 90 }} />\n            <p>{artist.name}</p>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"tier-list-container\">\n      <h1>Tier List</h1>\n\n      <div className=\"tier-list\">\n        {/* Render Tier components for each tier */}\n        {tiers.map((tier) => (\n          <div key={tier} className=\"tier-pair\">\n            <div className={`tier-name tier-${tier.toLowerCase()}`}>\n              <h2>{tier}</h2>\n            </div>\n            {/* Render Tier component for the current tier */}\n            <Tier tier={tier} /> {/* Pass tier prop to Tier component */}\n          </div>\n        ))}\n      </div>\n\n      {/* Render draggable items (artists) */}\n      <div className=\"items-container\">\n        {droppedItems.items?.map((artist) => (\n          <DraggableArtist key={artist.id} artist={artist} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TierList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,SAAS,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,mBAAA;EACrB,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;;EAEvC;EACA,MAAMC,mBAAmB,GAAGD,KAAK,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IACtDD,GAAG,CAACC,IAAI,CAAC,GAAG,EAAE;IACd,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC;IAAE,GAAGS,mBAAmB;IAAEM,KAAK,EAAE;EAAG,CAAC,CAAC;EAEvFd,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF;QACA,MAAMC,cAAc,GAAG,MAAMf,aAAa,CAAC,CAAC;;QAE5C;QACA,MAAMa,KAAK,GAAGE,cAAc,CAACF,KAAK,CAACG,GAAG,CAAEC,MAAM,KAAM;UAClDC,EAAE,EAAED,MAAM,CAACC,EAAE;UACbC,IAAI,EAAEF,MAAM,CAACE,IAAI;UACjBC,QAAQ,EAAEH,MAAM,CAACI,MAAM,CAACC,MAAM,GAAG,CAAC,GAAGL,MAAM,CAACI,MAAM,CAAC,CAAC,CAAC,CAACE,GAAG,GAAG,EAAE,CAAE;QAClE,CAAC,CAAC,CAAC;;QAEH;QACAX,eAAe,CAAEY,SAAS,KAAM;UAAE,GAAGA,SAAS;UAAEX;QAAM,CAAC,CAAC,CAAC;MAC3D,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;;IAED;IACAX,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMa,UAAU,GAAGA,CAACjB,IAAI,EAAEkB,MAAM,EAAEC,CAAC,KAAK;IACtCA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACAlB,eAAe,CAAEY,SAAS,KAAM;MAC9B,GAAGA,SAAS;MACZ,CAACd,IAAI,GAAG,CAAC,GAAGc,SAAS,CAACd,IAAI,CAAC,EAAEkB,MAAM;IACrC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,eAAe,GAAGA,CAACrB,IAAI,EAAEkB,MAAM,KAAK;IACxC;IACAhB,eAAe,CAAEY,SAAS,KAAM;MAC9B,GAAGA,SAAS;MACZ,CAACd,IAAI,GAAGc,SAAS,CAACd,IAAI,CAAC,CAACsB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACf,EAAE,KAAKU,MAAM;IAC7D,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMM,SAAS,GAAIL,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;EACpB,CAAC;;EAED;EACA,MAAMK,eAAe,GAAGA,CAAC;IAAElB;EAAO,CAAC,KAAK;IACtC,MAAMmB,eAAe,GAAIP,CAAC,IAAK;MAC7BA,CAAC,CAACQ,YAAY,CAACC,OAAO,CAAC,YAAY,EAAErB,MAAM,CAACC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,oBACEhB,OAAA;MACEqC,SAAS,EAAC,kBAAkB;MAC5BC,SAAS;MACTC,WAAW,EAAEL,eAAgB;MAAAM,QAAA,gBAE7BxC,OAAA;QAAKyC,GAAG,EAAE1B,MAAM,CAACG,QAAS;QAACwB,GAAG,EAAE3B,MAAM,CAACE,IAAK;QAAC0B,KAAK,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAG;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjFjD,OAAA;QAAAwC,QAAA,EAAIzB,MAAM,CAACE;MAAI;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV,CAAC;;EAED;EACA,MAAMC,IAAI,GAAGA,CAAC;IAAE1C;EAAK,CAAC,KAAK;IAAA,IAAA2C,kBAAA;IACzB,MAAMC,eAAe,GAAIzB,CAAC,IAAK;MAC7B,MAAMD,MAAM,GAAGC,CAAC,CAACQ,YAAY,CAACkB,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;MACrD5B,UAAU,CAACjB,IAAI,EAAEkB,MAAM,EAAEC,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,MAAM2B,eAAe,GAAI5B,MAAM,IAAK;MAClC;MACAG,eAAe,CAACrB,IAAI,EAAEkB,MAAM,CAAC;IAC/B,CAAC;IAED,oBACE1B,OAAA;MAAKqC,SAAS,EAAC,MAAM;MAACkB,MAAM,EAAEH,eAAgB;MAACI,UAAU,EAAExB,SAAU;MAAAQ,QAAA,gBACnExC,OAAA;QAAKqC,SAAS,EAAC,WAAW;QAAAG,QAAA,EAAC;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,GAAAE,kBAAA,GAE9C1C,YAAY,CAACD,IAAI,CAAC,cAAA2C,kBAAA,uBAAlBA,kBAAA,CAAoBrC,GAAG,CAAEC,MAAM,iBAC9Bf,OAAA;QAAqBqC,SAAS,EAAC,aAAa;QAACoB,OAAO,EAAEA,CAAA,KAAMH,eAAe,CAACvC,MAAM,CAACC,EAAE,CAAE;QAAAwB,QAAA,gBACrFxC,OAAA;UAAKyC,GAAG,EAAE1B,MAAM,CAACG,QAAS;UAACwB,GAAG,EAAE3B,MAAM,CAACE,IAAK;UAAC0B,KAAK,EAAE;YAAEC,KAAK,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAG;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjFjD,OAAA;UAAAwC,QAAA,EAAIzB,MAAM,CAACE;QAAI;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFZlC,MAAM,CAACC,EAAE;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC;EAED,oBACEjD,OAAA;IAAKqC,SAAS,EAAC,qBAAqB;IAAAG,QAAA,gBAClCxC,OAAA;MAAAwC,QAAA,EAAI;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElBjD,OAAA;MAAKqC,SAAS,EAAC,WAAW;MAAAG,QAAA,EAEvBpC,KAAK,CAACU,GAAG,CAAEN,IAAI,iBACdR,OAAA;QAAgBqC,SAAS,EAAC,WAAW;QAAAG,QAAA,gBACnCxC,OAAA;UAAKqC,SAAS,EAAG,kBAAiB7B,IAAI,CAACkD,WAAW,CAAC,CAAE,EAAE;UAAAlB,QAAA,eACrDxC,OAAA;YAAAwC,QAAA,EAAKhC;UAAI;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eAENjD,OAAA,CAACkD,IAAI;UAAC1C,IAAI,EAAEA;QAAK;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC;MAAA,GALbzC,IAAI;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMT,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNjD,OAAA;MAAKqC,SAAS,EAAC,iBAAiB;MAAAG,QAAA,GAAArC,mBAAA,GAC7BM,YAAY,CAACE,KAAK,cAAAR,mBAAA,uBAAlBA,mBAAA,CAAoBW,GAAG,CAAEC,MAAM,iBAC9Bf,OAAA,CAACiC,eAAe;QAAiBlB,MAAM,EAAEA;MAAO,GAA1BA,MAAM,CAACC,EAAE;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CACnD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/C,EAAA,CA9HID,QAAQ;AAAA0D,EAAA,GAAR1D,QAAQ;AAgId,eAAeA,QAAQ;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}