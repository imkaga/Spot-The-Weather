{"ast":null,"code":"var _jsxFileName = \"/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getTopArtists, loggedin } from './Utils'; // Import the necessary functions from Utils.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TierList = () => {\n  _s();\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n  const [droppedItems, setDroppedItems] = useState({\n    S: [],\n    A: [],\n    B: [],\n    C: [],\n    D: []\n  });\n  useEffect(() => {\n    const fetchTopArtistsData = async () => {\n      try {\n        if (!loggedin()) {\n          console.log('User not logged in');\n          return;\n        }\n        const accessToken = localStorage.getItem('access_token');\n        const initialDroppedItems = tiers.reduce((acc, tier) => {\n          acc[tier] = [];\n          return acc;\n        }, {});\n        let allArtists = [];\n        let offset = 0;\n        const limit = 50; // Increase the limit for more artists per page\n\n        // Fetch artists until you have enough\n        while (allArtists.length < 10) {\n          const topArtistsData = await getTopArtists(accessToken, limit, offset);\n          if (!topArtistsData || !topArtistsData.items || topArtistsData.items.length === 0) {\n            break; // No more artists to fetch\n          }\n          allArtists = [...allArtists, ...topArtistsData.items];\n          offset += limit;\n        }\n\n        // Retrieve artist IDs\n        const artistIds = allArtists.map(artist => artist.id);\n\n        // Fetch detailed information for each artist\n        const detailedArtists = await Promise.all(artistIds.map(async artistId => {\n          const artistDetails = await fetchArtistDetails(accessToken, artistId);\n          return artistDetails;\n        }));\n\n        // Update droppedItems state with fetched artists\n        setDroppedItems({\n          ...initialDroppedItems,\n          S: detailedArtists\n        });\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Function to fetch detailed artist information\n    const fetchArtistDetails = async (accessToken, artistId) => {\n      try {\n        const url = `https://api.spotify.com/v1/artists/${artistId}`;\n        const response = await fetch(url, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to fetch artist details for artistId ${artistId}`);\n        }\n        const artistDetails = await response.json();\n        return artistDetails;\n      } catch (error) {\n        console.error(`Error fetching artist details for artistId ${artistId}:`, error);\n        throw error;\n      }\n    };\n\n    // Call the function to fetch data when the component mounts\n    fetchTopArtistsData();\n  }, []); // Empty dependency array ensures this effect runs once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tier-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tier List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), tiers.map(tier => {\n      var _droppedItems$tier;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tier-pair\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tier-name tier-${tier.toLowerCase()}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: tier\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tier\",\n          children: (_droppedItems$tier = droppedItems[tier]) === null || _droppedItems$tier === void 0 ? void 0 : _droppedItems$tier.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"artist-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: artist.images[0].url,\n              alt: artist.name,\n              style: {\n                width: 90,\n                height: 90\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, artist.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, tier, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(TierList, \"zkxggsE9Zuq5XqWCcx2hoz+/Z1M=\");\n_c = TierList;\nexport default TierList;\nvar _c;\n$RefreshReg$(_c, \"TierList\");","map":{"version":3,"names":["React","useState","useEffect","getTopArtists","loggedin","jsxDEV","_jsxDEV","TierList","_s","tiers","droppedItems","setDroppedItems","S","A","B","C","D","fetchTopArtistsData","console","log","accessToken","localStorage","getItem","initialDroppedItems","reduce","acc","tier","allArtists","offset","limit","length","topArtistsData","items","artistIds","map","artist","id","detailedArtists","Promise","all","artistId","artistDetails","fetchArtistDetails","error","url","response","fetch","headers","Authorization","ok","Error","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_droppedItems$tier","toLowerCase","src","images","alt","name","style","width","height","_c","$RefreshReg$"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getTopArtists, loggedin } from './Utils'; // Import the necessary functions from Utils.js\n\nconst TierList = () => {\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n  const [droppedItems, setDroppedItems] = useState({ S: [], A: [], B: [], C: [], D: [] });\n\n  useEffect(() => {\n    const fetchTopArtistsData = async () => {\n      try {\n        if (!loggedin()) {\n          console.log('User not logged in');\n          return;\n        }\n\n        const accessToken = localStorage.getItem('access_token');\n        const initialDroppedItems = tiers.reduce((acc, tier) => {\n          acc[tier] = [];\n          return acc;\n        }, {});\n\n        let allArtists = [];\n        let offset = 0;\n        const limit = 50; // Increase the limit for more artists per page\n\n        // Fetch artists until you have enough\n        while (allArtists.length < 10) {\n          const topArtistsData = await getTopArtists(accessToken, limit, offset);\n          if (!topArtistsData || !topArtistsData.items || topArtistsData.items.length === 0) {\n            break; // No more artists to fetch\n          }\n          allArtists = [...allArtists, ...topArtistsData.items];\n          offset += limit;\n        }\n\n        // Retrieve artist IDs\n        const artistIds = allArtists.map((artist) => artist.id);\n\n        // Fetch detailed information for each artist\n        const detailedArtists = await Promise.all(\n          artistIds.map(async (artistId) => {\n            const artistDetails = await fetchArtistDetails(accessToken, artistId);\n            return artistDetails;\n          })\n        );\n\n        // Update droppedItems state with fetched artists\n        setDroppedItems({ ...initialDroppedItems, S: detailedArtists });\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Function to fetch detailed artist information\n    const fetchArtistDetails = async (accessToken, artistId) => {\n      try {\n        const url = `https://api.spotify.com/v1/artists/${artistId}`;\n        const response = await fetch(url, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Failed to fetch artist details for artistId ${artistId}`);\n        }\n\n        const artistDetails = await response.json();\n        return artistDetails;\n      } catch (error) {\n        console.error(`Error fetching artist details for artistId ${artistId}:`, error);\n        throw error;\n      }\n    };\n\n    // Call the function to fetch data when the component mounts\n    fetchTopArtistsData();\n  }, []); // Empty dependency array ensures this effect runs once on component mount\n\n  return (\n    <div className=\"tier-list-container\">\n      <h1>Tier List</h1>\n      {/* Render Tier components for each tier */}\n      {tiers.map((tier) => (\n        <div key={tier} className=\"tier-pair\">\n          <div className={`tier-name tier-${tier.toLowerCase()}`}>\n            <h2>{tier}</h2>\n          </div>\n          {/* Render dropped items (artists) for the current tier */}\n          <div className=\"tier\">\n            {droppedItems[tier]?.map((artist) => (\n              <div key={artist.id} className=\"artist-item\">\n                <img src={artist.images[0].url} alt={artist.name} style={{ width: 90, height: 90 }} />\n                <p>{artist.name}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TierList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}