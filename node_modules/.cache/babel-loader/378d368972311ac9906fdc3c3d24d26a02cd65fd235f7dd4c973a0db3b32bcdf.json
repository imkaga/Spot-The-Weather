{"ast":null,"code":"var _jsxFileName = \"/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/FindMusic.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getTopArtists, loggedin } from './Utils'; // Import necessary functions from utils.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TierList = () => {\n  _s();\n  var _droppedItems$items;\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n  const [droppedItems, setDroppedItems] = useState({\n    S: [],\n    A: [],\n    B: [],\n    C: [],\n    D: []\n  });\n  const [numArtists, setNumArtists] = useState(10); // Default number of artists to display\n  const [droppedArtistIds, setDroppedArtistIds] = useState(new Set());\n  const [loggedIn, setLoggedIn] = useState(false); // State for user login status\n\n  useEffect(() => {\n    setLoggedIn(loggedin()); // Check if user is logged in when component mounts\n  }, []);\n  useEffect(() => {\n    if (!loggedIn) {\n      // If user is not logged in, no need to fetch data\n      return;\n    }\n    const fetchTopArtistsData = async () => {\n      try {\n        const accessToken = localStorage.getItem('access_token');\n        const initialDroppedItems = tiers.reduce((acc, tier) => {\n          acc[tier] = [];\n          return acc;\n        }, {});\n        let allArtists = [];\n        const artistIdsSet = new Set(); // Use a Set to keep track of unique artist IDs\n        const limit = 100; // Maximum limit to fetch more artists\n        let offset = 0;\n\n        // Fetch more artists than needed to ensure enough unique ones\n        while (artistIdsSet.size < numArtists) {\n          const topArtistsData = await getTopArtists(accessToken, limit, offset);\n          if (!topArtistsData || !topArtistsData.items || topArtistsData.items.length === 0) {\n            break; // No more artists to fetch\n          }\n\n          // Filter and collect unique artists\n          topArtistsData.items.forEach(artist => {\n            if (!artistIdsSet.has(artist.id)) {\n              artistIdsSet.add(artist.id);\n              allArtists.push(artist);\n            }\n          });\n          offset += limit;\n        }\n\n        // Take only the specified number of unique artists\n        const uniqueArtists = allArtists.slice(0, numArtists);\n\n        // Update droppedItems state with fetched artists\n        setDroppedItems({\n          ...initialDroppedItems,\n          items: uniqueArtists\n        });\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Call the function to fetch data when the component mounts or when numArtists changes\n    fetchTopArtistsData();\n  }, [numArtists, loggedIn]); // Trigger effect whenever numArtists or loggedIn changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tier-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tier List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), loggedIn ?\n    /*#__PURE__*/\n    // Render content only if user is logged in\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tier-list\",\n        children: tiers.map(tier => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tier-pair\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tier-name tier-${tier.toLowerCase()}`,\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: tier\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tier, {\n            tier: tier\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), \" \"]\n        }, tier, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"numArtists\",\n          children: \"Liczba artyst\\xF3w:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"numArtists\",\n          value: numArtists,\n          onChange: e => setNumArtists(parseInt(e.target.value)),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 10,\n            children: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 25,\n            children: \"25\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 50,\n            children: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"items-container\",\n        children: (_droppedItems$items = droppedItems.items) === null || _droppedItems$items === void 0 ? void 0 : _droppedItems$items.filter(artist => !droppedArtistIds.has(artist.id)).map(artist => /*#__PURE__*/_jsxDEV(DraggableArtist, {\n          artist: artist,\n          isSplitName: true\n        }, artist.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Log in to view content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(TierList, \"u8kzm07C2K/evjaqKag4oRCa9bk=\");\n_c = TierList;\nexport default TierList;\nvar _c;\n$RefreshReg$(_c, \"TierList\");","map":{"version":3,"names":["React","useState","useEffect","getTopArtists","loggedin","jsxDEV","_jsxDEV","Fragment","_Fragment","TierList","_s","_droppedItems$items","tiers","droppedItems","setDroppedItems","S","A","B","C","D","numArtists","setNumArtists","droppedArtistIds","setDroppedArtistIds","Set","loggedIn","setLoggedIn","fetchTopArtistsData","accessToken","localStorage","getItem","initialDroppedItems","reduce","acc","tier","allArtists","artistIdsSet","limit","offset","size","topArtistsData","items","length","forEach","artist","has","id","add","push","uniqueArtists","slice","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","toLowerCase","Tier","htmlFor","value","onChange","e","parseInt","target","filter","DraggableArtist","isSplitName","_c","$RefreshReg$"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/FindMusic.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getTopArtists, loggedin } from './Utils'; // Import necessary functions from utils.js\n\nconst TierList = () => {\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n  const [droppedItems, setDroppedItems] = useState({ S: [], A: [], B: [], C: [], D: [] });\n  const [numArtists, setNumArtists] = useState(10); // Default number of artists to display\n  const [droppedArtistIds, setDroppedArtistIds] = useState(new Set());\n  const [loggedIn, setLoggedIn] = useState(false); // State for user login status\n\n  useEffect(() => {\n    setLoggedIn(loggedin()); // Check if user is logged in when component mounts\n  }, []);\n\n  useEffect(() => {\n    if (!loggedIn) {\n      // If user is not logged in, no need to fetch data\n      return;\n    }\n    \n    const fetchTopArtistsData = async () => {\n      try {\n        const accessToken = localStorage.getItem('access_token');\n        const initialDroppedItems = tiers.reduce((acc, tier) => {\n          acc[tier] = [];\n          return acc;\n        }, {});\n\n        let allArtists = [];\n        const artistIdsSet = new Set(); // Use a Set to keep track of unique artist IDs\n        const limit = 100; // Maximum limit to fetch more artists\n        let offset = 0;\n\n        // Fetch more artists than needed to ensure enough unique ones\n        while (artistIdsSet.size < numArtists) {\n          const topArtistsData = await getTopArtists(accessToken, limit, offset);\n          if (!topArtistsData || !topArtistsData.items || topArtistsData.items.length === 0) {\n            break; // No more artists to fetch\n          }\n\n          // Filter and collect unique artists\n          topArtistsData.items.forEach((artist) => {\n            if (!artistIdsSet.has(artist.id)) {\n              artistIdsSet.add(artist.id);\n              allArtists.push(artist);\n            }\n          });\n\n          offset += limit;\n        }\n\n        // Take only the specified number of unique artists\n        const uniqueArtists = allArtists.slice(0, numArtists);\n\n        // Update droppedItems state with fetched artists\n        setDroppedItems({ ...initialDroppedItems, items: uniqueArtists });\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Call the function to fetch data when the component mounts or when numArtists changes\n    fetchTopArtistsData();\n  }, [numArtists, loggedIn]); // Trigger effect whenever numArtists or loggedIn changes\n\n  return (\n    <div className=\"tier-list-container\">\n      <h1>Tier List</h1>\n\n      {loggedIn ? ( // Render content only if user is logged in\n        <>\n          {/* Render Tier components for each tier */}\n          <div className=\"tier-list\">\n            {tiers.map((tier) => (\n              <div key={tier} className=\"tier-pair\">\n                <div className={`tier-name tier-${tier.toLowerCase()}`}>\n                  <h2>{tier}</h2>\n                </div>\n                {/* Render Tier component for the current tier */}\n                <Tier tier={tier} /> {/* Pass tier prop to Tier component */}\n              </div>\n            ))}\n          </div>\n\n          {/* Dropdown to select number of artists */}\n          <div>\n            <label htmlFor=\"numArtists\">Liczba artystów:</label>\n            <select id=\"numArtists\" value={numArtists} onChange={(e) => setNumArtists(parseInt(e.target.value))}>\n              <option value={10}>10</option>\n              <option value={25}>25</option>\n              <option value={50}>50</option>\n            </select>\n          </div>\n          \n          {/* Render draggable items (artists) */}\n          <div className=\"items-container\">\n            {droppedItems.items?.filter((artist) => !droppedArtistIds.has(artist.id)).map((artist) => (\n              <DraggableArtist key={artist.id} artist={artist} isSplitName={true} />\n            ))}\n          </div>\n        </>\n      ) : (\n        <p>Log in to view content</p>\n      )}\n    </div>\n  );\n};\n\nexport default TierList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}