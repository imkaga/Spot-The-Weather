{"ast":null,"code":"var _jsxFileName = \"/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Tier from './Tier';\nimport '../styles/TierList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TierList = () => {\n  _s();\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n  const items = ['Item 1', 'Item 2', 'Item 3', 'TEST'];\n  const [droppedItems, setDroppedItems] = useState({});\n  const handleDrop = tier => itemId => {\n    setDroppedItems(prevItems => ({\n      ...prevItems,\n      [tier]: [...(prevItems[tier] || []), itemId]\n    }));\n  };\n  const handleClearDrop = (tier, itemId) => {\n    setDroppedItems(prevItems => ({\n      ...prevItems,\n      [tier]: prevItems[tier].filter(id => id !== itemId)\n    }));\n  };\n\n  // Determine the number of pairs per row (e.g., 3 pairs per row)\n  const pairsPerRow = 3;\n\n  // Chunk tiers into arrays of pairsPerRow elements\n  const tierRows = [];\n  for (let i = 0; i < tiers.length; i += pairsPerRow) {\n    tierRows.push(tiers.slice(i, i + pairsPerRow));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tier-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tier List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), tierRows.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tier-row\",\n      children: row.map(tier => {\n        var _droppedItems$tier;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tier-pair\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tier\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: tier\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"dropped-items\",\n              children: (_droppedItems$tier = droppedItems[tier]) === null || _droppedItems$tier === void 0 ? void 0 : _droppedItems$tier.map(itemId => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [itemId, /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleClearDrop(tier, itemId),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 23\n                }, this)]\n              }, itemId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tier, {\n            tier: tier,\n            onDrop: handleDrop(tier)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, tier, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this);\n      })\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-container\",\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        draggable: true,\n        onDragStart: e => e.dataTransfer.setData('text/plain', item),\n        children: item\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(TierList, \"NNIGrCnDv5AziYV3/E67Fw1LJAo=\");\n_c = TierList;\nexport default TierList;\nvar _c;\n$RefreshReg$(_c, \"TierList\");","map":{"version":3,"names":["React","useState","Tier","jsxDEV","_jsxDEV","TierList","_s","tiers","items","droppedItems","setDroppedItems","handleDrop","tier","itemId","prevItems","handleClearDrop","filter","id","pairsPerRow","tierRows","i","length","push","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","row","index","_droppedItems$tier","onClick","onDrop","item","draggable","onDragStart","e","dataTransfer","setData","_c","$RefreshReg$"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Tier from './Tier';\nimport '../styles/TierList.css';\n\nconst TierList = () => {\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n  const items = ['Item 1', 'Item 2', 'Item 3', 'TEST'];\n\n  const [droppedItems, setDroppedItems] = useState({});\n\n  const handleDrop = (tier) => (itemId) => {\n    setDroppedItems((prevItems) => ({\n      ...prevItems,\n      [tier]: [...(prevItems[tier] || []), itemId],\n    }));\n  };\n\n  const handleClearDrop = (tier, itemId) => {\n    setDroppedItems((prevItems) => ({\n      ...prevItems,\n      [tier]: prevItems[tier].filter((id) => id !== itemId),\n    }));\n  };\n\n  // Determine the number of pairs per row (e.g., 3 pairs per row)\n  const pairsPerRow = 3;\n\n  // Chunk tiers into arrays of pairsPerRow elements\n  const tierRows = [];\n  for (let i = 0; i < tiers.length; i += pairsPerRow) {\n    tierRows.push(tiers.slice(i, i + pairsPerRow));\n  }\n\n  return (\n    <div className=\"tier-list-container\">\n      <h1>Tier List</h1>\n\n      {/* Render tier rows */}\n      {tierRows.map((row, index) => (\n        <div key={index} className=\"tier-row\">\n          {/* Render tier pairs in the current row */}\n          {row.map((tier) => (\n            <div key={tier} className=\"tier-pair\">\n              <div className=\"tier\">\n                <h2>{tier}</h2>\n                {/* Render dropped items for the current tier */}\n                <ul className=\"dropped-items\">\n                  {droppedItems[tier]?.map((itemId) => (\n                    <li key={itemId}>\n                      {itemId}\n                      <button onClick={() => handleClearDrop(tier, itemId)}>Remove</button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n\n              {/* Render Tier component */}\n              <Tier tier={tier} onDrop={handleDrop(tier)} />\n            </div>\n          ))}\n        </div>\n      ))}\n\n      {/* Render draggable items */}\n      <div className=\"items-container\">\n        {items.map((item) => (\n          <div\n            key={item}\n            className=\"item\"\n            draggable\n            onDragStart={(e) => e.dataTransfer.setData('text/plain', item)}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TierList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}