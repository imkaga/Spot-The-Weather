{"ast":null,"code":"var _jsxFileName = \"/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/FindMusic.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { searchMusicRecommendations, loggedin } from \"./Utils\";\nimport * as Utils from \"./Utils\"; // Import functions from Utils.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FindMusic = () => {\n  _s();\n  // State declarations\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const [tempo, setTempo] = useState(\"\");\n  const [popularity, setPopularity] = useState({\n    min: 0,\n    max: 100,\n    target: 50\n  });\n  const [limit, setLimit] = useState(10); // Initialize limit state\n  const [recommendedTracks, setRecommendedTracks] = useState([]);\n  const [playlistId, setPlaylistId] = useState(\"\"); // State to store the playlist ID\n  const [loggedIn, setLoggedIn] = useState(false); // State for user login status\n  const [subgenres, setSubgenres] = useState([]); // State for subgenres\n  const [selectedSubgenre, setSelectedSubgenre] = useState(\"\"); // State for selected subgenre\n  const [userId, setUserId] = useState(''); // State for storing user's Spotify user ID\n  const [userName, setUserName] = useState(''); // State for storing user's name  \n\n  useEffect(() => {\n    setLoggedIn(loggedin()); // Check if user is logged in when component mounts\n    setPlaylistId(\"YOUR_PLAYLIST_ID_HERE\");\n  }, []);\n  useEffect(() => {\n    // Effect for handling authorization code\n    Utils.handleAuthorizationCode().then(() => {\n      const accessToken = localStorage.getItem('access_token');\n      if (accessToken) {\n        console.log('Access Token:', accessToken); // Logging access token\n        Utils.getProfile(accessToken).then(data => {\n          if (data) {\n            console.log('User Profile:', data); // Logging user profile\n            setUserName(data.display_name); // Setting user's name\n            setUserId(data.id); // Set the user's Spotify user ID\n          }\n        }).catch(error => {\n          console.error('Error fetching user profile:', error);\n        });\n      } else {\n        console.error('Access token not found');\n      }\n    }).catch(error => {\n      console.error('Error handling authorization code:', error);\n    });\n  }, []);\n  const handleLogin = Utils.authenticate; // Function for handling login\n\n  const createPlaylist = async (accessToken, userId) => {\n    // Function for creating playlist\n    const playlistName = `Spot The Weather - Wyszukiwarka`;\n    const url = `https://api.spotify.com/v1/users/${userId}/playlists`;\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: playlistName,\n        public: true\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create playlist');\n    }\n    return response.json();\n  };\n  const handleAddToPlaylist = async () => {\n    try {\n      const accessToken = localStorage.getItem(\"access_token\");\n      if (!accessToken) {\n        console.error(\"Access token not found\");\n        return;\n      }\n      const trackUris = recommendedTracks.map(track => track.uri);\n      const playlistResponse = await createPlaylist(accessToken, userId);\n      const playlistId = playlistResponse.id;\n      const apiUrl = `https://api.spotify.com/v1/playlists/${playlistId}/tracks`;\n      const response = await fetch(apiUrl, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          uris: trackUris\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      // If successful, notify the user or perform any necessary actions\n      console.log(\"Tracks added to playlist successfully!\");\n    } catch (error) {\n      console.error(\"Error adding tracks to playlist:\", error);\n    }\n  };\n\n  // Event handler functions\n  const handleGenreChange = event => {\n    const selectedMainGenre = event.target.value;\n    setSelectedGenre(selectedMainGenre);\n\n    // Format and set available subgenres based on selected main genre\n    const formattedSubgenres = (genreSubgenres[selectedMainGenre] || []).map(subgenre => formatSubgenre(subgenre));\n    setSubgenres(formattedSubgenres);\n  };\n  const formatSubgenre = subgenre => {\n    // Split the subgenre string by spaces and capitalize each word\n    return subgenre.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  const handleSubgenreChange = event => {\n    const selectedSubgenre = event.target.value;\n    setSelectedSubgenre(selectedSubgenre);\n  };\n  const handleTempoChange = event => {\n    setTempo(event.target.value);\n  };\n\n  // Helper functions to get min and max tempo based on selected tempo option\n  const getMinTempo = tempo => {\n    switch (tempo) {\n      case \"fast\":\n        return 120;\n      case \"slow\":\n        return 60;\n      case \"calm\":\n        return 90;\n      default:\n        return 0;\n    }\n  };\n  const getMaxTempo = tempo => {\n    switch (tempo) {\n      case \"fast\":\n        return 180;\n      case \"slow\":\n        return 100;\n      case \"calm\":\n        return 120;\n      default:\n        return 200;\n    }\n  };\n  const handlePopularityChange = event => {\n    const selectedValue = event.target.value;\n    const [min, max] = selectedValue.split(\"-\").map(Number);\n    setPopularity({\n      min,\n      max\n    });\n  };\n  const handleLimitChange = event => {\n    setLimit(parseInt(event.target.value)); // Parse the value to integer and update the limit state\n  };\n\n  // Lista gatunków\n  const genreSubgenres = {\n    pop: [\"dance-pop\", \"synth-pop\", \"pop-film\", \"r-n-b\"],\n    \"hip-hop\": [\"rap\", \"trap\"],\n    rock: [\"alt-rock\", \"black-metal\", \"emo\", \"goth\", \"hard-rock\", \"heavy-metal\", \"new-age\", \"new-wave\", \"metal\", \"metalcore\", \"punk\", \"post-punk\"],\n    indie: [\"dream-pop\", \"indie-rock\", \"indie-shoegaze\", \"indietronica\", \"indie-pop\"],\n    jazz: [],\n    // Brak podgatunków do dopasowania\n    classical: [\"opera\", \"piano\", \"baroque\", \"romantic\"],\n    electronic: [\"dubstep\", \"edm\", \"house\", \"techno\", \"trance\"],\n    disco: [\"funk\", \"nu-disco\"],\n    \"new-age\": [\n    // Prawdopodobnie do wyjebania\n    \"ambient\"],\n    folk: [\"folk-rock\", \"sertanejo\", \"tango\", \"country\"],\n    inne: [\"anime\", \"blues\"]\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!selectedGenre) {\n      alert(\"Proszę wybrać gatunek!\");\n      return; // Exit early if no genre is selected\n    }\n    const genreToSearch = selectedSubgenre || selectedGenre; // Use subgenre if selected, otherwise use main genre\n\n    try {\n      const accessToken = localStorage.getItem(\"access_token\");\n      if (!accessToken) {\n        console.error(\"Access token not found\");\n        return;\n      }\n\n      // Ensure that the genre name is lowercase for API compatibility\n      const lowercaseGenreToSearch = genreToSearch.toLowerCase();\n      let apiUrl = `https://api.spotify.com/v1/recommendations?seed_genres=${encodeURIComponent(lowercaseGenreToSearch)}`;\n\n      // Add tempo parameter if tempo is selected\n      if (tempo) {\n        apiUrl += `&min_tempo=${getMinTempo(tempo)}&max_tempo=${getMaxTempo(tempo)}`;\n      }\n      apiUrl += `&min_popularity=${popularity.min}&max_popularity=${popularity.max}&limit=${limit}`;\n      console.log(\"API URL:\", apiUrl); // Log the constructed API URL to the console\n\n      const response = await fetch(apiUrl, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(`API error! ${data.error.message}`);\n      }\n      setRecommendedTracks(data.tracks);\n    } catch (error) {\n      console.error(\"Error fetching recommended tracks:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Find Music\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wa\\u017Cne! Popularno\\u015B\\u0107 muzyki nie jest okre\\u015Blana przez ilo\\u015B\\u0107 ods\\u0142ucha\\u0144, a jak cz\\u0119sto by\\u0142a ods\\u0142uchiwana w ostatnim czasie.\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Gatunek:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedGenre,\n                onChange: handleGenreChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"pop\",\n                  children: \"Pop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"hip-hop\",\n                  children: \"Rap/Hip-Hop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"rock\",\n                  children: \"Rock/Metal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"indie\",\n                  children: \"Indie\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"jazz\",\n                  children: \"Jazz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"classical\",\n                  children: \"Classical\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"electronic\",\n                  children: \"Electronic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"disco\",\n                  children: \"Disco\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"new-age\",\n                  children: \"New Age\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"folk\",\n                  children: \"Folk\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"inne\",\n                  children: \"Inne\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Podgatunek:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedSubgenre,\n                onChange: handleSubgenreChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 17\n                }, this), subgenres.map((subgenre, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: subgenre,\n                  children: subgenre\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 19\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Tempo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: tempo,\n                onChange: handleTempoChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"fast\",\n                  children: \"Szybkie\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"slow\",\n                  children: \"Wolne\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"calm\",\n                  children: \"Spokojne\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Popularno\\u015B\\u0107:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: `${popularity.min}-${popularity.max}`,\n                onChange: handlePopularityChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0-15\",\n                  children: \"Ma\\u0142o popularne\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"16-40\",\n                  children: \"Znane\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"41-70\",\n                  children: \"Popularne\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"71-100\",\n                  children: \"Bardzo Popularne\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Ilo\\u015B\\u0107 piosenek:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: limit,\n                onChange: handleLimitChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"10\",\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"20\",\n                  children: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"30\",\n                  children: \"30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Recommend Songs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Recommended Songs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommended-main\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: recommendedTracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: track.album.images[0].url,\n                    alt: \"Album Cover\",\n                    style: {\n                      width: \"50px\",\n                      height: \"50px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontWeight: \"bold\"\n                    },\n                    children: track.artists.map(artist => artist.name).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 23\n                  }, this), \" \", \"- \", track.name, recommendedTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleAddToPlaylist,\n                    children: \"Add Songs to Playlist \\\"Spot The Weather - Wyszukiwarka\\\"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 9\n                  }, this), track.preview_url ?\n                  /*#__PURE__*/\n                  // If preview_url is available, render the audio player\n                  _jsxDEV(\"audio\", {\n                    controls: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                      src: track.preview_url,\n                      type: \"audio/mpeg\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 27\n                    }, this), \"Your browser does not support the audio element.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 25\n                  }, this) :\n                  /*#__PURE__*/\n                  // If preview_url is not available, display the message\n                  _jsxDEV(\"p\", {\n                    className: \"song-preview\",\n                    children: \"Podgl\\u0105d piosenki niedost\\u0119pny\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u017Beby wy\\u015Bwietli\\u0107 zaawarto\\u015B\\u0107 tej strony - Zaloguj Si\\u0119!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login with Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n_s(FindMusic, \"jsBYIYlpqmR9NBgsbWjLtcM6NZo=\");\n_c = FindMusic;\nexport default FindMusic;\nvar _c;\n$RefreshReg$(_c, \"FindMusic\");","map":{"version":3,"names":["React","useState","useEffect","searchMusicRecommendations","loggedin","Utils","jsxDEV","_jsxDEV","Fragment","_Fragment","FindMusic","_s","selectedGenre","setSelectedGenre","tempo","setTempo","popularity","setPopularity","min","max","target","limit","setLimit","recommendedTracks","setRecommendedTracks","playlistId","setPlaylistId","loggedIn","setLoggedIn","subgenres","setSubgenres","selectedSubgenre","setSelectedSubgenre","userId","setUserId","userName","setUserName","handleAuthorizationCode","then","accessToken","localStorage","getItem","console","log","getProfile","data","display_name","id","catch","error","handleLogin","authenticate","createPlaylist","playlistName","url","response","fetch","method","headers","body","JSON","stringify","name","public","ok","Error","json","handleAddToPlaylist","trackUris","map","track","uri","playlistResponse","apiUrl","Authorization","uris","status","handleGenreChange","event","selectedMainGenre","value","formattedSubgenres","genreSubgenres","subgenre","formatSubgenre","split","word","charAt","toUpperCase","slice","join","handleSubgenreChange","handleTempoChange","getMinTempo","getMaxTempo","handlePopularityChange","selectedValue","Number","handleLimitChange","parseInt","pop","rock","indie","jazz","classical","electronic","disco","folk","inne","handleSubmit","preventDefault","alert","genreToSearch","lowercaseGenreToSearch","toLowerCase","encodeURIComponent","message","tracks","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","class","onChange","index","type","src","album","images","alt","style","width","height","fontWeight","artists","artist","length","onClick","preview_url","controls","_c","$RefreshReg$"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/FindMusic.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { searchMusicRecommendations, loggedin } from \"./Utils\";\nimport * as Utils from \"./Utils\"; // Import functions from Utils.js\n\nconst FindMusic = () => {\n  // State declarations\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const [tempo, setTempo] = useState(\"\");\n  const [popularity, setPopularity] = useState({\n    min: 0,\n    max: 100,\n    target: 50,\n  });\n  const [limit, setLimit] = useState(10); // Initialize limit state\n  const [recommendedTracks, setRecommendedTracks] = useState([]);\n  const [playlistId, setPlaylistId] = useState(\"\"); // State to store the playlist ID\n  const [loggedIn, setLoggedIn] = useState(false); // State for user login status\n  const [subgenres, setSubgenres] = useState([]); // State for subgenres\n  const [selectedSubgenre, setSelectedSubgenre] = useState(\"\"); // State for selected subgenre\n  const [userId, setUserId] = useState(''); // State for storing user's Spotify user ID\n  const [userName, setUserName] = useState(''); // State for storing user's name  \n\n  useEffect(() => {\n    setLoggedIn(loggedin()); // Check if user is logged in when component mounts\n    setPlaylistId(\"YOUR_PLAYLIST_ID_HERE\");\n  }, []);\n\n  useEffect(() => { // Effect for handling authorization code\n    Utils.handleAuthorizationCode()\n        .then(() => {\n            const accessToken = localStorage.getItem('access_token');\n            if (accessToken) {\n                console.log('Access Token:', accessToken); // Logging access token\n                Utils.getProfile(accessToken)\n                    .then(data => {\n                        if (data) {\n                            console.log('User Profile:', data); // Logging user profile\n                            setUserName(data.display_name); // Setting user's name\n                            setUserId(data.id); // Set the user's Spotify user ID\n                        }\n                    })\n                    .catch(error => {\n                        console.error('Error fetching user profile:', error);\n                    });\n            } else {\n                console.error('Access token not found');\n            }\n        })\n        .catch(error => {\n            console.error('Error handling authorization code:', error);\n        });\n}, []);\n\n  const handleLogin = Utils.authenticate; // Function for handling login\n\n  const createPlaylist = async (accessToken, userId) => { // Function for creating playlist\n    const playlistName = `Spot The Weather - Wyszukiwarka`;\n\n    const url = `https://api.spotify.com/v1/users/${userId}/playlists`;\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n            'Authorization': `Bearer ${accessToken}`,\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            name: playlistName,\n            public: true,\n        }),\n    });\n    if (!response.ok) {\n        throw new Error('Failed to create playlist');\n    }\n    return response.json();\n};\n\n  const handleAddToPlaylist = async () => {\n    try {\n      const accessToken = localStorage.getItem(\"access_token\");\n      if (!accessToken) {\n        console.error(\"Access token not found\");\n        return;\n      }\n\n      const trackUris = recommendedTracks.map((track) => track.uri);\n      const playlistResponse = await createPlaylist(accessToken, userId);\n      const playlistId = playlistResponse.id;\n      const apiUrl = `https://api.spotify.com/v1/playlists/${playlistId}/tracks`;\n\n      const response = await fetch(apiUrl, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ uris: trackUris }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      // If successful, notify the user or perform any necessary actions\n      console.log(\"Tracks added to playlist successfully!\");\n    } catch (error) {\n      console.error(\"Error adding tracks to playlist:\", error);\n    }\n  };\n\n  // Event handler functions\n  const handleGenreChange = (event) => {\n    const selectedMainGenre = event.target.value;\n    setSelectedGenre(selectedMainGenre);\n  \n    // Format and set available subgenres based on selected main genre\n    const formattedSubgenres = (genreSubgenres[selectedMainGenre] || []).map(subgenre => formatSubgenre(subgenre));\n    setSubgenres(formattedSubgenres);\n  };\n\n  const formatSubgenre = (subgenre) => {\n    // Split the subgenre string by spaces and capitalize each word\n    return subgenre.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  \n\n  const handleSubgenreChange = (event) => {\n    const selectedSubgenre = event.target.value;\n    setSelectedSubgenre(selectedSubgenre);\n  };\n\n  const handleTempoChange = (event) => {\n    setTempo(event.target.value);\n  };\n\n  // Helper functions to get min and max tempo based on selected tempo option\n  const getMinTempo = (tempo) => {\n    switch (tempo) {\n      case \"fast\":\n        return 120;\n      case \"slow\":\n        return 60;\n      case \"calm\":\n        return 90;\n      default:\n        return 0;\n    }\n  };\n\n  const getMaxTempo = (tempo) => {\n    switch (tempo) {\n      case \"fast\":\n        return 180;\n      case \"slow\":\n        return 100;\n      case \"calm\":\n        return 120;\n      default:\n        return 200;\n    }\n  };\n\n  const handlePopularityChange = (event) => {\n    const selectedValue = event.target.value;\n    const [min, max] = selectedValue.split(\"-\").map(Number);\n    setPopularity({ min, max });\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value)); // Parse the value to integer and update the limit state\n  };\n\n  // Lista gatunków\n  const genreSubgenres = {\n    pop: [\n      \"dance-pop\",\n      \"synth-pop\",\n      \"pop-film\",\n      \"r-n-b\"\n    ],\n    \"hip-hop\": [\n      \"rap\",\n      \"trap\",\n    ],\n    rock: [\n      \"alt-rock\",\n      \"black-metal\",\n      \"emo\",\n      \"goth\",\n      \"hard-rock\",\n      \"heavy-metal\",\n      \"new-age\",\n      \"new-wave\",\n      \"metal\",\n      \"metalcore\",\n      \"punk\",\n      \"post-punk\",\n    ],\n    indie: [\n      \"dream-pop\",\n      \"indie-rock\",\n      \"indie-shoegaze\",\n      \"indietronica\",\n      \"indie-pop\",\n    ],\n    jazz: [], // Brak podgatunków do dopasowania\n    classical: [\n      \"opera\",\n      \"piano\",\n      \"baroque\",\n      \"romantic\"\n    ],\n    electronic: [\n      \"dubstep\",\n      \"edm\",\n      \"house\",\n      \"techno\",\n      \"trance\",\n    ],\n    disco: [\n      \"funk\",\n      \"nu-disco\"\n    ],\n    \"new-age\": [ // Prawdopodobnie do wyjebania\n      \"ambient\",\n    ],\n    folk: [\n      \"folk-rock\",\n      \"sertanejo\",\n      \"tango\",\n      \"country\"\n    ],\n    inne: [\n      \"anime\",\n      \"blues\",\n      \n    ],\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!selectedGenre) {\n      alert(\"Proszę wybrać gatunek!\");\n      return; // Exit early if no genre is selected\n    }\n  \n    const genreToSearch = selectedSubgenre || selectedGenre; // Use subgenre if selected, otherwise use main genre\n  \n    try {\n      const accessToken = localStorage.getItem(\"access_token\");\n      if (!accessToken) {\n        console.error(\"Access token not found\");\n        return;\n      }\n  \n      // Ensure that the genre name is lowercase for API compatibility\n      const lowercaseGenreToSearch = genreToSearch.toLowerCase();\n  \n      let apiUrl = `https://api.spotify.com/v1/recommendations?seed_genres=${encodeURIComponent(\n        lowercaseGenreToSearch\n      )}`;\n  \n      // Add tempo parameter if tempo is selected\n      if (tempo) {\n        apiUrl += `&min_tempo=${getMinTempo(tempo)}&max_tempo=${getMaxTempo(\n          tempo\n        )}`;\n      }\n  \n      apiUrl += `&min_popularity=${popularity.min}&max_popularity=${popularity.max}&limit=${limit}`;\n  \n      console.log(\"API URL:\", apiUrl); // Log the constructed API URL to the console\n  \n      const response = await fetch(apiUrl, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n  \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n  \n      const data = await response.json();\n      if (data.error) {\n        throw new Error(`API error! ${data.error.message}`);\n      }\n  \n      setRecommendedTracks(data.tracks);\n    } catch (error) {\n      console.error(\"Error fetching recommended tracks:\", error);\n    }\n  };\n  \n\n  return (\n    <>\n      {loggedIn ? (\n        <>\n        <div className=\"card\">\n          <h1>Find Music</h1>\n          <p>\n            Ważne! Popularność muzyki nie jest określana przez ilość odsłuchań,\n            a jak często była odsłuchiwana w ostatnim czasie.{\" \"}\n          </p>\n          <br></br>\n          <div>\n            <form onSubmit={handleSubmit}>\n            <div class=\"form-container\">\n              <label>Gatunek:</label>\n              <select value={selectedGenre} onChange={handleGenreChange}>\n                <option value=\"\">-</option>\n                <option value=\"pop\">Pop</option>\n                <option value=\"hip-hop\">Rap/Hip-Hop</option>\n                <option value=\"rock\">Rock/Metal</option>\n                <option value=\"indie\">Indie</option>\n                <option value=\"jazz\">Jazz</option>\n                <option value=\"classical\">Classical</option>\n                <option value=\"electronic\">Electronic</option>\n                <option value=\"disco\">Disco</option>\n                <option value=\"new-age\">New Age</option>\n                <option value=\"folk\">Folk</option>\n                <option value=\"inne\">Inne</option>\n              </select>\n\n              <label>Podgatunek:</label>\n              <select value={selectedSubgenre} onChange={handleSubgenreChange}>\n                <option value=\"\">-</option>\n                {subgenres.map((subgenre, index) => (\n                  <option key={index} value={subgenre}>\n                    {subgenre}\n                  </option>\n                ))}\n              </select>\n\n\n              <label>Tempo:</label>\n              <select value={tempo} onChange={handleTempoChange}>\n                <option value=\"\">-</option>\n                <option value=\"fast\">Szybkie</option>\n                <option value=\"slow\">Wolne</option>\n                <option value=\"calm\">Spokojne</option>\n              </select>\n\n              <label>Popularność:</label>\n              <select\n                value={`${popularity.min}-${popularity.max}`}\n                onChange={handlePopularityChange}\n              >\n                <option value=\"\">-</option>\n                <option value=\"0-15\">Mało popularne</option>\n                <option value=\"16-40\">Znane</option>\n                <option value=\"41-70\">Popularne</option>\n                <option value=\"71-100\">Bardzo Popularne</option>\n              </select>\n\n              <label>Ilość piosenek:</label>\n              <select value={limit} onChange={handleLimitChange}>\n                <option value=\"10\">10</option>\n                <option value=\"20\">20</option>\n                <option value=\"30\">30</option>\n              </select>\n            </div>\n              <button type=\"submit\">Recommend Songs</button>\n            </form>\n          </div>\n\n          <div>\n            <h3>Recommended Songs</h3>\n            <div className=\"recommended-main\">\n              <ul>\n                {recommendedTracks.map((track, index) => (\n                  <li key={index}>\n                    <div>\n                      <img\n                        src={track.album.images[0].url}\n                        alt=\"Album Cover\"\n                        style={{ width: \"50px\", height: \"50px\" }}\n                      />\n                    </div>\n                    <div>\n                      <span style={{ fontWeight: \"bold\" }}>\n                        {track.artists.map((artist) => artist.name).join(\", \")}\n                      </span>{\" \"}\n                      - {track.name}\n                      {/* Add button to add recommended tracks to playlist */}\n      {recommendedTracks.length > 0 && (\n        <button onClick={handleAddToPlaylist}>\n          Add Songs to Playlist \"Spot The Weather - Wyszukiwarka\"\n        </button>\n      )}\n                      {/* Check if track.preview_url exists */}\n                      {track.preview_url ? (\n                        // If preview_url is available, render the audio player\n                        <audio controls>\n                          <source src={track.preview_url} type=\"audio/mpeg\" />\n                          Your browser does not support the audio element.\n                        </audio>\n                      ) : (\n                        // If preview_url is not available, display the message\n                        <p className=\"song-preview\">Podgląd piosenki niedostępny</p>\n                      )}\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          </div>\n        </>\n      ) : (\n        <>\n          <h3>Żeby wyświetlić zaawartość tej strony - Zaloguj Się!</h3>\n          <button onClick={handleLogin}>Login with Spotify</button>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default FindMusic;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}