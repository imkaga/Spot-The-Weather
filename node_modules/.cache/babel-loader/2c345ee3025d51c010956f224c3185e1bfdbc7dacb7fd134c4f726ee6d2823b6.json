{"ast":null,"code":"var _jsxFileName = \"/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as Utils from './Utils'; // Import functions from Utils.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [city, setCity] = useState(''); // State for storing the city input\n  const [weatherData, setWeatherData] = useState(null); // State for storing weather data\n  const [errorMessage, setErrorMessage] = useState(''); // State for error messages\n  const [userName, setUserName] = useState(''); // State for storing user's name\n  const [loggedIn, setLoggedIn] = useState(false); // State for user login status\n  const [theme, setTheme] = useState(() => localStorage.getItem('theme') || 'main'); // State for storing theme\n  const [recommendedTracks, setRecommendedTracks] = useState([]); // State for storing recommended tracks\n  const [userId, setUserId] = useState(''); // State for storing user's Spotify user ID\n\n  const handleLogin = Utils.authenticate; // Function for handling login\n\n  const handleLogout = () => {\n    // Function for handling logout\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    setLoggedIn(false);\n    window.location.href = '/';\n  };\n  useEffect(() => {\n    // Effect for handling authorization code\n    Utils.handleAuthorizationCode().then(() => {\n      const accessToken = localStorage.getItem('access_token');\n      if (accessToken) {\n        console.log('Access Token:', accessToken); // Logging access token\n        Utils.getProfile(accessToken).then(data => {\n          if (data) {\n            console.log('User Profile:', data); // Logging user profile\n            setUserName(data.display_name); // Setting user's name\n            setUserId(data.id); // Set the user's Spotify user ID\n          }\n        }).catch(error => {\n          console.error('Error fetching user profile:', error);\n        });\n      } else {\n        console.error('Access token not found');\n      }\n    }).catch(error => {\n      console.error('Error handling authorization code:', error);\n    });\n  }, []);\n  useEffect(() => {\n    // Effect for setting city and fetching weather data\n    const lastCity = localStorage.getItem('lastCity');\n    if (lastCity) {\n      setCity(lastCity);\n      Utils.fetchWeatherData(lastCity).then(({\n        data,\n        error\n      }) => {\n        if (error) {\n          setErrorMessage(error);\n        } else {\n          setWeatherData(data);\n          setErrorMessage('');\n        }\n      });\n    }\n    const accessToken = localStorage.getItem('access_token');\n    if (accessToken) {\n      Utils.getProfile(accessToken).then(data => {\n        if (data) {\n          setUserName(data.display_name);\n        }\n      }).catch(error => {\n        console.error('Error fetching user profile:', error);\n      });\n    } else {\n      console.error('Access token not found');\n    }\n  }, []);\n  useEffect(() => {\n    // Effect for handling access token and user profile\n    const accessToken = localStorage.getItem('access_token');\n    const refreshToken = localStorage.getItem('refresh_token');\n    if (accessToken) {\n      Utils.getProfile(accessToken, refreshToken).then(data => {\n        if (data) {\n          setUserName(data.display_name);\n          setLoggedIn(true);\n        }\n      }).catch(error => {\n        console.error('Error fetching user profile:', error);\n      });\n    } else {\n      console.error('Access token not found');\n    }\n  }, []);\n  useEffect(() => {\n    // Effect for setting theme\n    document.body.classList.toggle('light-theme', theme === 'light');\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  const handleSearch = () => {\n    // Function for handling search\n    Utils.fetchWeatherData(city).then(({\n      data,\n      error\n    }) => {\n      if (error) {\n        setErrorMessage(error);\n      } else {\n        setWeatherData(data);\n        setErrorMessage('');\n        localStorage.setItem('lastCity', city);\n      }\n    });\n  };\n  const handleChange = e => {\n    // Function for handling input change\n    setCity(e.target.value);\n  };\n  const handleKeyDown = e => {\n    // Function for handling enter key press\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  const toggleTheme = () => {\n    // Function for toggling theme\n    setTheme(prevTheme => prevTheme === 'main' ? 'light' : 'main');\n  };\n  const recommendSongs = async () => {\n    try {\n      const accessToken = localStorage.getItem('access_token');\n      const weatherGenre = mapWeatherToGenres(weatherData); // Get the mapped genre based on weather\n      const response = await Utils.getRecommendations(accessToken, null, weatherGenre, null);\n      setRecommendedTracks(response.tracks);\n    } catch (error) {\n      console.error('Error fetching recommended tracks:', error);\n    }\n  };\n  const mapWeatherToGenres = weatherData => {\n    // Map weather conditions to corresponding music genres\n    const weatherCondition = weatherData.weather[0].main.toLowerCase();\n    switch (weatherCondition) {\n      case 'clear':\n        return 'pop';\n      // Example genre for clear weather\n      case 'rain':\n        return 'chill';\n      // Example genre for rainy weather\n      case 'clouds':\n        return 'indie';\n      // Example genre for cloudy weather\n      // Add more cases for other weather conditions as needed\n      default:\n        return 'pop';\n      // Default genre if weather condition doesn't match any specific genre\n    }\n  };\n  useEffect(() => {\n    // Effect for handling search and recommending songs\n    if (weatherData) {\n      recommendSongs();\n    }\n  }, [weatherData]);\n\n  // Function to create playlist and add recommended songs\n  const savePlaylist = async () => {\n    try {\n      const accessToken = localStorage.getItem('access_token');\n      if (accessToken && userId) {\n        // Create playlist\n        const cityName = weatherData.name;\n        const weatherCondition = weatherData.weather[0].main.toLowerCase();\n        const currentDate = new Date();\n        const playlistResponse = await createPlaylist(accessToken, userId, cityName, weatherCondition, currentDate);\n        const playlistId = playlistResponse.id;\n\n        // Add recommended tracks to the playlist\n        await addTracksToPlaylist(accessToken, userId, playlistId, recommendedTracks.map(track => track.uri));\n        console.log('Playlist created and tracks added successfully');\n      } else {\n        console.error('Access token or user ID not found');\n      }\n    } catch (error) {\n      console.error('Error saving playlist:', error);\n    }\n  };\n  const createPlaylist = async (accessToken, userId) => {\n    const url = `https://api.spotify.com/v1/users/${userId}/playlists`;\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: `City-Weather_Condition-Date(${new Date().toLocaleDateString('en-GB')})`,\n        public: true\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create playlist');\n    }\n    return response.json();\n  };\n  const addTracksToPlaylist = async (accessToken, userId, playlistId, trackUris) => {\n    const url = `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`;\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        uris: trackUris\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to add tracks to playlist');\n    }\n    return response.json();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter city name\",\n            spellCheck: \"false\",\n            value: city,\n            onChange: handleChange,\n            onKeyDown: handleKeyDown // Enables search by hitting enter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSearch,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 38\n        }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Cze\\u015B\\u0107, \", userName, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Weather in \", weatherData.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Condition: \", weatherData.weather[0].main]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temperature: \", Math.round(weatherData.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Humidity: \", weatherData.main.humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind Speed: \", weatherData.wind.speed, \" km/h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: recommendSongs,\n            children: \"Recommend Songs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 21\n          }, this), recommendedTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Recommended Songs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: recommendedTracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [track.name, \" - \", track.artists.map(artist => artist.name).join(', ')]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: savePlaylist,\n              children: \"Save Playlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-btn\",\n        onClick: toggleTheme,\n        children: \"Theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), loggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login with Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"w1k8AtxLlq7+T7MZeCcXZGdSK0Y=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Utils","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","city","setCity","weatherData","setWeatherData","errorMessage","setErrorMessage","userName","setUserName","loggedIn","setLoggedIn","theme","setTheme","localStorage","getItem","recommendedTracks","setRecommendedTracks","userId","setUserId","handleLogin","authenticate","handleLogout","removeItem","window","location","href","handleAuthorizationCode","then","accessToken","console","log","getProfile","data","display_name","id","catch","error","lastCity","fetchWeatherData","refreshToken","document","body","classList","toggle","setItem","handleSearch","handleChange","e","target","value","handleKeyDown","key","toggleTheme","prevTheme","recommendSongs","weatherGenre","mapWeatherToGenres","response","getRecommendations","tracks","weatherCondition","weather","main","toLowerCase","savePlaylist","cityName","name","currentDate","Date","playlistResponse","createPlaylist","playlistId","addTracksToPlaylist","map","track","uri","url","fetch","method","headers","JSON","stringify","toLocaleDateString","public","ok","Error","json","trackUris","uris","children","className","type","placeholder","spellCheck","onChange","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Math","round","temp","humidity","wind","speed","length","index","artists","artist","join","_c","$RefreshReg$"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Utils from './Utils'; // Import functions from Utils.js\n\nfunction Home() {\n    const [city, setCity] = useState(''); // State for storing the city input\n    const [weatherData, setWeatherData] = useState(null); // State for storing weather data\n    const [errorMessage, setErrorMessage] = useState(''); // State for error messages\n    const [userName, setUserName] = useState(''); // State for storing user's name\n    const [loggedIn, setLoggedIn] = useState(false); // State for user login status\n    const [theme, setTheme] = useState(() => localStorage.getItem('theme') || 'main'); // State for storing theme\n    const [recommendedTracks, setRecommendedTracks] = useState([]); // State for storing recommended tracks\n    const [userId, setUserId] = useState(''); // State for storing user's Spotify user ID\n\n    \n\n    const handleLogin = Utils.authenticate; // Function for handling login\n\n    const handleLogout = () => { // Function for handling logout\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n        setLoggedIn(false);\n        window.location.href = '/';\n    };\n\n    useEffect(() => { // Effect for handling authorization code\n        Utils.handleAuthorizationCode()\n            .then(() => {\n                const accessToken = localStorage.getItem('access_token');\n                if (accessToken) {\n                    console.log('Access Token:', accessToken); // Logging access token\n                    Utils.getProfile(accessToken)\n                        .then(data => {\n                            if (data) {\n                                console.log('User Profile:', data); // Logging user profile\n                                setUserName(data.display_name); // Setting user's name\n                                setUserId(data.id); // Set the user's Spotify user ID\n                            }\n                        })\n                        .catch(error => {\n                            console.error('Error fetching user profile:', error);\n                        });\n                } else {\n                    console.error('Access token not found');\n                }\n            })\n            .catch(error => {\n                console.error('Error handling authorization code:', error);\n            });\n    }, []);\n\n    useEffect(() => { // Effect for setting city and fetching weather data\n        const lastCity = localStorage.getItem('lastCity');\n        if (lastCity) {\n            setCity(lastCity);\n            Utils.fetchWeatherData(lastCity)\n                .then(({ data, error }) => {\n                    if (error) {\n                        setErrorMessage(error);\n                    } else {\n                        setWeatherData(data);\n                        setErrorMessage('');\n                    }\n                });\n        }\n\n        const accessToken = localStorage.getItem('access_token');\n        if (accessToken) {\n            Utils.getProfile(accessToken)\n                .then(data => {\n                    if (data) {\n                        setUserName(data.display_name);\n                    }\n                })\n                .catch(error => {\n                    console.error('Error fetching user profile:', error);\n                });\n        } else {\n            console.error('Access token not found');\n        }\n    }, []);\n\n    useEffect(() => { // Effect for handling access token and user profile\n        const accessToken = localStorage.getItem('access_token');\n        const refreshToken = localStorage.getItem('refresh_token');\n\n        if (accessToken) {\n            Utils.getProfile(accessToken, refreshToken)\n                .then(data => {\n                    if (data) {\n                        setUserName(data.display_name);\n                        setLoggedIn(true);\n                    }\n                })\n                .catch(error => {\n                    console.error('Error fetching user profile:', error);\n                });\n        } else {\n            console.error('Access token not found');\n        }\n    }, []);\n\n    useEffect(() => { // Effect for setting theme\n        document.body.classList.toggle('light-theme', theme === 'light');\n        localStorage.setItem('theme', theme);\n    }, [theme]);\n\n    const handleSearch = () => { // Function for handling search\n        Utils.fetchWeatherData(city)\n            .then(({ data, error }) => {\n                if (error) {\n                    setErrorMessage(error);\n                } else {\n                    setWeatherData(data);\n                    setErrorMessage('');\n                    localStorage.setItem('lastCity', city);\n                }\n            });\n    };\n\n    const handleChange = (e) => { // Function for handling input change\n        setCity(e.target.value);\n    };\n\n    const handleKeyDown = (e) => { // Function for handling enter key press\n        if (e.key === 'Enter') {\n            handleSearch();\n        }\n    };\n\n    const toggleTheme = () => { // Function for toggling theme\n        setTheme((prevTheme) => (prevTheme === 'main' ? 'light' : 'main'));\n    };\n\n    \n\n    const recommendSongs = async () => {\n        try {\n            const accessToken = localStorage.getItem('access_token');\n            const weatherGenre = mapWeatherToGenres(weatherData); // Get the mapped genre based on weather\n            const response = await Utils.getRecommendations(accessToken, null, weatherGenre, null);\n            setRecommendedTracks(response.tracks);\n        } catch (error) {\n            console.error('Error fetching recommended tracks:', error);\n        }\n    };\n    \n    const mapWeatherToGenres = (weatherData) => {\n        // Map weather conditions to corresponding music genres\n        const weatherCondition = weatherData.weather[0].main.toLowerCase();\n        switch (weatherCondition) {\n            case 'clear':\n                return 'pop'; // Example genre for clear weather\n            case 'rain':\n                return 'chill'; // Example genre for rainy weather\n            case 'clouds':\n                return 'indie'; // Example genre for cloudy weather\n            // Add more cases for other weather conditions as needed\n            default:\n                return 'pop'; // Default genre if weather condition doesn't match any specific genre\n        }\n    };\n\n    useEffect(() => { // Effect for handling search and recommending songs\n        if (weatherData) {\n            recommendSongs();\n        }\n    }, [weatherData]);\n    \n     // Function to create playlist and add recommended songs\n     const savePlaylist = async () => {\n        try {\n            const accessToken = localStorage.getItem('access_token');\n            if (accessToken && userId) {\n                // Create playlist\n                const cityName = weatherData.name;\n                const weatherCondition = weatherData.weather[0].main.toLowerCase();\n                const currentDate = new Date();\n                const playlistResponse = await createPlaylist(accessToken, userId, cityName, weatherCondition, currentDate);\n                const playlistId = playlistResponse.id;\n    \n                // Add recommended tracks to the playlist\n                await addTracksToPlaylist(accessToken, userId, playlistId, recommendedTracks.map(track => track.uri));\n    \n                console.log('Playlist created and tracks added successfully');\n            } else {\n                console.error('Access token or user ID not found');\n            }\n        } catch (error) {\n            console.error('Error saving playlist:', error);\n        }\n    };\n    \n\n    const createPlaylist = async (accessToken, userId) => {\n        const url = `https://api.spotify.com/v1/users/${userId}/playlists`;\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${accessToken}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: `City-Weather_Condition-Date(${new Date().toLocaleDateString('en-GB')})`,\n                public: true,\n            }),\n        });\n        if (!response.ok) {\n            throw new Error('Failed to create playlist');\n        }\n        return response.json();\n    };\n\n    const addTracksToPlaylist = async (accessToken, userId, playlistId, trackUris) => {\n        const url = `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`;\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${accessToken}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                uris: trackUris,\n            }),\n        });\n        if (!response.ok) {\n            throw new Error('Failed to add tracks to playlist');\n        }\n        return response.json();\n    };\n\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"card\">\n                    <div className=\"search\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter city name\"\n                            spellCheck=\"false\"\n                            value={city}\n                            onChange={handleChange}\n                            onKeyDown={handleKeyDown} // Enables search by hitting enter\n                        />\n                        <button onClick={handleSearch}>Search</button>\n                    </div>\n\n                    {errorMessage && <div className=\"error\"><p>{errorMessage}</p></div>}\n                    {weatherData && (\n                        <div className=\"weather\">\n                            <h3>Cześć, {userName}!</h3>\n                            <h2>Weather in {weatherData.name}</h2>\n                            <p>Condition: {weatherData.weather[0].main}</p>\n                            <p>Temperature: {Math.round(weatherData.main.temp)}°C</p>\n                            <p>Humidity: {weatherData.main.humidity}%</p>\n                            <p>Wind Speed: {weatherData.wind.speed} km/h</p>\n                        </div>\n                    )}\n                {/* Rekomendacja Piosenek */}\n                <div className=\"container\">\n                    <button onClick={recommendSongs}>Recommend Songs</button>\n                    {recommendedTracks.length > 0 && (\n                     <div>\n                    <h3>Recommended Songs</h3>\n                    <ul>\n                        {recommendedTracks.map((track, index) => (\n                            <li key={index}>{track.name} - {track.artists.map(artist => artist.name).join(', ')}</li>\n                        ))}\n                    </ul>\n                    <button onClick={savePlaylist}>Save Playlist</button>\n                    </div>\n                     )}\n                    </div>\n\n                \n                </div>\n                \n\n                <button className=\"theme-btn\" onClick={toggleTheme}>Theme</button>\n                {loggedIn ? (\n                    <button onClick={handleLogout}>Logout</button>\n                ) : (\n                    <button onClick={handleLogin}>Login with Spotify</button>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}