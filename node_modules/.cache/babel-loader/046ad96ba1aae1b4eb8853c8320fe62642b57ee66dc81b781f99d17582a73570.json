{"ast":null,"code":"var _jsxFileName = \"/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getTopArtists, getRandomArtists, loggedin } from './Utils'; // Import necessary functions from utils.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TierList = () => {\n  _s();\n  var _droppedItems$items;\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n  const [droppedItems, setDroppedItems] = useState({\n    S: [],\n    A: [],\n    B: [],\n    C: [],\n    D: []\n  });\n  const [draggableItems, setDraggableItems] = useState([]);\n  const [numArtists, setNumArtists] = useState(10); // Default number of artists to display\n  const [droppedArtistIds, setDroppedArtistIds] = useState(new Set());\n  useEffect(() => {\n    const fetchTopArtistsData = async () => {\n      try {\n        if (!loggedin()) {\n          console.log('User not logged in');\n          return;\n        }\n        const accessToken = localStorage.getItem('access_token');\n        const initialDroppedItems = tiers.reduce((acc, tier) => {\n          acc[tier] = [];\n          return acc;\n        }, {});\n        let allArtists = [];\n        const artistIdsSet = new Set(); // Use a Set to keep track of unique artist IDs\n        const limit = 100; // Maximum limit to fetch more artists\n        let offset = 0;\n\n        // Fetch more artists than needed to ensure enough unique ones\n        while (artistIdsSet.size < numArtists) {\n          const topArtistsData = await getTopArtists(accessToken, limit, offset);\n          if (!topArtistsData || !topArtistsData.items || topArtistsData.items.length === 0) {\n            break; // No more artists to fetch\n          }\n\n          // Filter and collect unique artists\n          topArtistsData.items.forEach(artist => {\n            if (!artistIdsSet.has(artist.id)) {\n              artistIdsSet.add(artist.id);\n              allArtists.push(artist);\n            }\n          });\n          offset += limit;\n        }\n\n        // Take only the specified number of unique artists\n        const uniqueArtists = allArtists.slice(0, numArtists);\n\n        // Update droppedItems state with fetched artists\n        setDroppedItems({\n          ...initialDroppedItems,\n          items: uniqueArtists\n        });\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Call the function to fetch data when the component mounts or when numArtists changes\n    fetchTopArtistsData();\n  }, [numArtists]); // Trigger effect whenever numArtists changes\n\n  // Function to handle dropping an artist into a tier\n  const handleDrop = (tier, itemId, e) => {\n    e.preventDefault();\n\n    // Update droppedItems state to add the dropped artist to the specified tier\n    setDroppedItems(prevItems => ({\n      ...prevItems,\n      [tier]: [...prevItems[tier], itemId]\n    }));\n\n    // Remove the dropped artist from draggableItems\n    setDraggableItems(prevItems => prevItems.filter(item => item.id !== itemId));\n  };\n\n  // Function to remove an artist from a tier\n  const handleClearDrop = (tier, itemId) => {\n    // Remove the dropped item (artist) from the specified tier\n    setDroppedItems(prevItems => ({\n      ...prevItems,\n      [tier]: prevItems[tier].filter(item => item.id !== itemId)\n    }));\n\n    // Add the removed artist back to draggableItems\n    setDraggableItems(prevItems => [...prevItems, {\n      id: itemId\n    }]);\n\n    // Remove artist ID from droppedArtistIds\n    setDroppedArtistIds(prevIds => {\n      const newIds = new Set(prevIds);\n      newIds.delete(itemId);\n      return newIds;\n    });\n  };\n\n  // Function to allow dropping items\n  const allowDrop = e => {\n    e.preventDefault();\n  };\n\n  // Component to render a draggable artist\n  const DraggableArtist = ({\n    artist,\n    isSplitName\n  }) => {\n    const imageUrl = artist.images && artist.images.length > 0 ? artist.images[0].url : '';\n    console.log('Image URL:', imageUrl); // Log the image URL\n\n    const handleDragStart = e => {\n      e.dataTransfer.setData('application/json', JSON.stringify({\n        id: artist.id,\n        imageUrl\n      }));\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"draggable-artist\",\n      draggable: true,\n      onDragStart: handleDragStart,\n      children: [imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: artist.name,\n        style: {\n          width: 90,\n          height: 90\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) // Ten poprawnie działający image\n      : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 90,\n          height: 90,\n          backgroundColor: 'lightgray',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: \"No Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), isSplitName && numArtists === 10 ? artist.name.split(' ').map((part, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '0.2em 0'\n        },\n        children: part\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: artist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Component to render a tier\n  const Tier = ({\n    tier\n  }) => {\n    var _droppedItems$tier;\n    const handleDropLocal = e => {\n      e.preventDefault();\n      const {\n        id,\n        imageUrl\n      } = JSON.parse(e.dataTransfer.getData('application/json'));\n\n      // Update droppedItems for the current tier\n      setDroppedItems(prevItems => ({\n        ...prevItems,\n        [tier]: [...prevItems[tier], {\n          id,\n          imageUrl\n        }]\n      }));\n\n      // Remove the dropped item from draggableItems\n      setDraggableItems(prevItems => prevItems.filter(item => item.id !== id));\n\n      // Remove the dropped item from the main draggableItems list\n      setDroppedArtistIds(prevIds => {\n        const newIds = new Set(prevIds);\n        newIds.add(id);\n        return newIds;\n      });\n    };\n    const handleItemClick = itemId => {\n      // Remove item (artist) from droppedItems of the current tier\n      handleClearDrop(tier, itemId);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tier\",\n      onDrop: handleDropLocal,\n      onDragOver: allowDrop,\n      children: (_droppedItems$tier = droppedItems[tier]) === null || _droppedItems$tier === void 0 ? void 0 : _droppedItems$tier.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artist-item\",\n        onClick: () => handleItemClick(artist.id),\n        children: [artist.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: artist.imageUrl,\n          alt: artist.name,\n          style: {\n            width: 90,\n            height: 90\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 90,\n            height: 90,\n            backgroundColor: 'lightgray',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: \"No Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 5\n        }, this)]\n      }, artist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 3\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tier-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tier List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tier-list\",\n      children: tiers.map(tier => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tier-pair\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tier-name tier-${tier.toLowerCase()}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: tier\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tier, {\n          tier: tier\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), \" \"]\n      }, tier, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numArtists\",\n        children: \"Number of Artists:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"numArtists\",\n        value: numArtists,\n        onChange: e => setNumArtists(parseInt(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 25,\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-container\",\n      children: (_droppedItems$items = droppedItems.items) === null || _droppedItems$items === void 0 ? void 0 : _droppedItems$items.filter(artist => !droppedArtistIds.has(artist.id)).map(artist => /*#__PURE__*/_jsxDEV(DraggableArtist, {\n        artist: artist,\n        isSplitName: true\n      }, artist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(TierList, \"ZEw65oOOQ8XJwPh4KzP0PmvGmcU=\");\n_c = TierList;\nexport default TierList;\nvar _c;\n$RefreshReg$(_c, \"TierList\");","map":{"version":3,"names":["React","useState","useEffect","getTopArtists","getRandomArtists","loggedin","jsxDEV","_jsxDEV","TierList","_s","_droppedItems$items","tiers","droppedItems","setDroppedItems","S","A","B","C","D","draggableItems","setDraggableItems","numArtists","setNumArtists","droppedArtistIds","setDroppedArtistIds","Set","fetchTopArtistsData","console","log","accessToken","localStorage","getItem","initialDroppedItems","reduce","acc","tier","allArtists","artistIdsSet","limit","offset","size","topArtistsData","items","length","forEach","artist","has","id","add","push","uniqueArtists","slice","error","handleDrop","itemId","e","preventDefault","prevItems","filter","item","handleClearDrop","prevIds","newIds","delete","allowDrop","DraggableArtist","isSplitName","imageUrl","images","url","handleDragStart","dataTransfer","setData","JSON","stringify","className","draggable","onDragStart","children","src","alt","name","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","display","justifyContent","alignItems","split","map","part","index","margin","Tier","_droppedItems$tier","handleDropLocal","parse","getData","handleItemClick","onDrop","onDragOver","onClick","toLowerCase","htmlFor","value","onChange","parseInt","target","_c","$RefreshReg$"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getTopArtists, getRandomArtists, loggedin } from './Utils'; // Import necessary functions from utils.js\n\nconst TierList = () => {\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n  const [droppedItems, setDroppedItems] = useState({ S: [], A: [], B: [], C: [], D: [] });\n  const [draggableItems, setDraggableItems] = useState([]);\n  const [numArtists, setNumArtists] = useState(10); // Default number of artists to display\n  const [droppedArtistIds, setDroppedArtistIds] = useState(new Set());\n\n  useEffect(() => {\n    const fetchTopArtistsData = async () => {\n      try {\n        if (!loggedin()) {\n          console.log('User not logged in');\n          return;\n        }\n\n        const accessToken = localStorage.getItem('access_token');\n        const initialDroppedItems = tiers.reduce((acc, tier) => {\n          acc[tier] = [];\n          return acc;\n        }, {});\n\n        let allArtists = [];\n        const artistIdsSet = new Set(); // Use a Set to keep track of unique artist IDs\n        const limit = 100; // Maximum limit to fetch more artists\n        let offset = 0;\n\n        // Fetch more artists than needed to ensure enough unique ones\n        while (artistIdsSet.size < numArtists) {\n          const topArtistsData = await getTopArtists(accessToken, limit, offset);\n          if (!topArtistsData || !topArtistsData.items || topArtistsData.items.length === 0) {\n            break; // No more artists to fetch\n          }\n\n          // Filter and collect unique artists\n          topArtistsData.items.forEach((artist) => {\n            if (!artistIdsSet.has(artist.id)) {\n              artistIdsSet.add(artist.id);\n              allArtists.push(artist);\n            }\n          });\n\n          offset += limit;\n        }\n\n        // Take only the specified number of unique artists\n        const uniqueArtists = allArtists.slice(0, numArtists);\n\n        // Update droppedItems state with fetched artists\n        setDroppedItems({ ...initialDroppedItems, items: uniqueArtists });\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Call the function to fetch data when the component mounts or when numArtists changes\n    fetchTopArtistsData();\n  }, [numArtists]); // Trigger effect whenever numArtists changes\n\n  // Function to handle dropping an artist into a tier\n  const handleDrop = (tier, itemId, e) => {\n  e.preventDefault();\n\n  // Update droppedItems state to add the dropped artist to the specified tier\n  setDroppedItems((prevItems) => ({\n    ...prevItems,\n    [tier]: [...prevItems[tier], itemId],\n  }));\n\n  // Remove the dropped artist from draggableItems\n  setDraggableItems((prevItems) => prevItems.filter((item) => item.id !== itemId));\n};\n\n\n  // Function to remove an artist from a tier\n  const handleClearDrop = (tier, itemId) => {\n    // Remove the dropped item (artist) from the specified tier\n    setDroppedItems((prevItems) => ({\n      ...prevItems,\n      [tier]: prevItems[tier].filter((item) => item.id !== itemId),\n    }));\n  \n    // Add the removed artist back to draggableItems\n    setDraggableItems((prevItems) => [...prevItems, { id: itemId }]);\n    \n    // Remove artist ID from droppedArtistIds\n    setDroppedArtistIds((prevIds) => {\n      const newIds = new Set(prevIds);\n      newIds.delete(itemId);\n      return newIds;\n    });\n  };\n  \n\n  // Function to allow dropping items\n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n\n  // Component to render a draggable artist\n  const DraggableArtist = ({ artist, isSplitName }) => {\n    const imageUrl = artist.images && artist.images.length > 0 ? artist.images[0].url : '';\n    console.log('Image URL:', imageUrl); // Log the image URL\n  \n    const handleDragStart = (e) => {\n      e.dataTransfer.setData('application/json', JSON.stringify({ id: artist.id, imageUrl }));\n    };\n    \n  \n    return (\n      <div className=\"draggable-artist\" draggable onDragStart={handleDragStart}>\n        {imageUrl ? (\n          <img src={imageUrl} alt={artist.name} style={{ width: 90, height: 90 }} /> // Ten poprawnie działający image\n        ) : (\n          <div style={{ width: 90, height: 90, backgroundColor: 'lightgray', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            No Image\n          </div>\n        )}\n        {/* Render artist name as split parts only when isSplitName is true and numArtists is 10 */}\n        {isSplitName && numArtists === 10 ? (\n          artist.name.split(' ').map((part, index) => (\n            <p key={index} style={{ margin: '0.2em 0' }}>{part}</p>\n          ))\n        ) : (\n          <p>{artist.name}</p>\n        )}\n      </div>\n    );\n  };\n  \n  // Component to render a tier\n  const Tier = ({ tier }) => {\n    const handleDropLocal = (e) => {\n      e.preventDefault();\n      const { id, imageUrl } = JSON.parse(e.dataTransfer.getData('application/json'));\n    \n      // Update droppedItems for the current tier\n      setDroppedItems((prevItems) => ({\n        ...prevItems,\n        [tier]: [...prevItems[tier], { id, imageUrl }],\n      }));\n    \n      // Remove the dropped item from draggableItems\n      setDraggableItems((prevItems) => prevItems.filter((item) => item.id !== id));\n    \n      // Remove the dropped item from the main draggableItems list\n      setDroppedArtistIds((prevIds) => {\n        const newIds = new Set(prevIds);\n        newIds.add(id);\n        return newIds;\n      });\n    };\n    \n    \n\n    const handleItemClick = (itemId) => {\n      // Remove item (artist) from droppedItems of the current tier\n      handleClearDrop(tier, itemId);\n    };\n    \n\n    return (\n      <div className=\"tier\" onDrop={handleDropLocal} onDragOver={allowDrop}>\n        {/* Render dropped items (artists) for the current tier */}\n        {droppedItems[tier]?.map((artist) => (\n  <div key={artist.id} className=\"artist-item\" onClick={() => handleItemClick(artist.id)}>\n    {artist.imageUrl ? (\n      <img src={artist.imageUrl} alt={artist.name} style={{ width: 90, height: 90 }} />\n    ) : (\n      <div style={{ width: 90, height: 90, backgroundColor: 'lightgray', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n        No Image\n      </div>\n    )}\n    <p>{artist.name}</p>\n  </div>\n))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"tier-list-container\">\n      <h1>Tier List</h1>\n\n      {/* Render Tier components for each tier */}\n      <div className=\"tier-list\">\n        {tiers.map((tier) => (\n          <div key={tier} className=\"tier-pair\">\n            <div className={`tier-name tier-${tier.toLowerCase()}`}>\n              <h2>{tier}</h2>\n            </div>\n            {/* Render Tier component for the current tier */}\n            <Tier tier={tier} /> {/* Pass tier prop to Tier component */}\n          </div>\n        ))}\n      </div>\n\n      {/* Dropdown to select number of artists */}\n      <div>\n        <label htmlFor=\"numArtists\">Number of Artists:</label>\n        <select id=\"numArtists\" value={numArtists} onChange={(e) => setNumArtists(parseInt(e.target.value))}>\n          <option value={10}>10</option>\n          <option value={25}>25</option>\n          <option value={50}>50</option>\n        </select>\n      </div>\n\n        \n      {/* Render draggable items (artists) */}\n<div className=\"items-container\">\n  {droppedItems.items?.filter((artist) => !droppedArtistIds.has(artist.id)).map((artist) => (\n    <DraggableArtist key={artist.id} artist={artist} isSplitName={true} />\n  ))}\n</div>\n\n    </div>\n  );\n};\n\nexport default TierList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}