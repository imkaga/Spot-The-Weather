{"ast":null,"code":"var _jsxFileName = \"/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/GetArtists.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetArtists = () => {\n  _s();\n  const [artists, setArtists] = useState([]);\n  useEffect(() => {\n    const fetchTopArtists = async () => {\n      try {\n        // Make a GET request to Spotify API to fetch top artists\n        const response = await axios.get('https://api.spotify.com/v1/me/top/artists', {\n          headers: {\n            Authorization: `Bearer YOUR_SPOTIFY_ACCESS_TOKEN`\n          },\n          params: {\n            time_range: 'medium_term',\n            // or 'short_term' or 'long_term' as per your requirement\n            limit: 10\n          }\n        });\n\n        // Extract the artists data from the response\n        const {\n          items\n        } = response.data;\n\n        // Set the retrieved artists into state\n        setArtists(items);\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Call the function to fetch data when the component mounts\n    fetchTopArtists();\n  }, []); // Empty dependency array ensures this effect runs once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Top 10 Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: artists.map(artist => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Genres: \", artist.genres.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Popularity: \", artist.popularity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: artist.images.length > 0 ? artist.images[0].url : '',\n          alt: artist.name,\n          style: {\n            maxWidth: '200px',\n            maxHeight: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, artist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(GetArtists, \"myO3VIklrIMVqFD52MxwExKe+k4=\");\n_c = GetArtists;\nexport default GetArtists;\nvar _c;\n$RefreshReg$(_c, \"GetArtists\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","GetArtists","_s","artists","setArtists","fetchTopArtists","response","get","headers","Authorization","params","time_range","limit","items","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","artist","name","genres","join","popularity","src","images","length","url","alt","style","maxWidth","maxHeight","id","_c","$RefreshReg$"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/GetArtists.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios for making HTTP requests\n\nconst GetArtists = () => {\n  const [artists, setArtists] = useState([]);\n\n  useEffect(() => {\n    const fetchTopArtists = async () => {\n      try {\n        // Make a GET request to Spotify API to fetch top artists\n        const response = await axios.get('https://api.spotify.com/v1/me/top/artists', {\n          headers: {\n            Authorization: `Bearer YOUR_SPOTIFY_ACCESS_TOKEN`,\n          },\n          params: {\n            time_range: 'medium_term', // or 'short_term' or 'long_term' as per your requirement\n            limit: 10,\n          },\n        });\n\n        // Extract the artists data from the response\n        const { items } = response.data;\n\n        // Set the retrieved artists into state\n        setArtists(items);\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Call the function to fetch data when the component mounts\n    fetchTopArtists();\n  }, []); // Empty dependency array ensures this effect runs once on component mount\n\n  return (\n    <div>\n      <h2>My Top 10 Artists</h2>\n      <ul>\n        {artists.map((artist) => (\n          <li key={artist.id}>\n            <h3>{artist.name}</h3>\n            <p>Genres: {artist.genres.join(', ')}</p>\n            <p>Popularity: {artist.popularity}</p>\n            <img\n              src={artist.images.length > 0 ? artist.images[0].url : ''}\n              alt={artist.name}\n              style={{ maxWidth: '200px', maxHeight: '200px' }}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default GetArtists;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,2CAA2C,EAAE;UAC5EC,OAAO,EAAE;YACPC,aAAa,EAAG;UAClB,CAAC;UACDC,MAAM,EAAE;YACNC,UAAU,EAAE,aAAa;YAAE;YAC3BC,KAAK,EAAE;UACT;QACF,CAAC,CAAC;;QAEF;QACA,MAAM;UAAEC;QAAM,CAAC,GAAGP,QAAQ,CAACQ,IAAI;;QAE/B;QACAV,UAAU,CAACS,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;;IAED;IACAV,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BrB,OAAA;MAAAiB,QAAA,EACGd,OAAO,CAACmB,GAAG,CAAEC,MAAM,iBAClBvB,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAAiB,QAAA,EAAKM,MAAM,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBrB,OAAA;UAAAiB,QAAA,GAAG,UAAQ,EAACM,MAAM,CAACE,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzCrB,OAAA;UAAAiB,QAAA,GAAG,cAAY,EAACM,MAAM,CAACI,UAAU;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtCrB,OAAA;UACE4B,GAAG,EAAEL,MAAM,CAACM,MAAM,CAACC,MAAM,GAAG,CAAC,GAAGP,MAAM,CAACM,MAAM,CAAC,CAAC,CAAC,CAACE,GAAG,GAAG,EAAG;UAC1DC,GAAG,EAAET,MAAM,CAACC,IAAK;UACjBS,KAAK,EAAE;YAAEC,QAAQ,EAAE,OAAO;YAAEC,SAAS,EAAE;UAAQ;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA,GARKE,MAAM,CAACa,EAAE;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACnB,EAAA,CAlDID,UAAU;AAAAoC,EAAA,GAAVpC,UAAU;AAoDhB,eAAeA,UAAU;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}