{"ast":null,"code":"var _jsxFileName = \"/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Variables\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiKey = \"85f93b7e11258cb2617c3f745ecf3349\"; // OpenWeather API Key\nconst apiUrl = \"https://api.openweathermap.org/data/2.5/weather?&units=metric&q=\"; // OpenWeather API URL\nconst clientId = '44c1aa3e0f954b9491bb515284729f0b'; // Spotify ClientID\nconst redirectUri = 'http://localhost:3000/'; // Spotify Redirect URL\nconst clientSecret = '343770fe2dcc4167acd9722f8c3424d9'; // Spotify Client Secret\n\n// Function to handle authentication flow\nasync function handleAuthorizationCode() {\n  const params = new URLSearchParams(window.location.search);\n  const authorizationCode = params.get('code');\n  if (authorizationCode) {\n    try {\n      const response = await fetch('https://accounts.spotify.com/api/token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Authorization: `Basic ${btoa(`${clientId}:${clientSecret}`)}`\n        },\n        body: `grant_type=authorization_code&code=${authorizationCode}&redirect_uri=${redirectUri}`\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to exchange authorization code for access token. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      const accessToken = data.access_token;\n      if (!accessToken) {\n        throw new Error('Access token not found in response');\n      }\n      localStorage.setItem('access_token', accessToken);\n      window.location.href = '/';\n    } catch (error) {\n      console.error('Error exchanging authorization code:', error);\n    }\n  }\n}\n\n// Function to fetch user's profile from Spotify\nasync function getProfile(accessToken, refreshToken) {\n  try {\n    const response = await fetch('https://api.spotify.com/v1/me', {\n      headers: {\n        Authorization: 'Bearer ' + accessToken\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    // Handle token expiration by refreshing token and retrying\n    if (error.message === \"Unauthorized\") {\n      try {\n        const newAccessToken = await refreshAccessToken(refreshToken);\n        localStorage.setItem('access_token', newAccessToken);\n        return getProfile(newAccessToken, refreshToken);\n      } catch (refreshError) {\n        console.error('Error refreshing access token:', refreshError);\n        throw refreshError;\n      }\n    } else {\n      throw error;\n    }\n  }\n}\n\n// Function to refresh access token\nasync function refreshAccessToken(refreshToken) {\n  const clientCredentials = btoa(`${clientId}:${clientSecret}`);\n  const spotifyTokenResponse = await fetch(\"https://accounts.spotify.com/api/token\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization: `Basic ${clientCredentials}`\n    },\n    body: `grant_type=refresh_token&refresh_token=${refreshToken}`,\n    cache: \"no-cache\"\n  });\n  const spotifyTokenData = await spotifyTokenResponse.json();\n  return spotifyTokenData.access_token;\n}\nfunction Home() {\n  _s();\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [theme, setTheme] = useState(() => localStorage.getItem('theme') || 'main');\n\n  // Handle authorization code on component mount\n  useEffect(() => {\n    handleAuthorizationCode();\n  }, []);\n\n  // Fetch user profile on component mount\n  useEffect(() => {\n    const accessToken = localStorage.getItem('access_token');\n    if (accessToken) {\n      getProfile(accessToken).then(data => {\n        if (data) {\n          setUserName(data.display_name);\n          setLoggedIn(true);\n        }\n      }).catch(error => {\n        console.error('Error fetching user profile:', error);\n      });\n    } else {\n      console.error('Access token not found');\n    }\n  }, []);\n\n  // Update user profile when access token changes\n  useEffect(() => {\n    const accessToken = localStorage.getItem('access_token');\n    const refreshToken = localStorage.getItem('refresh_token');\n    if (accessToken) {\n      getProfile(accessToken, refreshToken).then(data => {\n        if (data) {\n          setUserName(data.display_name);\n        }\n      }).catch(error => {\n        console.error('Error fetching user profile:', error);\n      });\n    } else {\n      console.error('Access token not found');\n    }\n  }, []);\n\n  // Fetch weather data for the provided city\n  const fetchWeatherData = async city => {\n    try {\n      const response = await fetch(apiUrl + city + `&appid=${apiKey}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setWeatherData(data);\n      setErrorMessage('');\n      localStorage.setItem('lastCity', city);\n    } catch (error) {\n      console.error(error);\n      setWeatherData(null);\n      setErrorMessage('Error fetching weather data. Please try again later.');\n    }\n  };\n\n  // Handle search button click\n  const handleSearch = () => {\n    fetchWeatherData(city);\n  };\n\n  // Handle city input change\n  const handleChange = e => {\n    setCity(e.target.value);\n  };\n\n  // Handle enter key press\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  // Toggle between main and light theme\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'main' ? 'light' : 'main');\n  };\n\n  // Render UI\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter city name\",\n            spellCheck: \"false\",\n            value: city,\n            onChange: handleChange,\n            onKeyDown: handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSearch,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 38\n        }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hello, \", userName, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Weather in \", weatherData.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temperature: \", Math.round(weatherData.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Humidity: \", weatherData.main.humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind Speed: \", weatherData.wind.speed, \" km/h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), loggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login with Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"nGxteucOWXrnzscYBfEVC9ZSVig=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","apiKey","apiUrl","clientId","redirectUri","clientSecret","handleAuthorizationCode","params","URLSearchParams","window","location","search","authorizationCode","get","response","fetch","method","headers","Authorization","btoa","body","ok","Error","status","data","json","accessToken","access_token","localStorage","setItem","href","error","console","getProfile","refreshToken","message","newAccessToken","refreshAccessToken","refreshError","clientCredentials","spotifyTokenResponse","cache","spotifyTokenData","Home","_s","city","setCity","weatherData","setWeatherData","errorMessage","setErrorMessage","userName","setUserName","loggedIn","setLoggedIn","theme","setTheme","getItem","then","display_name","catch","fetchWeatherData","handleSearch","handleChange","e","target","value","handleKeyDown","key","toggleTheme","prevTheme","children","className","type","placeholder","spellCheck","onChange","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","Math","round","main","temp","humidity","wind","speed","handleLogout","handleLogin","_c","$RefreshReg$"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Variables\nconst apiKey = \"85f93b7e11258cb2617c3f745ecf3349\"; // OpenWeather API Key\nconst apiUrl = \"https://api.openweathermap.org/data/2.5/weather?&units=metric&q=\"; // OpenWeather API URL\nconst clientId = '44c1aa3e0f954b9491bb515284729f0b'; // Spotify ClientID\nconst redirectUri = 'http://localhost:3000/'; // Spotify Redirect URL\nconst clientSecret = '343770fe2dcc4167acd9722f8c3424d9'; // Spotify Client Secret\n\n// Function to handle authentication flow\nasync function handleAuthorizationCode() {\n    const params = new URLSearchParams(window.location.search);\n    const authorizationCode = params.get('code');\n\n    if (authorizationCode) {\n        try {\n            const response = await fetch('https://accounts.spotify.com/api/token', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    Authorization: `Basic ${btoa(`${clientId}:${clientSecret}`)}`\n                },\n                body: `grant_type=authorization_code&code=${authorizationCode}&redirect_uri=${redirectUri}`\n            });\n\n            if (!response.ok) {\n                throw new Error(`Failed to exchange authorization code for access token. Status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            const accessToken = data.access_token;\n\n            if (!accessToken) {\n                throw new Error('Access token not found in response');\n            }\n\n            localStorage.setItem('access_token', accessToken);\n            window.location.href = '/';\n        } catch (error) {\n            console.error('Error exchanging authorization code:', error);\n        }\n    }\n}\n\n// Function to fetch user's profile from Spotify\nasync function getProfile(accessToken, refreshToken) {\n    try {\n        const response = await fetch('https://api.spotify.com/v1/me', {\n            headers: {\n                Authorization: 'Bearer ' + accessToken\n            }\n        });\n\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        // Handle token expiration by refreshing token and retrying\n        if (error.message === \"Unauthorized\") {\n            try {\n                const newAccessToken = await refreshAccessToken(refreshToken);\n                localStorage.setItem('access_token', newAccessToken);\n                return getProfile(newAccessToken, refreshToken);\n            } catch (refreshError) {\n                console.error('Error refreshing access token:', refreshError);\n                throw refreshError;\n            }\n        } else {\n            throw error;\n        }\n    }\n}\n\n// Function to refresh access token\nasync function refreshAccessToken(refreshToken) {\n    const clientCredentials = btoa(`${clientId}:${clientSecret}`);\n    const spotifyTokenResponse = await fetch(\"https://accounts.spotify.com/api/token\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            Authorization: `Basic ${clientCredentials}`,\n        },\n        body: `grant_type=refresh_token&refresh_token=${refreshToken}`,\n        cache: \"no-cache\"\n    });\n\n    const spotifyTokenData = await spotifyTokenResponse.json();\n    return spotifyTokenData.access_token;\n}\n\nfunction Home() {\n    const [city, setCity] = useState('');\n    const [weatherData, setWeatherData] = useState(null);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [userName, setUserName] = useState('');\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [theme, setTheme] = useState(() => localStorage.getItem('theme') || 'main');\n\n    // Handle authorization code on component mount\n    useEffect(() => {\n        handleAuthorizationCode();\n    }, []);\n\n    // Fetch user profile on component mount\n    useEffect(() => {\n        const accessToken = localStorage.getItem('access_token');\n        if (accessToken) {\n            getProfile(accessToken)\n                .then(data => {\n                    if (data) {\n                        setUserName(data.display_name);\n                        setLoggedIn(true);\n                    }\n                })\n                .catch(error => {\n                    console.error('Error fetching user profile:', error);\n                });\n        } else {\n            console.error('Access token not found');\n        }\n    }, []);\n\n    // Update user profile when access token changes\n    useEffect(() => {\n        const accessToken = localStorage.getItem('access_token');\n        const refreshToken = localStorage.getItem('refresh_token');\n    \n        if (accessToken) {\n            getProfile(accessToken, refreshToken)\n                .then(data => {\n                    if (data) {\n                        setUserName(data.display_name);\n                    }\n                })\n                .catch(error => {\n                    console.error('Error fetching user profile:', error);\n                });\n        } else {\n            console.error('Access token not found');\n        }\n    }, []);\n\n    // Fetch weather data for the provided city\n    const fetchWeatherData = async (city) => {\n        try {\n            const response = await fetch(apiUrl + city + `&appid=${apiKey}`);\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n            const data = await response.json();\n            setWeatherData(data);\n            setErrorMessage('');\n            localStorage.setItem('lastCity', city);\n        } catch (error) {\n            console.error(error);\n            setWeatherData(null);\n            setErrorMessage('Error fetching weather data. Please try again later.');\n        }\n    };\n\n    // Handle search button click\n    const handleSearch = () => {\n        fetchWeatherData(city);\n    };\n\n    // Handle city input change\n    const handleChange = (e) => {\n        setCity(e.target.value);\n    };\n\n    // Handle enter key press\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            handleSearch();\n        }\n    };\n\n    // Toggle between main and light theme\n    const toggleTheme = () => {\n        setTheme(prevTheme => (prevTheme === 'main' ? 'light' : 'main'));\n    };\n\n    // Render UI\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"card\">\n                    <div className=\"search\">\n                        <input \n                            type=\"text\" \n                            placeholder=\"Enter city name\" \n                            spellCheck=\"false\" \n                            value={city} \n                            onChange={handleChange} \n                            onKeyDown={handleKeyDown} \n                        />\n                        <button onClick={handleSearch}>Search</button>\n                    </div>\n                    {errorMessage && <div className=\"error\"><p>{errorMessage}</p></div>}\n                    {weatherData && (\n                        <div className=\"weather\">\n                            <h3>Hello, {userName}!</h3>\n                            <h2>Weather in {weatherData.name}</h2>\n                            <p>Temperature: {Math.round(weatherData.main.temp)}°C</p>\n                            <p>Humidity: {weatherData.main.humidity}%</p>\n                            <p>Wind Speed: {weatherData.wind.speed} km/h</p>\n                        </div>\n                    )}\n                </div>\n                \n                {loggedIn ? (\n                    <button onClick={handleLogout}>Logout</button>\n                ) : (\n                    <button onClick={handleLogin}>Login with Spotify</button>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}