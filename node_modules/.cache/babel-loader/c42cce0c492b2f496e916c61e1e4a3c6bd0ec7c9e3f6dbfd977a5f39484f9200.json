{"ast":null,"code":"import React,{useState,useEffect}from'react';import*as Utils from'./Utils';// Import functions from Utils.js\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Home(){const[city,setCity]=useState('');// State for storing the city input\nconst[weatherData,setWeatherData]=useState(null);// State for storing weather data\nconst[errorMessage,setErrorMessage]=useState('');// State for error messages\nconst[userName,setUserName]=useState('');// State for storing user's name\nconst[loggedIn,setLoggedIn]=useState(false);// State for user login status\nconst[theme,setTheme]=useState(()=>localStorage.getItem('theme')||'main');// State for storing theme\nconst[recommendedTracks,setRecommendedTracks]=useState([]);// State for storing recommended tracks\nconst[userId,setUserId]=useState('');// State for storing user's Spotify user ID\nconst handleLogin=Utils.authenticate;// Function for handling login\nconst handleLogout=()=>{// Function for handling logout\nlocalStorage.removeItem('access_token');localStorage.removeItem('refresh_token');setLoggedIn(false);window.location.href='/';};useEffect(()=>{// Effect for handling authorization code\nUtils.handleAuthorizationCode().then(()=>{const accessToken=localStorage.getItem('access_token');if(accessToken){console.log('Access Token:',accessToken);// Logging access token\nUtils.getProfile(accessToken).then(data=>{if(data){console.log('User Profile:',data);// Logging user profile\nsetUserName(data.display_name);// Setting user's name\nsetUserId(data.id);// Set the user's Spotify user ID\n}}).catch(error=>{console.error('Error fetching user profile:',error);});}else{console.error('Access token not found');}}).catch(error=>{console.error('Error handling authorization code:',error);});},[]);useEffect(()=>{// Effect for setting city and fetching weather data\nconst lastCity=localStorage.getItem('lastCity');if(lastCity){setCity(lastCity);Utils.fetchWeatherData(lastCity).then(_ref=>{let{data,error}=_ref;if(error){setErrorMessage(error);}else{setWeatherData(data);setErrorMessage('');}});}const accessToken=localStorage.getItem('access_token');if(accessToken){Utils.getProfile(accessToken).then(data=>{if(data){setUserName(data.display_name);}}).catch(error=>{console.error('Error fetching user profile:',error);});}else{console.error('Access token not found');}},[]);useEffect(()=>{// Effect for handling access token and user profile\nconst accessToken=localStorage.getItem('access_token');const refreshToken=localStorage.getItem('refresh_token');if(accessToken){Utils.getProfile(accessToken,refreshToken).then(data=>{if(data){setUserName(data.display_name);setLoggedIn(true);}}).catch(error=>{console.error('Error fetching user profile:',error);});}else{console.error('Access token not found');}},[]);useEffect(()=>{// Effect for setting theme\ndocument.body.classList.toggle('light-theme',theme==='light');localStorage.setItem('theme',theme);},[theme]);const handleSearch=()=>{// Function for handling search\nUtils.fetchWeatherData(city).then(_ref2=>{let{data,error}=_ref2;if(error){setErrorMessage(error);}else{setWeatherData(data);setErrorMessage('');localStorage.setItem('lastCity',city);}});};const handleChange=e=>{// Function for handling input change\nsetCity(e.target.value);};const handleKeyDown=e=>{// Function for handling enter key press\nif(e.key==='Enter'){handleSearch();}};const toggleTheme=()=>{// Function for toggling theme\nsetTheme(prevTheme=>prevTheme==='main'?'light':'main');};const recommendSongs=async()=>{try{const accessToken=localStorage.getItem('access_token');const weatherGenre=mapWeatherToGenres(weatherData);// Get the mapped genre based on weather\nconst response=await Utils.getRecommendations(accessToken,null,weatherGenre,null);setRecommendedTracks(response.tracks);}catch(error){console.error('Error fetching recommended tracks:',error);}};const mapWeatherToGenres=weatherData=>{// Map weather conditions to corresponding music genres\nconst weatherCondition=weatherData.weather[0].main.toLowerCase();switch(weatherCondition){case'clear':return'pop';// Example genre for clear weather\ncase'rain':return'chill';// Example genre for rainy weather\ncase'clouds':return'indie';// Example genre for cloudy weather\n// Add more cases for other weather conditions as needed\ndefault:return'pop';// Default genre if weather condition doesn't match any specific genre\n}};useEffect(()=>{// Effect for handling search and recommending songs\nif(weatherData){recommendSongs();}},[weatherData]);// Function to create playlist and add recommended songs\nconst savePlaylist=async()=>{try{const accessToken=localStorage.getItem('access_token');if(accessToken&&userId&&weatherData){// Make sure weatherData is available\n// Create playlist\nconst playlistResponse=await createPlaylist(accessToken,userId,weatherData);const playlistId=playlistResponse.id;// Add recommended tracks to the playlist\nawait addTracksToPlaylist(accessToken,userId,playlistId,recommendedTracks.map(track=>track.uri));console.log('Playlist created and tracks added successfully');}else{console.error('Access token, user ID, or weather data not found');}}catch(error){console.error('Error saving playlist:',error);}};const createPlaylist=async(accessToken,userId,weatherData)=>{const cityName=weatherData.name;// Extract city name from weather data\nconst weatherCondition=weatherData.weather[0].main.toLowerCase();// Extract weather condition from weather data\nconst formattedDate=\"\".concat(new Date().getDate().toString().padStart(2,'0'),\"/\").concat((new Date().getMonth()+1).toString().padStart(2,'0'),\"/\").concat(new Date().getFullYear());const playlistName=\"\".concat(cityName,\"-\").concat(weatherCondition,\"-\").concat(formattedDate);const url=\"https://api.spotify.com/v1/users/\".concat(userId,\"/playlists\");const response=await fetch(url,{method:'POST',headers:{'Authorization':\"Bearer \".concat(accessToken),'Content-Type':'application/json'},body:JSON.stringify({name:playlistName,public:true})});if(!response.ok){throw new Error('Failed to create playlist');}return response.json();};const addTracksToPlaylist=async(accessToken,userId,playlistId,trackUris)=>{const url=\"https://api.spotify.com/v1/users/\".concat(userId,\"/playlists/\").concat(playlistId,\"/tracks\");const response=await fetch(url,{method:'POST',headers:{'Authorization':\"Bearer \".concat(accessToken),'Content-Type':'application/json'},body:JSON.stringify({uris:trackUris})});if(!response.ok){throw new Error('Failed to add tracks to playlist');}return response.json();};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter city name\",spellCheck:\"false\",value:city,onChange:handleChange,onKeyDown:handleKeyDown// Enables search by hitting enter\n}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSearch,children:\"Search\"})]}),errorMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:/*#__PURE__*/_jsx(\"p\",{children:errorMessage})}),weatherData&&/*#__PURE__*/_jsxs(\"div\",{className:\"weather\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Cze\\u015B\\u0107, \",userName,\"!\"]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Weather in \",weatherData.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Condition: \",weatherData.weather[0].main]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Temperature: \",Math.round(weatherData.main.temp),\"\\xB0C\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Humidity: \",weatherData.main.humidity,\"%\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Wind Speed: \",weatherData.wind.speed,\" km/h\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:recommendSongs,children:\"Recommend Songs\"}),recommendedTracks.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recommended Songs\"}),/*#__PURE__*/_jsx(\"ul\",{children:recommendedTracks.map((track,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[track.name,\" - \",track.artists.map(artist=>artist.name).join(', ')]},index))}),/*#__PURE__*/_jsx(\"button\",{onClick:savePlaylist,children:\"Save Playlist\"})]})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"theme-btn\",onClick:toggleTheme,children:\"Theme\"}),loggedIn?/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,children:\"Logout\"}):/*#__PURE__*/_jsx(\"button\",{onClick:handleLogin,children:\"Login with Spotify\"})]})});}export default Home;","map":{"version":3,"names":["React","useState","useEffect","Utils","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Home","city","setCity","weatherData","setWeatherData","errorMessage","setErrorMessage","userName","setUserName","loggedIn","setLoggedIn","theme","setTheme","localStorage","getItem","recommendedTracks","setRecommendedTracks","userId","setUserId","handleLogin","authenticate","handleLogout","removeItem","window","location","href","handleAuthorizationCode","then","accessToken","console","log","getProfile","data","display_name","id","catch","error","lastCity","fetchWeatherData","_ref","refreshToken","document","body","classList","toggle","setItem","handleSearch","_ref2","handleChange","e","target","value","handleKeyDown","key","toggleTheme","prevTheme","recommendSongs","weatherGenre","mapWeatherToGenres","response","getRecommendations","tracks","weatherCondition","weather","main","toLowerCase","savePlaylist","playlistResponse","createPlaylist","playlistId","addTracksToPlaylist","map","track","uri","cityName","name","formattedDate","concat","Date","getDate","toString","padStart","getMonth","getFullYear","playlistName","url","fetch","method","headers","JSON","stringify","public","ok","Error","json","trackUris","uris","children","className","type","placeholder","spellCheck","onChange","onKeyDown","onClick","Math","round","temp","humidity","wind","speed","length","index","artists","artist","join"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Utils from './Utils'; // Import functions from Utils.js\n\nfunction Home() {\n    const [city, setCity] = useState(''); // State for storing the city input\n    const [weatherData, setWeatherData] = useState(null); // State for storing weather data\n    const [errorMessage, setErrorMessage] = useState(''); // State for error messages\n    const [userName, setUserName] = useState(''); // State for storing user's name\n    const [loggedIn, setLoggedIn] = useState(false); // State for user login status\n    const [theme, setTheme] = useState(() => localStorage.getItem('theme') || 'main'); // State for storing theme\n    const [recommendedTracks, setRecommendedTracks] = useState([]); // State for storing recommended tracks\n    const [userId, setUserId] = useState(''); // State for storing user's Spotify user ID\n\n    \n\n    const handleLogin = Utils.authenticate; // Function for handling login\n\n    const handleLogout = () => { // Function for handling logout\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n        setLoggedIn(false);\n        window.location.href = '/';\n    };\n\n    useEffect(() => { // Effect for handling authorization code\n        Utils.handleAuthorizationCode()\n            .then(() => {\n                const accessToken = localStorage.getItem('access_token');\n                if (accessToken) {\n                    console.log('Access Token:', accessToken); // Logging access token\n                    Utils.getProfile(accessToken)\n                        .then(data => {\n                            if (data) {\n                                console.log('User Profile:', data); // Logging user profile\n                                setUserName(data.display_name); // Setting user's name\n                                setUserId(data.id); // Set the user's Spotify user ID\n                            }\n                        })\n                        .catch(error => {\n                            console.error('Error fetching user profile:', error);\n                        });\n                } else {\n                    console.error('Access token not found');\n                }\n            })\n            .catch(error => {\n                console.error('Error handling authorization code:', error);\n            });\n    }, []);\n\n    useEffect(() => { // Effect for setting city and fetching weather data\n        const lastCity = localStorage.getItem('lastCity');\n        if (lastCity) {\n            setCity(lastCity);\n            Utils.fetchWeatherData(lastCity)\n                .then(({ data, error }) => {\n                    if (error) {\n                        setErrorMessage(error);\n                    } else {\n                        setWeatherData(data);\n                        setErrorMessage('');\n                    }\n                });\n        }\n\n        const accessToken = localStorage.getItem('access_token');\n        if (accessToken) {\n            Utils.getProfile(accessToken)\n                .then(data => {\n                    if (data) {\n                        setUserName(data.display_name);\n                    }\n                })\n                .catch(error => {\n                    console.error('Error fetching user profile:', error);\n                });\n        } else {\n            console.error('Access token not found');\n        }\n    }, []);\n\n    useEffect(() => { // Effect for handling access token and user profile\n        const accessToken = localStorage.getItem('access_token');\n        const refreshToken = localStorage.getItem('refresh_token');\n\n        if (accessToken) {\n            Utils.getProfile(accessToken, refreshToken)\n                .then(data => {\n                    if (data) {\n                        setUserName(data.display_name);\n                        setLoggedIn(true);\n                    }\n                })\n                .catch(error => {\n                    console.error('Error fetching user profile:', error);\n                });\n        } else {\n            console.error('Access token not found');\n        }\n    }, []);\n\n    useEffect(() => { // Effect for setting theme\n        document.body.classList.toggle('light-theme', theme === 'light');\n        localStorage.setItem('theme', theme);\n    }, [theme]);\n\n    const handleSearch = () => { // Function for handling search\n        Utils.fetchWeatherData(city)\n            .then(({ data, error }) => {\n                if (error) {\n                    setErrorMessage(error);\n                } else {\n                    setWeatherData(data);\n                    setErrorMessage('');\n                    localStorage.setItem('lastCity', city);\n                }\n            });\n    };\n\n    const handleChange = (e) => { // Function for handling input change\n        setCity(e.target.value);\n    };\n\n    const handleKeyDown = (e) => { // Function for handling enter key press\n        if (e.key === 'Enter') {\n            handleSearch();\n        }\n    };\n\n    const toggleTheme = () => { // Function for toggling theme\n        setTheme((prevTheme) => (prevTheme === 'main' ? 'light' : 'main'));\n    };\n\n    \n\n    const recommendSongs = async () => {\n        try {\n            const accessToken = localStorage.getItem('access_token');\n            const weatherGenre = mapWeatherToGenres(weatherData); // Get the mapped genre based on weather\n            const response = await Utils.getRecommendations(accessToken, null, weatherGenre, null);\n            setRecommendedTracks(response.tracks);\n        } catch (error) {\n            console.error('Error fetching recommended tracks:', error);\n        }\n    };\n    \n    const mapWeatherToGenres = (weatherData) => {\n        // Map weather conditions to corresponding music genres\n        const weatherCondition = weatherData.weather[0].main.toLowerCase();\n        switch (weatherCondition) {\n            case 'clear':\n                return 'pop'; // Example genre for clear weather\n            case 'rain':\n                return 'chill'; // Example genre for rainy weather\n            case 'clouds':\n                return 'indie'; // Example genre for cloudy weather\n            // Add more cases for other weather conditions as needed\n            default:\n                return 'pop'; // Default genre if weather condition doesn't match any specific genre\n        }\n    };\n\n    useEffect(() => { // Effect for handling search and recommending songs\n        if (weatherData) {\n            recommendSongs();\n        }\n    }, [weatherData]);\n    \n     // Function to create playlist and add recommended songs\n     const savePlaylist = async () => {\n        try {\n            const accessToken = localStorage.getItem('access_token');\n            if (accessToken && userId && weatherData) { // Make sure weatherData is available\n                // Create playlist\n                const playlistResponse = await createPlaylist(accessToken, userId, weatherData);\n                const playlistId = playlistResponse.id;\n    \n                // Add recommended tracks to the playlist\n                await addTracksToPlaylist(accessToken, userId, playlistId, recommendedTracks.map(track => track.uri));\n    \n                console.log('Playlist created and tracks added successfully');\n            } else {\n                console.error('Access token, user ID, or weather data not found');\n            }\n        } catch (error) {\n            console.error('Error saving playlist:', error);\n        }\n    };\n    \n    const createPlaylist = async (accessToken, userId, weatherData) => {\n        const cityName = weatherData.name; // Extract city name from weather data\n        const weatherCondition = weatherData.weather[0].main.toLowerCase(); // Extract weather condition from weather data\n        const formattedDate = `${new Date().getDate().toString().padStart(2, '0')}/${(new Date().getMonth() + 1).toString().padStart(2, '0')}/${new Date().getFullYear()}`;\n        const playlistName = `${cityName}-${weatherCondition}-${formattedDate}`;\n    \n        const url = `https://api.spotify.com/v1/users/${userId}/playlists`;\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${accessToken}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: playlistName,\n                public: true,\n            }),\n        });\n        if (!response.ok) {\n            throw new Error('Failed to create playlist');\n        }\n        return response.json();\n    };\n    \n\n    const addTracksToPlaylist = async (accessToken, userId, playlistId, trackUris) => {\n        const url = `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`;\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${accessToken}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                uris: trackUris,\n            }),\n        });\n        if (!response.ok) {\n            throw new Error('Failed to add tracks to playlist');\n        }\n        return response.json();\n    };\n\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"card\">\n                    <div className=\"search\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter city name\"\n                            spellCheck=\"false\"\n                            value={city}\n                            onChange={handleChange}\n                            onKeyDown={handleKeyDown} // Enables search by hitting enter\n                        />\n                        <button onClick={handleSearch}>Search</button>\n                    </div>\n\n                    {errorMessage && <div className=\"error\"><p>{errorMessage}</p></div>}\n                    {weatherData && (\n                        <div className=\"weather\">\n                            <h3>Cześć, {userName}!</h3>\n                            <h2>Weather in {weatherData.name}</h2>\n                            <p>Condition: {weatherData.weather[0].main}</p>\n                            <p>Temperature: {Math.round(weatherData.main.temp)}°C</p>\n                            <p>Humidity: {weatherData.main.humidity}%</p>\n                            <p>Wind Speed: {weatherData.wind.speed} km/h</p>\n                        </div>\n                    )}\n                {/* Rekomendacja Piosenek */}\n                <div className=\"container\">\n                    <button onClick={recommendSongs}>Recommend Songs</button>\n                    {recommendedTracks.length > 0 && (\n                     <div>\n                    <h3>Recommended Songs</h3>\n                    <ul>\n                        {recommendedTracks.map((track, index) => (\n                            <li key={index}>{track.name} - {track.artists.map(artist => artist.name).join(', ')}</li>\n                        ))}\n                    </ul>\n                    <button onClick={savePlaylist}>Save Playlist</button>\n                    </div>\n                     )}\n                    </div>\n\n                \n                </div>\n                \n\n                <button className=\"theme-btn\" onClick={toggleTheme}>Theme</button>\n                {loggedIn ? (\n                    <button onClick={handleLogout}>Logout</button>\n                ) : (\n                    <button onClick={handleLogin}>Login with Spotify</button>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}