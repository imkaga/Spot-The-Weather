{"ast":null,"code":"var _jsxFileName = \"/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js\",\n  _s = $RefreshSig$();\n// TierList.js\n\nimport React, { useState } from 'react';\nimport './TierList.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialItems = [{\n  name: 'Apple',\n  imageURL: 'apple.jpg',\n  tier: 'S'\n}, {\n  name: 'Lemon',\n  imageURL: 'lemon.jpg',\n  tier: 'A'\n}\n// Add more items...\n];\nconst TierList = () => {\n  _s();\n  const [items, setItems] = useState(initialItems);\n  const handleDrop = (item, newTier) => {\n    // Update the item's tier when dropped\n    const updatedItems = items.map(i => i.name === item.name ? {\n      ...i,\n      tier: newTier\n    } : i);\n    setItems(updatedItems);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tier-list\",\n    children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tier-item tier-${item.tier}`,\n      draggable: true,\n      onDragStart: e => e.dataTransfer.setData('text/plain', item.name),\n      onDragOver: e => e.preventDefault(),\n      onDrop: e => {\n        e.preventDefault();\n        const draggedItem = e.dataTransfer.getData('text/plain');\n        handleDrop(item, draggedItem);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.imageURL,\n        alt: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, item.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TierList, \"sNFHCHSkSTmZoBPBTQOxnnfkt60=\");\n_c = TierList;\nexport default TierList;\nvar _c;\n$RefreshReg$(_c, \"TierList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialItems","name","imageURL","tier","TierList","_s","items","setItems","handleDrop","item","newTier","updatedItems","map","i","className","children","draggable","onDragStart","e","dataTransfer","setData","onDragOver","preventDefault","onDrop","draggedItem","getData","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js"],"sourcesContent":["// TierList.js\n\nimport React, { useState } from 'react';\nimport './TierList.css'; // Import your CSS file\n\nconst initialItems = [\n  { name: 'Apple', imageURL: 'apple.jpg', tier: 'S' },\n  { name: 'Lemon', imageURL: 'lemon.jpg', tier: 'A' },\n  // Add more items...\n];\n\nconst TierList = () => {\n  const [items, setItems] = useState(initialItems);\n\n  const handleDrop = (item, newTier) => {\n    // Update the item's tier when dropped\n    const updatedItems = items.map((i) =>\n      i.name === item.name ? { ...i, tier: newTier } : i\n    );\n    setItems(updatedItems);\n  };\n\n  return (\n    <div className=\"tier-list\">\n      {items.map((item) => (\n        <div\n          key={item.name}\n          className={`tier-item tier-${item.tier}`}\n          draggable\n          onDragStart={(e) => e.dataTransfer.setData('text/plain', item.name)}\n          onDragOver={(e) => e.preventDefault()}\n          onDrop={(e) => {\n            e.preventDefault();\n            const draggedItem = e.dataTransfer.getData('text/plain');\n            handleDrop(item, draggedItem);\n          }}\n        >\n          <img src={item.imageURL} alt={item.name} />\n          <span>{item.name}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TierList;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,YAAY,GAAG,CACnB;EAAEC,IAAI,EAAE,OAAO;EAAEC,QAAQ,EAAE,WAAW;EAAEC,IAAI,EAAE;AAAI,CAAC,EACnD;EAAEF,IAAI,EAAE,OAAO;EAAEC,QAAQ,EAAE,WAAW;EAAEC,IAAI,EAAE;AAAI;AAClD;AAAA,CACD;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACG,YAAY,CAAC;EAEhD,MAAMQ,UAAU,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;IACpC;IACA,MAAMC,YAAY,GAAGL,KAAK,CAACM,GAAG,CAAEC,CAAC,IAC/BA,CAAC,CAACZ,IAAI,KAAKQ,IAAI,CAACR,IAAI,GAAG;MAAE,GAAGY,CAAC;MAAEV,IAAI,EAAEO;IAAQ,CAAC,GAAGG,CACnD,CAAC;IACDN,QAAQ,CAACI,YAAY,CAAC;EACxB,CAAC;EAED,oBACEZ,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBT,KAAK,CAACM,GAAG,CAAEH,IAAI,iBACdV,OAAA;MAEEe,SAAS,EAAG,kBAAiBL,IAAI,CAACN,IAAK,EAAE;MACzCa,SAAS;MACTC,WAAW,EAAGC,CAAC,IAAKA,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEX,IAAI,CAACR,IAAI,CAAE;MACpEoB,UAAU,EAAGH,CAAC,IAAKA,CAAC,CAACI,cAAc,CAAC,CAAE;MACtCC,MAAM,EAAGL,CAAC,IAAK;QACbA,CAAC,CAACI,cAAc,CAAC,CAAC;QAClB,MAAME,WAAW,GAAGN,CAAC,CAACC,YAAY,CAACM,OAAO,CAAC,YAAY,CAAC;QACxDjB,UAAU,CAACC,IAAI,EAAEe,WAAW,CAAC;MAC/B,CAAE;MAAAT,QAAA,gBAEFhB,OAAA;QAAK2B,GAAG,EAAEjB,IAAI,CAACP,QAAS;QAACyB,GAAG,EAAElB,IAAI,CAACR;MAAK;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3ChC,OAAA;QAAAgB,QAAA,EAAON,IAAI,CAACR;MAAI;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,GAZnBtB,IAAI,CAACR,IAAI;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaX,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAhCID,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}