{"ast":null,"code":"var _jsxFileName = \"/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getTopArtists, loggedin } from './Utils'; // Import necessary functions from utils.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TierPair = ({\n  tier,\n  droppedItems,\n  setDroppedItems\n}) => {\n  var _droppedItems$tier;\n  const handleDropLocal = e => {\n    e.preventDefault();\n    const {\n      id,\n      imageUrl\n    } = JSON.parse(e.dataTransfer.getData('application/json'));\n\n    // Update droppedItems\n    setDroppedItems(prevItems => ({\n      ...prevItems,\n      [tier]: [...prevItems[tier], {\n        id,\n        imageUrl\n      }]\n    }));\n  };\n  const handleItemClick = itemId => {\n    // Remove item (artist) from droppedItems of the current tier\n    setDroppedItems(prevItems => ({\n      ...prevItems,\n      [tier]: prevItems[tier].filter(item => item.id !== itemId)\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tier-pair\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tier-name tier-${tier.toLowerCase()}`,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: tier\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tier\",\n      onDrop: handleDropLocal,\n      onDragOver: e => e.preventDefault(),\n      children: (_droppedItems$tier = droppedItems[tier]) === null || _droppedItems$tier === void 0 ? void 0 : _droppedItems$tier.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artist-item\",\n        onClick: () => handleItemClick(artist.id),\n        children: [artist.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: artist.imageUrl,\n          alt: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, artist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = TierPair;\nconst TierList = () => {\n  _s();\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n  const [droppedItems, setDroppedItems] = useState({\n    S: [],\n    A: [],\n    B: [],\n    C: [],\n    D: []\n  });\n  const [numArtists, setNumArtists] = useState(10);\n  useEffect(() => {\n    const fetchTopArtistsData = async () => {\n      try {\n        if (!loggedin()) {\n          console.log('User not logged in');\n          return;\n        }\n        const accessToken = localStorage.getItem('access_token');\n        const initialDroppedItems = tiers.reduce((acc, tier) => {\n          acc[tier] = [];\n          return acc;\n        }, {});\n        let allArtists = [];\n        const artistIdsSet = new Set(); // Use a Set to keep track of unique artist IDs\n        const limit = 100; // Maximum limit to fetch more artists\n        let offset = 0;\n\n        // Fetch more artists than needed to ensure enough unique ones\n        while (artistIdsSet.size < numArtists) {\n          const topArtistsData = await getTopArtists(accessToken, limit, offset);\n          if (!topArtistsData || !topArtistsData.items || topArtistsData.items.length === 0) {\n            break; // No more artists to fetch\n          }\n\n          // Filter and collect unique artists\n          topArtistsData.items.forEach(artist => {\n            if (!artistIdsSet.has(artist.id)) {\n              artistIdsSet.add(artist.id);\n              allArtists.push(artist);\n            }\n          });\n          offset += limit;\n        }\n\n        // Take only the specified number of unique artists\n        const uniqueArtists = allArtists.slice(0, numArtists);\n\n        // Update droppedItems state with fetched artists\n        setDroppedItems({\n          ...initialDroppedItems,\n          items: uniqueArtists\n        });\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Call the function to fetch data when the component mounts or when numArtists changes\n    fetchTopArtistsData();\n  }, [numArtists]); // Trigger effect whenever numArtists changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tier-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tier List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tier-list\",\n      children: tiers.map(tier => /*#__PURE__*/_jsxDEV(TierPair, {\n        tier: tier,\n        droppedItems: droppedItems,\n        setDroppedItems: setDroppedItems\n      }, tier, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numArtists\",\n        children: \"Number of Artists:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"numArtists\",\n        value: numArtists,\n        onChange: e => setNumArtists(parseInt(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 25,\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(TierList, \"OUD2Sg+Negppj4nmekNfM2j39d0=\");\n_c2 = TierList;\nexport default TierList;\nvar _c, _c2;\n$RefreshReg$(_c, \"TierPair\");\n$RefreshReg$(_c2, \"TierList\");","map":{"version":3,"names":["React","useState","useEffect","getTopArtists","loggedin","jsxDEV","_jsxDEV","TierPair","tier","droppedItems","setDroppedItems","_droppedItems$tier","handleDropLocal","e","preventDefault","id","imageUrl","JSON","parse","dataTransfer","getData","prevItems","handleItemClick","itemId","filter","item","className","children","toLowerCase","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","map","artist","onClick","src","alt","name","_c","TierList","_s","tiers","S","A","B","C","D","numArtists","setNumArtists","fetchTopArtistsData","console","log","accessToken","localStorage","getItem","initialDroppedItems","reduce","acc","allArtists","artistIdsSet","Set","limit","offset","size","topArtistsData","items","length","forEach","has","add","push","uniqueArtists","slice","error","htmlFor","value","onChange","parseInt","target","_c2","$RefreshReg$"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getTopArtists, loggedin } from './Utils'; // Import necessary functions from utils.js\n\nconst TierPair = ({ tier, droppedItems, setDroppedItems }) => {\n  const handleDropLocal = (e) => {\n    e.preventDefault();\n    const { id, imageUrl } = JSON.parse(e.dataTransfer.getData('application/json'));\n\n    // Update droppedItems\n    setDroppedItems((prevItems) => ({\n      ...prevItems,\n      [tier]: [...prevItems[tier], { id, imageUrl }],\n    }));\n  };\n\n  const handleItemClick = (itemId) => {\n    // Remove item (artist) from droppedItems of the current tier\n    setDroppedItems((prevItems) => ({\n      ...prevItems,\n      [tier]: prevItems[tier].filter((item) => item.id !== itemId),\n    }));\n  };\n\n  return (\n    <div className=\"tier-pair\">\n      <div className={`tier-name tier-${tier.toLowerCase()}`}>\n        <h2>{tier}</h2>\n      </div>\n      <div className=\"tier\" onDrop={handleDropLocal} onDragOver={(e) => e.preventDefault()}>\n        {/* Render dropped items (artists) for the current tier */}\n        {droppedItems[tier]?.map((artist) => (\n          <div key={artist.id} className=\"artist-item\" onClick={() => handleItemClick(artist.id)}>\n            {artist.imageUrl ? (\n              <img src={artist.imageUrl} alt={artist.name} />\n            ) : (\n              <div>No Image</div>\n            )}\n            <p>{artist.name}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst TierList = () => {\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n  const [droppedItems, setDroppedItems] = useState({ S: [], A: [], B: [], C: [], D: [] });\n  const [numArtists, setNumArtists] = useState(10);\n\n  useEffect(() => {\n    const fetchTopArtistsData = async () => {\n      try {\n        if (!loggedin()) {\n          console.log('User not logged in');\n          return;\n        }\n\n        const accessToken = localStorage.getItem('access_token');\n        const initialDroppedItems = tiers.reduce((acc, tier) => {\n          acc[tier] = [];\n          return acc;\n        }, {});\n\n        let allArtists = [];\n        const artistIdsSet = new Set(); // Use a Set to keep track of unique artist IDs\n        const limit = 100; // Maximum limit to fetch more artists\n        let offset = 0;\n\n        // Fetch more artists than needed to ensure enough unique ones\n        while (artistIdsSet.size < numArtists) {\n          const topArtistsData = await getTopArtists(accessToken, limit, offset);\n          if (!topArtistsData || !topArtistsData.items || topArtistsData.items.length === 0) {\n            break; // No more artists to fetch\n          }\n\n          // Filter and collect unique artists\n          topArtistsData.items.forEach((artist) => {\n            if (!artistIdsSet.has(artist.id)) {\n              artistIdsSet.add(artist.id);\n              allArtists.push(artist);\n            }\n          });\n\n          offset += limit;\n        }\n\n        // Take only the specified number of unique artists\n        const uniqueArtists = allArtists.slice(0, numArtists);\n\n        // Update droppedItems state with fetched artists\n        setDroppedItems({ ...initialDroppedItems, items: uniqueArtists });\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Call the function to fetch data when the component mounts or when numArtists changes\n    fetchTopArtistsData();\n  }, [numArtists]); // Trigger effect whenever numArtists changes\n\n  return (\n    <div className=\"tier-list-container\">\n      <h1>Tier List</h1>\n\n      {/* Render TierPair components for each tier */}\n      <div className=\"tier-list\">\n        {tiers.map((tier) => (\n          <TierPair\n            key={tier}\n            tier={tier}\n            droppedItems={droppedItems}\n            setDroppedItems={setDroppedItems}\n          />\n        ))}\n      </div>\n\n      {/* Dropdown to select number of artists */}\n      <div>\n        <label htmlFor=\"numArtists\">Number of Artists:</label>\n        <select id=\"numArtists\" value={numArtists} onChange={(e) => setNumArtists(parseInt(e.target.value))}>\n          <option value={10}>10</option>\n          <option value={25}>25</option>\n          <option value={50}>50</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default TierList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}