{"ast":null,"code":"var _jsxFileName = \"/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as Utils from './Utils'; // Import functions from Utils.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [city, setCity] = useState(''); // State for storing the city input\n  const [weatherData, setWeatherData] = useState(null); // State for storing weather data\n  const [errorMessage, setErrorMessage] = useState(''); // State for error messages\n  const [userName, setUserName] = useState(''); // State for storing user's name\n  const [loggedIn, setLoggedIn] = useState(false); // State for user login status\n  const [theme, setTheme] = useState(() => localStorage.getItem('theme') || 'main'); // State for storing theme\n  const [recommendedTracks, setRecommendedTracks] = useState([]); // State for storing recommended tracks\n  const [userId, setUserId] = useState(''); // State for storing user's Spotify user ID\n  const [refreshCount, setRefreshCount] = useState(() => parseInt(localStorage.getItem('refreshCount')) || 0);\n  const [lastRefreshTime, setLastRefreshTime] = useState(() => parseInt(localStorage.getItem('lastRefreshTime')) || null);\n  const [countdown, setCountdown] = useState(null);\n  const handleLogin = Utils.authenticate; // Function for handling login\n\n  const handleLogout = () => {\n    // Function for handling logout\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    setLoggedIn(false);\n    window.location.href = '/';\n  };\n  useEffect(() => {\n    Utils.handleAuthorizationCode().then(() => {\n      const accessToken = localStorage.getItem('access_token');\n      if (accessToken) {\n        Utils.getProfile(accessToken).then(data => {\n          if (data) {\n            setUserName(data.display_name);\n            setUserId(data.id);\n          }\n        }).catch(error => {\n          console.error('Error fetching user profile:', error);\n        });\n      } else {\n        console.error('Access token not found');\n      }\n    }).catch(error => {\n      console.error('Error handling authorization code:', error);\n    });\n  }, []);\n  useEffect(() => {\n    const lastCity = localStorage.getItem('lastCity');\n    if (lastCity) {\n      setCity(lastCity);\n      Utils.fetchWeatherData(lastCity).then(({\n        data,\n        error\n      }) => {\n        if (error) {\n          setErrorMessage(error);\n        } else {\n          setWeatherData(data);\n          setErrorMessage('');\n        }\n      });\n    }\n    const accessToken = localStorage.getItem('access_token');\n    if (accessToken) {\n      Utils.getProfile(accessToken).then(data => {\n        if (data) {\n          setUserName(data.display_name);\n        }\n      }).catch(error => {\n        console.error('Error fetching user profile:', error);\n      });\n    } else {\n      console.error('Access token not found');\n    }\n  }, []);\n  useEffect(() => {\n    const accessToken = localStorage.getItem('access_token');\n    const refreshToken = localStorage.getItem('refresh_token');\n    if (accessToken) {\n      Utils.getProfile(accessToken, refreshToken).then(data => {\n        if (data) {\n          setUserName(data.display_name);\n          setLoggedIn(true);\n        }\n      }).catch(error => {\n        console.error('Error fetching user profile:', error);\n      });\n    } else {\n      console.error('Access token not found');\n    }\n  }, []);\n  useEffect(() => {\n    document.body.classList.toggle('light-theme', theme === 'light');\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  useEffect(() => {\n    const storedLastRefreshTime = localStorage.getItem('lastRefreshTime');\n    const storedRefreshCount = localStorage.getItem('refreshCount');\n    if (storedLastRefreshTime && storedRefreshCount) {\n      const remainingTime = 5 * 60 * 1000 - (Date.now() - parseInt(storedLastRefreshTime));\n      if (remainingTime > 0 && parseInt(storedRefreshCount) >= 5) {\n        setCountdown(remainingTime);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (countdown !== null) {\n      const timer = setInterval(() => {\n        setCountdown(prevCountdown => {\n          if (prevCountdown <= 0) {\n            clearInterval(timer);\n            return 0;\n          } else {\n            return prevCountdown - 1000;\n          }\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [countdown]);\n  useEffect(() => {\n    if (weatherData && refreshCount < 5 && (!lastRefreshTime || (Date.now() - lastRefreshTime) / (1000 * 60) >= 10)) {\n      setCountdown(5 * 60 * 1000);\n    }\n  }, [weatherData]);\n  const handleSearch = () => {\n    Utils.fetchWeatherData(city).then(({\n      data,\n      error\n    }) => {\n      if (error) {\n        setErrorMessage(error);\n      } else {\n        setWeatherData(data);\n        setErrorMessage('');\n        localStorage.setItem('lastCity', city);\n        setRefreshCount(0); // Reset refresh count when city is changed\n      }\n    });\n  };\n  const handleChange = e => {\n    setCity(e.target.value);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'main' ? 'light' : 'main');\n  };\n  const recommendSongs = async () => {\n    try {\n      const accessToken = localStorage.getItem('access_token');\n      const weatherGenre = mapWeatherToGenres(weatherData);\n      const response = await Utils.getRecommendations(accessToken, null, weatherGenre, null);\n      localStorage.setItem('recommendedTracks', JSON.stringify(response.tracks)); // Store recommended tracks in localStorage\n      setRecommendedTracks(response.tracks);\n      localStorage.setItem('lastRefreshTime', Date.now());\n      setLastRefreshTime(Date.now());\n      localStorage.setItem('refreshCount', refreshCount + 1);\n      setRefreshCount(prevCount => prevCount + 1);\n    } catch (error) {\n      console.error('Error fetching recommended tracks:', error);\n    }\n  };\n  const mapWeatherToGenres = weatherData => {\n    const weatherCondition = weatherData.weather[0].main.toLowerCase();\n    switch (weatherCondition) {\n      case 'clear':\n        return 'pop';\n      case 'rain':\n        return 'chill';\n      case 'clouds':\n        return 'indie';\n      default:\n        return 'pop';\n    }\n  };\n  const savePlaylist = async () => {\n    try {\n      const accessToken = localStorage.getItem('access_token');\n      if (accessToken && userId && weatherData) {\n        const playlistResponse = await createPlaylist(accessToken, userId, weatherData);\n        const playlistId = playlistResponse.id;\n        await addTracksToPlaylist(accessToken, userId, playlistId, recommendedTracks.map(track => track.uri));\n        console.log('Playlist created and tracks added successfully');\n      } else {\n        console.error('Access token, user ID, or weather data not found');\n      }\n    } catch (error) {\n      console.error('Error saving playlist:', error);\n    }\n  };\n  const createPlaylist = async (accessToken, userId, weatherData) => {\n    const cityName = weatherData.name;\n    const weatherCondition = weatherData.weather[0].main.toLowerCase();\n    const formattedDate = `${new Date().getDate().toString().padStart(2, '0')}/${(new Date().getMonth() + 1).toString().padStart(2, '0')}/${new Date().getFullYear()}`;\n    const playlistName = `${cityName}-${weatherCondition}-${formattedDate}`;\n    const url = `https://api.spotify.com/v1/users/${userId}/playlists`;\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: playlistName,\n        public: true\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create playlist');\n    }\n    return response.json();\n  };\n  const addTracksToPlaylist = async (accessToken, userId, playlistId, trackUris) => {\n    const url = `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`;\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        uris: trackUris\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to add tracks to playlist');\n    }\n    return response.json();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter city name\",\n            spellCheck: \"false\",\n            value: city,\n            onChange: handleChange,\n            onKeyDown: handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSearch,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 38\n        }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Cze\\u015B\\u0107, \", userName, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Weather in \", weatherData.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Condition: \", weatherData.weather[0].main]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temperature: \", Math.round(weatherData.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Humidity: \", weatherData.main.humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind Speed: \", weatherData.wind.speed, \" km/h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [countdown !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You used up all of your refreshes. Please wait:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [Math.floor(countdown / 60000), \":\", (countdown % 60000 / 1000).toFixed(0).padStart(2, '0')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this), countdown === null && refreshCount < 5 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: recommendSongs,\n            children: \"Refresh recommendations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this), recommendedTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Recommended Songs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: recommendedTracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [track.name, \" - \", track.artists.map(artist => artist.name).join(', ')]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: savePlaylist,\n              children: \"Save Playlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-btn\",\n        onClick: toggleTheme,\n        children: \"Theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), loggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login with Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"ctsP3+o4PhXXVmpmySIyFBXiSUc=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Utils","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","city","setCity","weatherData","setWeatherData","errorMessage","setErrorMessage","userName","setUserName","loggedIn","setLoggedIn","theme","setTheme","localStorage","getItem","recommendedTracks","setRecommendedTracks","userId","setUserId","refreshCount","setRefreshCount","parseInt","lastRefreshTime","setLastRefreshTime","countdown","setCountdown","handleLogin","authenticate","handleLogout","removeItem","window","location","href","handleAuthorizationCode","then","accessToken","getProfile","data","display_name","id","catch","error","console","lastCity","fetchWeatherData","refreshToken","document","body","classList","toggle","setItem","storedLastRefreshTime","storedRefreshCount","remainingTime","Date","now","timer","setInterval","prevCountdown","clearInterval","handleSearch","handleChange","e","target","value","handleKeyDown","key","toggleTheme","prevTheme","recommendSongs","weatherGenre","mapWeatherToGenres","response","getRecommendations","JSON","stringify","tracks","prevCount","weatherCondition","weather","main","toLowerCase","savePlaylist","playlistResponse","createPlaylist","playlistId","addTracksToPlaylist","map","track","uri","log","cityName","name","formattedDate","getDate","toString","padStart","getMonth","getFullYear","playlistName","url","fetch","method","headers","public","ok","Error","json","trackUris","uris","children","className","type","placeholder","spellCheck","onChange","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Math","round","temp","humidity","wind","speed","floor","toFixed","length","index","artists","artist","join","_c","$RefreshReg$"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Utils from './Utils'; // Import functions from Utils.js\n\nfunction Home() {\n    const [city, setCity] = useState(''); // State for storing the city input\n    const [weatherData, setWeatherData] = useState(null); // State for storing weather data\n    const [errorMessage, setErrorMessage] = useState(''); // State for error messages\n    const [userName, setUserName] = useState(''); // State for storing user's name\n    const [loggedIn, setLoggedIn] = useState(false); // State for user login status\n    const [theme, setTheme] = useState(() => localStorage.getItem('theme') || 'main'); // State for storing theme\n    const [recommendedTracks, setRecommendedTracks] = useState([]); // State for storing recommended tracks\n    const [userId, setUserId] = useState(''); // State for storing user's Spotify user ID\n    const [refreshCount, setRefreshCount] = useState(() => parseInt(localStorage.getItem('refreshCount')) || 0);\n    const [lastRefreshTime, setLastRefreshTime] = useState(() => parseInt(localStorage.getItem('lastRefreshTime')) || null);\n    const [countdown, setCountdown] = useState(null);\n\n\n    const handleLogin = Utils.authenticate; // Function for handling login\n\n    const handleLogout = () => { // Function for handling logout\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n        setLoggedIn(false);\n        window.location.href = '/';\n    };\n\n    useEffect(() => {\n        Utils.handleAuthorizationCode()\n            .then(() => {\n                const accessToken = localStorage.getItem('access_token');\n                if (accessToken) {\n                    Utils.getProfile(accessToken)\n                        .then(data => {\n                            if (data) {\n                                setUserName(data.display_name);\n                                setUserId(data.id);\n                            }\n                        })\n                        .catch(error => {\n                            console.error('Error fetching user profile:', error);\n                        });\n                } else {\n                    console.error('Access token not found');\n                }\n            })\n            .catch(error => {\n                console.error('Error handling authorization code:', error);\n            });\n    }, []);\n\n    useEffect(() => {\n        const lastCity = localStorage.getItem('lastCity');\n        if (lastCity) {\n            setCity(lastCity);\n            Utils.fetchWeatherData(lastCity)\n                .then(({ data, error }) => {\n                    if (error) {\n                        setErrorMessage(error);\n                    } else {\n                        setWeatherData(data);\n                        setErrorMessage('');\n                    }\n                });\n        }\n\n        const accessToken = localStorage.getItem('access_token');\n        if (accessToken) {\n            Utils.getProfile(accessToken)\n                .then(data => {\n                    if (data) {\n                        setUserName(data.display_name);\n                    }\n                })\n                .catch(error => {\n                    console.error('Error fetching user profile:', error);\n                });\n        } else {\n            console.error('Access token not found');\n        }\n    }, []);\n\n    useEffect(() => {\n        const accessToken = localStorage.getItem('access_token');\n        const refreshToken = localStorage.getItem('refresh_token');\n\n        if (accessToken) {\n            Utils.getProfile(accessToken, refreshToken)\n                .then(data => {\n                    if (data) {\n                        setUserName(data.display_name);\n                        setLoggedIn(true);\n                    }\n                })\n                .catch(error => {\n                    console.error('Error fetching user profile:', error);\n                });\n        } else {\n            console.error('Access token not found');\n        }\n    }, []);\n\n    useEffect(() => {\n        document.body.classList.toggle('light-theme', theme === 'light');\n        localStorage.setItem('theme', theme);\n    }, [theme]);\n\n    useEffect(() => {\n        const storedLastRefreshTime = localStorage.getItem('lastRefreshTime');\n        const storedRefreshCount = localStorage.getItem('refreshCount');\n        if (storedLastRefreshTime && storedRefreshCount) {\n            const remainingTime = 5 * 60 * 1000 - (Date.now() - parseInt(storedLastRefreshTime));\n            if (remainingTime > 0 && parseInt(storedRefreshCount) >= 5) {\n                setCountdown(remainingTime);\n            }\n        }\n    }, []);\n\n    useEffect(() => {\n        if (countdown !== null) {\n            const timer = setInterval(() => {\n                setCountdown(prevCountdown => {\n                    if (prevCountdown <= 0) {\n                        clearInterval(timer);\n                        return 0;\n                    } else {\n                        return prevCountdown - 1000;\n                    }\n                });\n            }, 1000);\n            return () => clearInterval(timer);\n        }\n    }, [countdown]);\n\n    useEffect(() => {\n        if (weatherData && refreshCount < 5 && (!lastRefreshTime || (Date.now() - lastRefreshTime) / (1000 * 60) >= 10)) {\n            setCountdown(5 * 60 * 1000);\n        }\n    }, [weatherData]);\n\n    const handleSearch = () => {\n        Utils.fetchWeatherData(city)\n            .then(({ data, error }) => {\n                if (error) {\n                    setErrorMessage(error);\n                } else {\n                    setWeatherData(data);\n                    setErrorMessage('');\n                    localStorage.setItem('lastCity', city);\n                    setRefreshCount(0); // Reset refresh count when city is changed\n                }\n            });\n    };\n\n    const handleChange = (e) => {\n        setCity(e.target.value);\n    };\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            handleSearch();\n        }\n    };\n\n    const toggleTheme = () => {\n        setTheme((prevTheme) => (prevTheme === 'main' ? 'light' : 'main'));\n    };\n\n    const recommendSongs = async () => {\n        try {\n            const accessToken = localStorage.getItem('access_token');\n            const weatherGenre = mapWeatherToGenres(weatherData);\n            const response = await Utils.getRecommendations(accessToken, null, weatherGenre, null);\n            localStorage.setItem('recommendedTracks', JSON.stringify(response.tracks)); // Store recommended tracks in localStorage\n            setRecommendedTracks(response.tracks);\n            localStorage.setItem('lastRefreshTime', Date.now());\n            setLastRefreshTime(Date.now());\n            localStorage.setItem('refreshCount', refreshCount + 1);\n            setRefreshCount(prevCount => prevCount + 1);\n        } catch (error) {\n            console.error('Error fetching recommended tracks:', error);\n        }\n    };\n\n    const mapWeatherToGenres = (weatherData) => {\n        const weatherCondition = weatherData.weather[0].main.toLowerCase();\n        switch (weatherCondition) {\n            case 'clear':\n                return 'pop';\n            case 'rain':\n                return 'chill';\n            case 'clouds':\n                return 'indie';\n            default:\n                return 'pop';\n        }\n    };\n\n    const savePlaylist = async () => {\n        try {\n            const accessToken = localStorage.getItem('access_token');\n            if (accessToken && userId && weatherData) {\n                const playlistResponse = await createPlaylist(accessToken, userId, weatherData);\n                const playlistId = playlistResponse.id;\n    \n                await addTracksToPlaylist(accessToken, userId, playlistId, recommendedTracks.map(track => track.uri));\n    \n                console.log('Playlist created and tracks added successfully');\n            } else {\n                console.error('Access token, user ID, or weather data not found');\n            }\n        } catch (error) {\n            console.error('Error saving playlist:', error);\n        }\n    };\n    \n    const createPlaylist = async (accessToken, userId, weatherData) => {\n        const cityName = weatherData.name;\n        const weatherCondition = weatherData.weather[0].main.toLowerCase();\n        const formattedDate = `${new Date().getDate().toString().padStart(2, '0')}/${(new Date().getMonth() + 1).toString().padStart(2, '0')}/${new Date().getFullYear()}`;\n        const playlistName = `${cityName}-${weatherCondition}-${formattedDate}`;\n    \n        const url = `https://api.spotify.com/v1/users/${userId}/playlists`;\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${accessToken}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: playlistName,\n                public: true,\n            }),\n        });\n        if (!response.ok) {\n            throw new Error('Failed to create playlist');\n        }\n        return response.json();\n    };\n    \n    const addTracksToPlaylist = async (accessToken, userId, playlistId, trackUris) => {\n        const url = `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`;\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${accessToken}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                uris: trackUris,\n            }),\n        });\n        if (!response.ok) {\n            throw new Error('Failed to add tracks to playlist');\n        }\n        return response.json();\n    };\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"card\">\n                    <div className=\"search\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter city name\"\n                            spellCheck=\"false\"\n                            value={city}\n                            onChange={handleChange}\n                            onKeyDown={handleKeyDown}\n                        />\n                        <button onClick={handleSearch}>Search</button>\n                    </div>\n\n                    {errorMessage && <div className=\"error\"><p>{errorMessage}</p></div>}\n                    {weatherData && (\n                        <div className=\"weather\">\n                            <h3>Cześć, {userName}!</h3>\n                            <h2>Weather in {weatherData.name}</h2>\n                            <p>Condition: {weatherData.weather[0].main}</p>\n                            <p>Temperature: {Math.round(weatherData.main.temp)}°C</p>\n                            <p>Humidity: {weatherData.main.humidity}%</p>\n                            <p>Wind Speed: {weatherData.wind.speed} km/h</p>\n                        </div>\n                    )}\n\n                    <div className=\"container\">\n                        {countdown !== null && (\n                            <div>\n                                <p>You used up all of your refreshes. Please wait:</p>\n                                <p>{Math.floor(countdown / 60000)}:{(countdown % 60000 / 1000).toFixed(0).padStart(2, '0')}</p>\n                            </div>\n                        )}\n                        {countdown === null && refreshCount < 5 && (\n                            <button onClick={recommendSongs}>Refresh recommendations</button>\n                        )}\n                        {recommendedTracks.length > 0 && (\n                            <div>\n                                <h3>Recommended Songs</h3>\n                                <ul>\n                                    {recommendedTracks.map((track, index) => (\n                                        <li key={index}>{track.name} - {track.artists.map(artist => artist.name).join(', ')}</li>\n                                    ))}\n                                </ul>\n                                <button onClick={savePlaylist}>Save Playlist</button>\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                <button className=\"theme-btn\" onClick={toggleTheme}>Theme</button>\n                {loggedIn ? (\n                    <button onClick={handleLogout}>Logout</button>\n                ) : (\n                    <button onClick={handleLogin}>Login with Spotify</button>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}