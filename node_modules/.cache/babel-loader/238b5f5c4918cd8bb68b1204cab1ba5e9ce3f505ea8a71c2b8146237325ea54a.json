{"ast":null,"code":"var _jsxFileName = \"/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { openWeatherApiKey, openWeatherApiUrl, spotifyClientId, spotifyClientSecret, spotifyRedirectUri } from './ApiKeys';\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiKey = openWeatherApiKey;\nconst clientId = spotifyClientId;\nconst clientSecret = spotifyClientSecret;\nconst redirectUri = spotifyRedirectUri;\nconst apiUrl = openWeatherApiUrl;\n\n// Authentication flow\nasync function authenticate() {\n  const scopes = ['user-read-private', 'user-read-email'];\n  window.location.href = `https://accounts.spotify.com/authorize?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=code`;\n}\n// Function to fetch user's top tracks\nasync function fetchTopTracks(accessToken) {\n  try {\n    const response = await fetch('https://api.spotify.com/v1/me/top/tracks', {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to fetch top tracks. Status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data.items.map(track => track.id);\n  } catch (error) {\n    console.error('Error fetching top tracks:', error);\n    throw error;\n  }\n}\n\n// Function to fetch recommendations based on top tracks\nasync function getRecommendations(token) {\n  try {\n    const topTracksIds = await fetchTopTracks(token);\n\n    // Endpoint reference: https://developer.spotify.com/documentation/web-api/reference/get-recommendations\n    const res = await fetch(`https://api.spotify.com/v1/recommendations?limit=5&seed_tracks=${topTracksIds.join(',')}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await res.json();\n    return data.tracks;\n  } catch (error) {\n    console.error('Error getting recommendations:', error);\n    throw error;\n  }\n}\n\n// Modify the useEffect hook to fetch recommendations\nuseEffect(() => {\n  const accessToken = localStorage.getItem('access_token');\n  if (accessToken) {\n    getRecommendations(accessToken).then(recommendedTracks => {\n      // Handle recommended tracks\n      console.log('Recommended Tracks:', recommendedTracks);\n    }).catch(error => {\n      console.error('Error fetching recommendations:', error);\n    });\n  } else {\n    console.error('Access token not found');\n  }\n}, []);\n\n// Authorization code handler\nasync function handleAuthorizationCode() {\n  const params = new URLSearchParams(window.location.search);\n  const authorizationCode = params.get('code');\n  if (authorizationCode) {\n    try {\n      const response = await fetch('https://accounts.spotify.com/api/token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Authorization: `Basic ${btoa(`${clientId}:${clientSecret}`)}`\n        },\n        body: `grant_type=authorization_code&code=${authorizationCode}&redirect_uri=${redirectUri}`\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to exchange authorization code for access token. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      const accessToken = data.access_token;\n      if (!accessToken) {\n        throw new Error('Access token not found in response');\n      }\n      localStorage.setItem('access_token', accessToken);\n      window.location.href = '/';\n    } catch (error) {\n      console.error('Error exchanging authorization code:', error);\n    }\n  }\n}\n\n// Fetch user profile\nasync function getProfile(accessToken, refreshToken) {\n  try {\n    const response = await fetch('https://api.spotify.com/v1/me', {\n      headers: {\n        Authorization: 'Bearer ' + accessToken\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    if (error.message === \"Unauthorized\") {\n      try {\n        const newAccessToken = await refreshAccessToken(refreshToken);\n        localStorage.setItem('access_token', newAccessToken);\n        return getProfile(newAccessToken, refreshToken);\n      } catch (refreshError) {\n        console.error('Error refreshing access token:', refreshError);\n        throw refreshError;\n      }\n    } else {\n      throw error;\n    }\n  }\n}\n\n// Refresh access token\nasync function refreshAccessToken(refreshToken) {\n  const clientCredentials = btoa(`${spotifyClientId}:${spotifyClientSecret}`);\n  const spotifyTokenResponse = await fetch(\"https://accounts.spotify.com/api/token\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization: `Basic ${clientCredentials}`\n    },\n    body: `grant_type=refresh_token&refresh_token=${refreshToken}`,\n    cache: \"no-cache\"\n  });\n  const spotifyTokenData = await spotifyTokenResponse.json();\n  return spotifyTokenData.access_token;\n}\nfunction Home() {\n  _s();\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [theme, setTheme] = useState(() => localStorage.getItem('theme') || 'main');\n  const handleLogin = () => {\n    window.location.href = `https://accounts.spotify.com/authorize?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}&scope=user-read-private%20user-read-email`;\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    setLoggedIn(false);\n    window.location.href = '/';\n  };\n  useEffect(() => {\n    handleAuthorizationCode();\n  }, []);\n  useEffect(() => {\n    const lastCity = localStorage.getItem('lastCity');\n    if (lastCity) {\n      setCity(lastCity);\n      fetchWeatherData(lastCity);\n    }\n    console.log('Access Token from Local Storage:', localStorage.getItem('access_token'));\n    const accessToken = localStorage.getItem('access_token');\n    if (accessToken) {\n      console.log('Access Token:', accessToken);\n      getProfile(accessToken).then(data => {\n        if (data) {\n          console.log('User Profile:', data);\n          setUserName(data.display_name);\n        }\n      }).catch(error => {\n        console.error('Error fetching user profile:', error);\n      });\n    } else {\n      console.error('Access token not found');\n    }\n  }, []);\n  useEffect(() => {\n    const accessToken = localStorage.getItem('access_token');\n    const refreshToken = localStorage.getItem('refresh_token');\n    if (accessToken) {\n      getProfile(accessToken, refreshToken).then(data => {\n        if (data) {\n          setUserName(data.display_name);\n          setLoggedIn(true);\n        }\n      }).catch(error => {\n        console.error('Error fetching user profile:', error);\n      });\n    } else {\n      console.error('Access token not found');\n    }\n  }, []);\n  useEffect(() => {\n    document.body.classList.toggle('light-theme', theme === 'light');\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  const fetchWeatherData = async city => {\n    try {\n      const response = await fetch(apiUrl + city + `&appid=${apiKey}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setWeatherData(data);\n      setErrorMessage('');\n      localStorage.setItem('lastCity', city);\n    } catch (error) {\n      console.error(error);\n      setWeatherData(null);\n      setErrorMessage('Error fetching weather data. Please try again later.');\n    }\n  };\n  const handleSearch = () => {\n    fetchWeatherData(city);\n  };\n  const handleChange = e => {\n    setCity(e.target.value);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'main' ? 'light' : 'main');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter city name\",\n            spellCheck: \"false\",\n            value: city,\n            onChange: handleChange,\n            onKeyDown: handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSearch,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 38\n        }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hello, \", userName, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Weather in \", weatherData.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temperature: \", Math.round(weatherData.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Humidity: \", weatherData.main.humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind Speed: \", weatherData.wind.speed, \" km/h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), topTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Top Tracks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: topTracks.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [track.name, \" by \", track.artists.map(artist => artist.name).join(', ')]\n          }, track.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-btn\",\n        onClick: toggleTheme,\n        children: \"Theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), loggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login with Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"A++mbAuWhxsHTa/3WbcBVYLp/Co=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","openWeatherApiKey","openWeatherApiUrl","spotifyClientId","spotifyClientSecret","spotifyRedirectUri","jsxDEV","_jsxDEV","Fragment","_Fragment","apiKey","clientId","clientSecret","redirectUri","apiUrl","authenticate","scopes","window","location","href","join","fetchTopTracks","accessToken","response","fetch","headers","Authorization","ok","Error","status","data","json","items","map","track","id","error","console","getRecommendations","token","topTracksIds","res","tracks","localStorage","getItem","then","recommendedTracks","log","catch","handleAuthorizationCode","params","URLSearchParams","search","authorizationCode","get","method","btoa","body","access_token","setItem","getProfile","refreshToken","message","newAccessToken","refreshAccessToken","refreshError","clientCredentials","spotifyTokenResponse","cache","spotifyTokenData","Home","_s","city","setCity","weatherData","setWeatherData","errorMessage","setErrorMessage","userName","setUserName","loggedIn","setLoggedIn","theme","setTheme","handleLogin","handleLogout","removeItem","lastCity","fetchWeatherData","display_name","document","classList","toggle","handleSearch","handleChange","e","target","value","handleKeyDown","key","toggleTheme","prevTheme","children","className","type","placeholder","spellCheck","onChange","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","Math","round","main","temp","humidity","wind","speed","topTracks","length","artists","artist","_c","$RefreshReg$"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { openWeatherApiKey, openWeatherApiUrl, spotifyClientId, spotifyClientSecret, spotifyRedirectUri } from './ApiKeys';\n\n// Constants\nconst apiKey = openWeatherApiKey;\nconst clientId = spotifyClientId;\nconst clientSecret = spotifyClientSecret;\nconst redirectUri = spotifyRedirectUri;\nconst apiUrl = openWeatherApiUrl;\n\n// Authentication flow\nasync function authenticate() {\n    const scopes = ['user-read-private', 'user-read-email'];\n\n    window.location.href = `https://accounts.spotify.com/authorize?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=code`;\n}\n// Function to fetch user's top tracks\nasync function fetchTopTracks(accessToken) {\n    try {\n      const response = await fetch('https://api.spotify.com/v1/me/top/tracks', {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n  \n      if (!response.ok) {\n        throw new Error(`Failed to fetch top tracks. Status: ${response.status}`);\n      }\n  \n      const data = await response.json();\n      return data.items.map(track => track.id);\n    } catch (error) {\n      console.error('Error fetching top tracks:', error);\n      throw error;\n    }\n  }\n  \n  // Function to fetch recommendations based on top tracks\n  async function getRecommendations(token) {\n    try {\n      const topTracksIds = await fetchTopTracks(token);\n  \n      // Endpoint reference: https://developer.spotify.com/documentation/web-api/reference/get-recommendations\n      const res = await fetch(`https://api.spotify.com/v1/recommendations?limit=5&seed_tracks=${topTracksIds.join(',')}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        }\n      });\n  \n      const data = await res.json();\n      return data.tracks;\n    } catch (error) {\n      console.error('Error getting recommendations:', error);\n      throw error;\n    }\n  }\n  \n  // Modify the useEffect hook to fetch recommendations\n  useEffect(() => {\n    const accessToken = localStorage.getItem('access_token');\n    if (accessToken) {\n      getRecommendations(accessToken)\n        .then(recommendedTracks => {\n          // Handle recommended tracks\n          console.log('Recommended Tracks:', recommendedTracks);\n        })\n        .catch(error => {\n          console.error('Error fetching recommendations:', error);\n        });\n    } else {\n      console.error('Access token not found');\n    }\n  }, []);\n  \n\n// Authorization code handler\nasync function handleAuthorizationCode() {\n    const params = new URLSearchParams(window.location.search);\n    const authorizationCode = params.get('code');\n\n    if (authorizationCode) {\n        try {\n            const response = await fetch('https://accounts.spotify.com/api/token', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    Authorization: `Basic ${btoa(`${clientId}:${clientSecret}`)}`\n                },\n                body: `grant_type=authorization_code&code=${authorizationCode}&redirect_uri=${redirectUri}`\n            });\n\n            if (!response.ok) {\n                throw new Error(`Failed to exchange authorization code for access token. Status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            const accessToken = data.access_token;\n\n            if (!accessToken) {\n                throw new Error('Access token not found in response');\n            }\n\n            localStorage.setItem('access_token', accessToken);\n            window.location.href = '/';\n        } catch (error) {\n            console.error('Error exchanging authorization code:', error);\n        }\n    }\n}\n\n// Fetch user profile\nasync function getProfile(accessToken, refreshToken) {\n    try {\n        const response = await fetch('https://api.spotify.com/v1/me', {\n            headers: {\n                Authorization: 'Bearer ' + accessToken\n            }\n        });\n\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        if (error.message === \"Unauthorized\") {\n            try {\n                const newAccessToken = await refreshAccessToken(refreshToken);\n                localStorage.setItem('access_token', newAccessToken);\n                return getProfile(newAccessToken, refreshToken);\n            } catch (refreshError) {\n                console.error('Error refreshing access token:', refreshError);\n                throw refreshError;\n            }\n        } else {\n            throw error;\n        }\n    }\n}\n\n// Refresh access token\nasync function refreshAccessToken(refreshToken) {\n    const clientCredentials = btoa(`${spotifyClientId}:${spotifyClientSecret}`);\n    const spotifyTokenResponse = await fetch(\"https://accounts.spotify.com/api/token\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            Authorization: `Basic ${clientCredentials}`,\n        },\n        body: `grant_type=refresh_token&refresh_token=${refreshToken}`,\n        cache: \"no-cache\"\n    });\n\n    const spotifyTokenData = await spotifyTokenResponse.json();\n    return spotifyTokenData.access_token;\n}\n\nfunction Home() {\n    const [city, setCity] = useState('');\n    const [weatherData, setWeatherData] = useState(null);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [userName, setUserName] = useState('');\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [theme, setTheme] = useState(() => localStorage.getItem('theme') || 'main');\n\n    const handleLogin = () => {\n        window.location.href = `https://accounts.spotify.com/authorize?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}&scope=user-read-private%20user-read-email`;\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n        setLoggedIn(false);\n        window.location.href = '/';\n    };\n\n    useEffect(() => {\n        handleAuthorizationCode();\n    }, []);\n\n    useEffect(() => {\n        const lastCity = localStorage.getItem('lastCity');\n        if (lastCity) {\n            setCity(lastCity);\n            fetchWeatherData(lastCity);\n        }\n\n        console.log('Access Token from Local Storage:', localStorage.getItem('access_token'));\n\n        const accessToken = localStorage.getItem('access_token');\n        if (accessToken) {\n            console.log('Access Token:', accessToken);\n\n            getProfile(accessToken)\n                .then(data => {\n                    if (data) {\n                        console.log('User Profile:', data);\n                        setUserName(data.display_name);\n                    }\n                })\n                .catch(error => {\n                    console.error('Error fetching user profile:', error);\n                });\n        } else {\n            console.error('Access token not found');\n        }\n    }, []);\n\n    useEffect(() => {\n        const accessToken = localStorage.getItem('access_token');\n        const refreshToken = localStorage.getItem('refresh_token');\n\n        if (accessToken) {\n            getProfile(accessToken, refreshToken)\n                .then(data => {\n                    if (data) {\n                        setUserName(data.display_name);\n                        setLoggedIn(true);\n                    }\n                })\n                .catch(error => {\n                    console.error('Error fetching user profile:', error);\n                });\n        } else {\n            console.error('Access token not found');\n        }\n    }, []);\n\n    useEffect(() => {\n        document.body.classList.toggle('light-theme', theme === 'light');\n        localStorage.setItem('theme', theme);\n    }, [theme]);\n\n    const fetchWeatherData = async (city) => {\n        try {\n            const response = await fetch(apiUrl + city + `&appid=${apiKey}`);\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n            const data = await response.json();\n            setWeatherData(data);\n            setErrorMessage('');\n            localStorage.setItem('lastCity', city);\n        } catch (error) {\n            console.error(error);\n            setWeatherData(null);\n            setErrorMessage('Error fetching weather data. Please try again later.');\n        }\n    };\n\n    const handleSearch = () => {\n        fetchWeatherData(city);\n    };\n\n    const handleChange = (e) => {\n        setCity(e.target.value);\n    };\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            handleSearch();\n        }\n    };\n\n    const toggleTheme = () => {\n        setTheme((prevTheme) => (prevTheme === 'main' ? 'light' : 'main'));\n    };\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"card\">\n                    <div className=\"search\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter city name\"\n                            spellCheck=\"false\"\n                            value={city}\n                            onChange={handleChange}\n                            onKeyDown={handleKeyDown}\n                        />\n                        <button onClick={handleSearch}>Search</button>\n                    </div>\n                    {errorMessage && <div className=\"error\"><p>{errorMessage}</p></div>}\n                    {weatherData && (\n                        <div className=\"weather\">\n                            <h3>Hello, {userName}!</h3>\n                            <h2>Weather in {weatherData.name}</h2>\n                            <p>Temperature: {Math.round(weatherData.main.temp)}°C</p>\n                            <p>Humidity: {weatherData.main.humidity}%</p>\n                            <p>Wind Speed: {weatherData.wind.speed} km/h</p>\n                        </div>\n                    )}\n                </div>\n                {/* Display top tracks */}\n          {topTracks.length > 0 && (\n            <div>\n              <h2>Top Tracks</h2>\n              <ul>\n                {topTracks.map(track => (\n                  <li key={track.id}>{track.name} by {track.artists.map(artist => artist.name).join(', ')}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n                <button className=\"theme-btn\" onClick={toggleTheme}>Theme</button>\n                {loggedIn ? (\n                    <button onClick={handleLogout}>Logout</button>\n                ) : (\n                    <button onClick={handleLogin}>Login with Spotify</button>\n                )}\n            </div>\n            \n        </>\n    );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}