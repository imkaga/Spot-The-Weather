{"ast":null,"code":"var _jsxFileName = \"/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getTopArtists, loggedin } from './Utils'; // Import necessary functions from utils.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TierList = () => {\n  _s();\n  var _droppedItems$items;\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n  const [droppedItems, setDroppedItems] = useState({\n    S: [],\n    A: [],\n    B: [],\n    C: [],\n    D: []\n  });\n  const [numArtists, setNumArtists] = useState(10); // Default number of artists to display\n\n  // Function to fetch top artists data\n  useEffect(() => {\n    const fetchTopArtistsData = async () => {\n      try {\n        if (!loggedin()) {\n          console.log('User not logged in');\n          return;\n        }\n        const accessToken = localStorage.getItem('access_token');\n        const initialDroppedItems = tiers.reduce((acc, tier) => {\n          acc[tier] = [];\n          return acc;\n        }, {});\n        let allArtists = [];\n        const artistIdsSet = new Set(); // Use a Set to keep track of unique artist IDs\n        const limit = 100; // Maximum limit to fetch more artists\n        let offset = 0;\n\n        // Fetch more artists than needed to ensure enough unique ones\n        while (artistIdsSet.size < numArtists) {\n          const topArtistsData = await getTopArtists(accessToken, limit, offset);\n          if (!topArtistsData || !topArtistsData.items || topArtistsData.items.length === 0) {\n            break; // No more artists to fetch\n          }\n\n          // Filter and collect unique artists\n          topArtistsData.items.forEach(artist => {\n            if (!artistIdsSet.has(artist.id)) {\n              artistIdsSet.add(artist.id);\n              allArtists.push(artist);\n            }\n          });\n          offset += limit;\n        }\n\n        // Take only the specified number of unique artists\n        const uniqueArtists = allArtists.slice(0, numArtists);\n\n        // Update droppedItems state with fetched artists\n        setDroppedItems({\n          ...initialDroppedItems,\n          items: uniqueArtists\n        });\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Call the function to fetch data when the component mounts or when numArtists changes\n    fetchTopArtistsData();\n  }, [numArtists]); // Trigger effect whenever numArtists changes\n\n  // Function to handle dropping an artist into a tier\n  const handleDrop = (tier, itemId, e) => {\n    e.preventDefault();\n\n    // Add the dropped item (artist) to the specified tier\n    setDroppedItems(prevItems => ({\n      ...prevItems,\n      [tier]: [...prevItems[tier], itemId]\n    }));\n  };\n\n  // Function to remove an artist from a tier\n  const handleClearDrop = (tier, itemId) => {\n    // Remove the dropped item (artist) from the specified tier\n    setDroppedItems(prevItems => ({\n      ...prevItems,\n      [tier]: prevItems[tier].filter(item => item.id !== itemId)\n    }));\n  };\n\n  // Component to render a draggable artist\n  const DraggableArtist = ({\n    artist\n  }) => {\n    const imageUrl = artist.images && artist.images.length > 0 ? artist.images[0].url : '';\n    const handleDragStart = e => {\n      e.dataTransfer.setData('application/json', JSON.stringify({\n        id: artist.id,\n        imageUrl\n      }));\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"draggable-artist\",\n      draggable: true,\n      onDragStart: handleDragStart,\n      children: [imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: artist.name,\n        style: {\n          width: 90,\n          height: 90\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 90,\n          height: 90,\n          backgroundColor: 'lightgray',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: \"No Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: artist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tier-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tier List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tier-list\",\n      children: tiers.map(tier => {\n        var _droppedItems$tier;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tier-pair\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tier-name tier-${tier.toLowerCase()}`,\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: tier\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tier\",\n            style: {\n              minHeight: 100,\n              display: 'flex',\n              flexWrap: 'wrap'\n            },\n            children: (_droppedItems$tier = droppedItems[tier]) === null || _droppedItems$tier === void 0 ? void 0 : _droppedItems$tier.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"artist-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: artist.imageUrl,\n                alt: artist.name,\n                style: {\n                  width: 90,\n                  height: 90\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: artist.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, artist.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, tier, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numArtists\",\n        children: \"Number of Artists:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"numArtists\",\n        value: numArtists,\n        onChange: e => setNumArtists(parseInt(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 25,\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-container\",\n      children: (_droppedItems$items = droppedItems.items) === null || _droppedItems$items === void 0 ? void 0 : _droppedItems$items.map(artist => /*#__PURE__*/_jsxDEV(DraggableArtist, {\n        artist: artist\n      }, artist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(TierList, \"OUD2Sg+Negppj4nmekNfM2j39d0=\");\n_c = TierList;\nexport default TierList;\nvar _c;\n$RefreshReg$(_c, \"TierList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getTopArtists","loggedin","jsxDEV","_jsxDEV","TierList","_s","_droppedItems$items","tiers","droppedItems","setDroppedItems","S","A","B","C","D","numArtists","setNumArtists","fetchTopArtistsData","console","log","accessToken","localStorage","getItem","initialDroppedItems","reduce","acc","tier","allArtists","artistIdsSet","Set","limit","offset","size","topArtistsData","items","length","forEach","artist","has","id","add","push","uniqueArtists","slice","error","handleDrop","itemId","e","preventDefault","prevItems","handleClearDrop","filter","item","DraggableArtist","imageUrl","images","url","handleDragStart","dataTransfer","setData","JSON","stringify","className","draggable","onDragStart","children","src","alt","name","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","display","justifyContent","alignItems","map","_droppedItems$tier","toLowerCase","minHeight","flexWrap","htmlFor","value","onChange","parseInt","target","_c","$RefreshReg$"],"sources":["/Users/kacpertomaszewski/Documents/GitHub/Spot-The-Weather/src/components/TierList.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { getTopArtists, loggedin } from './Utils'; // Import necessary functions from utils.js\n\nconst TierList = () => {\n  const tiers = ['S', 'A', 'B', 'C', 'D'];\n  const [droppedItems, setDroppedItems] = useState({ S: [], A: [], B: [], C: [], D: [] });\n  const [numArtists, setNumArtists] = useState(10); // Default number of artists to display\n\n  // Function to fetch top artists data\n  useEffect(() => {\n    const fetchTopArtistsData = async () => {\n      try {\n        if (!loggedin()) {\n          console.log('User not logged in');\n          return;\n        }\n\n        const accessToken = localStorage.getItem('access_token');\n        const initialDroppedItems = tiers.reduce((acc, tier) => {\n          acc[tier] = [];\n          return acc;\n        }, {});\n\n        let allArtists = [];\n        const artistIdsSet = new Set(); // Use a Set to keep track of unique artist IDs\n        const limit = 100; // Maximum limit to fetch more artists\n        let offset = 0;\n\n        // Fetch more artists than needed to ensure enough unique ones\n        while (artistIdsSet.size < numArtists) {\n          const topArtistsData = await getTopArtists(accessToken, limit, offset);\n          if (!topArtistsData || !topArtistsData.items || topArtistsData.items.length === 0) {\n            break; // No more artists to fetch\n          }\n\n          // Filter and collect unique artists\n          topArtistsData.items.forEach((artist) => {\n            if (!artistIdsSet.has(artist.id)) {\n              artistIdsSet.add(artist.id);\n              allArtists.push(artist);\n            }\n          });\n\n          offset += limit;\n        }\n\n        // Take only the specified number of unique artists\n        const uniqueArtists = allArtists.slice(0, numArtists);\n\n        // Update droppedItems state with fetched artists\n        setDroppedItems({ ...initialDroppedItems, items: uniqueArtists });\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n      }\n    };\n\n    // Call the function to fetch data when the component mounts or when numArtists changes\n    fetchTopArtistsData();\n  }, [numArtists]); // Trigger effect whenever numArtists changes\n\n  // Function to handle dropping an artist into a tier\n  const handleDrop = (tier, itemId, e) => {\n    e.preventDefault();\n\n    // Add the dropped item (artist) to the specified tier\n    setDroppedItems((prevItems) => ({\n      ...prevItems,\n      [tier]: [...prevItems[tier], itemId],\n    }));\n  };\n\n  // Function to remove an artist from a tier\n  const handleClearDrop = (tier, itemId) => {\n    // Remove the dropped item (artist) from the specified tier\n    setDroppedItems((prevItems) => ({\n      ...prevItems,\n      [tier]: prevItems[tier].filter((item) => item.id !== itemId),\n    }));\n  };\n\n  // Component to render a draggable artist\n  const DraggableArtist = ({ artist }) => {\n    const imageUrl = artist.images && artist.images.length > 0 ? artist.images[0].url : '';\n\n    const handleDragStart = (e) => {\n      e.dataTransfer.setData('application/json', JSON.stringify({ id: artist.id, imageUrl }));\n    };\n\n    return (\n      <div className=\"draggable-artist\" draggable onDragStart={handleDragStart}>\n        {imageUrl ? (\n          <img src={imageUrl} alt={artist.name} style={{ width: 90, height: 90 }} />\n        ) : (\n          <div style={{ width: 90, height: 90, backgroundColor: 'lightgray', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            No Image\n          </div>\n        )}\n        <p>{artist.name}</p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"tier-list-container\">\n      <h1>Tier List</h1>\n\n      {/* Render Tier components for each tier */}\n      <div className=\"tier-list\">\n        {tiers.map((tier) => (\n          <div key={tier} className=\"tier-pair\">\n            <div className={`tier-name tier-${tier.toLowerCase()}`}>\n              <h2>{tier}</h2>\n            </div>\n            {/* Render Tier for the current tier */}\n            <div className=\"tier\" style={{ minHeight: 100, display: 'flex', flexWrap: 'wrap' }}>\n              {/* Render dropped items (artists) for the current tier */}\n              {droppedItems[tier]?.map((artist) => (\n                <div key={artist.id} className=\"artist-item\">\n                  <img src={artist.imageUrl} alt={artist.name} style={{ width: 90, height: 90 }} />\n                  <p>{artist.name}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Dropdown to select number of artists */}\n      <div>\n        <label htmlFor=\"numArtists\">Number of Artists:</label>\n        <select id=\"numArtists\" value={numArtists} onChange={(e) => setNumArtists(parseInt(e.target.value))}>\n          <option value={10}>10</option>\n          <option value={25}>25</option>\n          <option value={50}>50</option>\n        </select>\n      </div>\n\n      {/* Render draggable items (artists) */}\n      <div className=\"items-container\">\n        {droppedItems.items?.map((artist) => (\n          <DraggableArtist key={artist.id} artist={artist} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TierList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}